
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d412662 in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:38

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d412662 in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:38
#1  0x00007fbc9d69a721 in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#3  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="7f43c42fc2841cdc6a4315f47feb256213b51ba6b30b3d17e18055ea6513ce94 d2bdbd1bbf05a8528d270924a707d1d7c2cef0112a80d06dbc12e2e658b0d4ef dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150 6f6f3"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#4  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#5  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d41265e in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:38

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d41265e in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:38
#1  0x00007fbc9d69a701 in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x00007fbc9d65551a in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#3  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="7f43c42fc2841cdc6a4315f47feb256213b51ba6b30b3d17e18055ea6513ce94 d2bdbd1bbf05a8528d270924a707d1d7c2cef0112a80d06dbc12e2e658b0d4ef dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150 6f6f3"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#4  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#5  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d6553c9 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d6553c9 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="7f43c42fc2841cdc6a4315f47feb256213b51ba6b30b3d17e18055ea6513ce94 d2bdbd1bbf05a8528d270924a707d1d7c2cef0112a80d06dbc12e2e658b0d4ef dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150 6f6f3"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#2  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#3  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d40c0c0 in _IO_ungetc (c=48, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:34

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d40c0c0 in _IO_ungetc (c=48, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:34
#1  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="cb1d944f047d1769c101172c1e220284ff3b767583b960441907c12459b108a9 e5b00075ebd7559ffd02d25e81363c0873e6e4b4e0c1dc47c57f1438afbefd50 c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc 91192"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d69a6fc in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d69a6fc in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x00007fbc9d65551a in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="e5b00075ebd7559ffd02d25e81363c0873e6e4b4e0c1dc47c57f1438afbefd50 c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc 911921e1795c625d653b6b94a2dd3e69b192f92ea3ac1812a1436ade8156cbe8 57c6a"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d65540a in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d65540a in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="cb1d944f047d1769c101172c1e220284ff3b767583b960441907c12459b108a9 c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc 911921e1795c625d653b6b94a2dd3e69b192f92ea3ac1812a1436ade8156cbe8 57c6a"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#2  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#3  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d40c0c6 in _IO_ungetc (c=56, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:36

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d40c0c6 in _IO_ungetc (c=56, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:36
#1  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="cb1d944f047d1769c101172c1e220284ff3b767583b960441907c12459b108a9 031a480d6e83f8d96cf8ac56f03013e914e8df4b68b4392d3ef182ec9d858b4d a54b8056b38cf69d03d462ac28d070e98f0159c3ba45093bab356ffc98391a8b 6bd54"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d40c168 in _IO_ungetc (c=<optimized out>, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:37

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d40c168 in _IO_ungetc (c=<optimized out>, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:37
#1  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="63e8ee75374cba43525d815aa19bcad06ef53a1ddcc3e5043fc42f3f18cbbca5 43e255cca92dafcf2d317e795c006ab3ebfcf833fc3a9a9c82cc3cb0a1b5251f d9e22d941aad4f4d2bb3405e6d5c754d01f75040bdbf177f879fbf94caa74e6f 7f6d8"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d655578 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d655578 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc d5c21b455aa4e3ac8a97bedd4a6a5328a32ee68351dd7b816cd2aae463211b12 43e255cca92dafcf2d317e795c006ab3ebfcf833fc3a9a9c82cc3cb0a1b5251f 6bd54"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#2  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#3  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=av@entry=0x7fbc9d56fb80 <main_arena>, bytes=bytes@entry=32768) at malloc.c:4116

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  _int_malloc (av=av@entry=0x7fbc9d56fb80 <main_arena>, bytes=bytes@entry=32768) at malloc.c:4116
#1  0x00007fbc9d4212d4 in __GI___libc_malloc (bytes=32768) at malloc.c:3058
#2  0x00007fbc9d63bc29 in operator new(unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#3  0x000055d939da8ac9 in __gnu_cxx::new_allocator<PageId>::allocate (this=<optimized out>, __n=<optimized out>) at /usr/include/c++/9/ext/new_allocator.h:102
#4  std::allocator_traits<std::allocator<PageId> >::allocate (__a=..., __n=<optimized out>) at /usr/include/c++/9/bits/alloc_traits.h:444
#5  std::_Vector_base<PageId, std::allocator<PageId> >::_M_allocate (this=<optimized out>, __n=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:343
#6  std::vector<PageId, std::allocator<PageId> >::_M_realloc_insert<PageId const&> (this=0x7ffde233ff58, __position={id = <error: Cannot access memory at address 0x3437306330343835>}) at /usr/include/c++/9/bits/vector.tcc:440
#7  0x000055d939da9da0 in std::vector<PageId, std::allocator<PageId> >::push_back (__x=..., this=0x7ffde233ff58) at /usr/include/c++/9/bits/stl_iterator.h:806
#8  Page::addLink (link=..., this=0x7ffde233ff10) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:38
#9  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:128
#10 0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d4125b1 in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:37

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d4125b1 in _IO_getc (fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at getc.c:37
#1  0x00007fbc9d69a701 in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x00007fbc9d65551a in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#3  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="57c6a3e243106fc3eb9e25738d9ead5886a27d552e8ecb684a46685d8eccbcdd a54b8056b38cf69d03d462ac28d070e98f0159c3ba45093bab356ffc98391a8b 6bd5434d41d13bac35b8b2ec0d23292a583b68d466c133801aea9f9e8c259470 7f6d8"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#4  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#5  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d40c0c4 in _IO_ungetc (c=56, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:36

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d40c0c4 in _IO_ungetc (c=56, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:36
#1  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc 911921e1795c625d653b6b94a2dd3e69b192f92ea3ac1812a1436ade8156cbe8 031a480d6e83f8d96cf8ac56f03013e914e8df4b68b4392d3ef182ec9d858b4d 43e25"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d40c0c0 in _IO_ungetc (c=53, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:34

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d40c0c0 in _IO_ungetc (c=53, fp=0x7fbc9d56f980 <_IO_2_1_stdin_>) at ioungetc.c:34
#1  0x00007fbc9d655477 in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="a54b8056b38cf69d03d462ac28d070e98f0159c3ba45093bab356ffc98391a8b 893831344e92c44eee5d4bede439612937fe03f1c9e5a50e43a3e0c664fd1223 b79c8ec9ac496321f5d6dfacb31a1b6679e81f22ef579aff18a8472b5492d8db 4d1e6"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#3  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#4  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d65544b in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d65544b in std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939da97e4 in std::getline<char, std::char_traits<char>, std::allocator<char> > (__str="cb1d944f047d1769c101172c1e220284ff3b767583b960441907c12459b108a9 e5b00075ebd7559ffd02d25e81363c0873e6e4b4e0c1dc47c57f1438afbefd50 c39edd7039c6d77e34ced895f070f05795b42216da23500f5afb592f6047a9dc d9e22"..., __is=...) at /usr/include/c++/9/bits/locale_facets.h:875
#2  StdinGenerator::generateNetworkOfSize (this=<optimized out>, size=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/networkGenerator.hpp:123
#3  0x000055d939da4ee0 in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 35132]
[New LWP 35133]
[New LWP 35134]
[New LWP 35135]
[New LWP 35136]
[New LWP 35137]
[New LWP 35139]
[New LWP 35140]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc999f7700 (LWP 35140)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc74001570, fd=11) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=11, buf=0x7fbc74001570, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc74000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc74000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "0c1f851467cbac0bfb647850fcb992a6f9014dfb73750f4249e9d22c2e09cf99", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "0c1f851467cbac0bfb647850fcb992a6f9014dfb73750f4249e9d22c2e09cf99", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc999f6e20 "0c1f851467cbac0bfb647850fcb992a6f9014dfb73750f4249e9d22c2e09cf99", n=65, fp=0x7fbc74000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc74000bd0, __n=65, __s=0x7fbc999f6e20 "0c1f851467cbac0bfb647850fcb992a6f9014dfb73750f4249e9d22c2e09cf99") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Stupid fox does regularly. Version id: 7 ; 04/23/2012 04:01 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d2037b0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4c60d0, __closure=0x55d93b4c60d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4c60c0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9a1f8700 (LWP 35139)):
#0  clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:78
#1  0x00007fbc9d493ac4 in __spawnix (pid=pid@entry=0x7fbc80000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9a1f7b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a1f7b70, envp=0x7ffde2340460, xflags=0, exec=0x7fbc9d46a2f0 <execve>) at ../sysdeps/unix/sysv/linux/spawni.c:382
#2  0x00007fbc9d49415b in __spawni (pid=pid@entry=0x7fbc80000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", acts=acts@entry=0x7fbc9a1f7b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a1f7b70, envp=<optimized out>, xflags=0) at ../sysdeps/unix/sysv/linux/spawni.c:431
#3  0x00007fbc9d49391f in __GI___posix_spawn (pid=pid@entry=0x7fbc80000cb0, path=path@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9a1f7b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a1f7b70, envp=<optimized out>) at spawn.c:30
#4  0x00007fbc9d40b30d in spawn_process (child_pipe_fd=1, child_end=1, parent_end=0, pipe_fds=0x7fbc9a1f7b68, do_cloexec=0, command=0x0, fp=0x7fbc80000bd0, fa=0x7fbc9a1f7b90) at iopopen.c:88
#5  _IO_new_proc_open (fp=fp@entry=0x7fbc80000bd0, command=command@entry=0x7fbc80000b60 "printf \"Huge tiger runs crazily. Version id: 39 ; 09/02/1992 09:21 AM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:197
#6  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc80000b60 "printf \"Huge tiger runs crazily. Version id: 39 ; 09/02/1992 09:21 AM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#7  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Huge tiger runs crazily. Version id: 39 ; 09/02/1992 09:21 AM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#8  Page::generateId (this=0x7fbc9d2038d0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#9  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b52acf0, __closure=0x55d93b52acf0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#10 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#11 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#12 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b52ace8) at /usr/include/c++/9/thread:244
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b52ace8) at /usr/include/c++/9/thread:251
#14 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b52ace0) at /usr/include/c++/9/thread:195
#15 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#16 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#17 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9a9f9700 (LWP 35137)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc7c0015c0, fd=8) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=8, buf=0x7fbc7c0015c0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc7c000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc7c000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc7c000bd0, buf=buf@entry=0x7fbc9a9f8e20 "a7d4289da9bca03da61fa9e82a91a88e3e393871a91ebc78e1ce7b502fe8df66", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc7c000bd0, buf=buf@entry=0x7fbc9a9f8e20 "a7d4289da9bca03da61fa9e82a91a88e3e393871a91ebc78e1ce7b502fe8df66", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9a9f8e20 "a7d4289da9bca03da61fa9e82a91a88e3e393871a91ebc78e1ce7b502fe8df66", n=65, fp=0x7fbc7c000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc7c000bd0, __n=65, __s=0x7fbc9a9f8e20 "a7d4289da9bca03da61fa9e82a91a88e3e393871a91ebc78e1ce7b502fe8df66") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Old fox does dutifully. Version id: 79 ; 08/18/1998 10:05 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d203750, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b5b4900, __closure=0x55d93b5b4900, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b5b48f0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9b1fa700 (LWP 35136)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc840015c0, fd=4) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=4, buf=0x7fbc840015c0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc84000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc84000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc84000bd0, buf=buf@entry=0x7fbc9b1f9e20 "bbf3933ae23a1a4ed5e90782714d2cd815c8f84cde00220679c2f97384a73517", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc84000bd0, buf=buf@entry=0x7fbc9b1f9e20 "bbf3933ae23a1a4ed5e90782714d2cd815c8f84cde00220679c2f97384a73517", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9b1f9e20 "bbf3933ae23a1a4ed5e90782714d2cd815c8f84cde00220679c2f97384a73517", n=65, fp=0x7fbc84000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc84000bd0, __n=65, __s=0x7fbc9b1f9e20 "bbf3933ae23a1a4ed5e90782714d2cd815c8f84cde00220679c2f97384a73517") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Large spider calls cheerfully. Version id: 11 ; 01/31/1992 09:47 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d203810, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b53bc30, __closure=0x55d93b53bc30, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b53bc28) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b53bc28) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b53bc20) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9b9fb700 (LWP 35135)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc88000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc88000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc88000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="Odd bear needs regularly. Version id: 84 ; 08/12/2019 05:03 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d203630, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b582cc0, __closure=0x55d93b582cc0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b582cb8) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b582cb8) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b582cb0) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9c1fc700 (LWP 35134)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc8c000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc8c000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc8c000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="Adorable car hits dutifully. Version id: 54 ; 10/06/2003 10:57 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d203270, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b56d450, __closure=0x55d93b56d450, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b56d448) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b56d448) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b56d440) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9c9fd700 (LWP 35133)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b4bc in _IO_new_proc_open (fp=fp@entry=0x7fbc90000bd0, command=command@entry=0x7fbc90000b60 "printf \"Odd koala wants randomly. Version id: 86 ; 04/19/1996 11:31 AM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:195
#2  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc90000b60 "printf \"Odd koala wants randomly. Version id: 86 ; 04/19/1996 11:31 AM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#3  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Odd koala wants randomly. Version id: 86 ; 04/19/1996 11:31 AM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#4  Page::generateId (this=0x7fbc9d203930, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#5  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4d39d0, __closure=0x55d93b4d39d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#6  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:251
#10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4d39c0) at /usr/include/c++/9/thread:195
#11 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc9d1fe700 (LWP 35132)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc940015c0, fd=5) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=5, buf=0x7fbc940015c0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc94000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc94000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc94000bd0, buf=buf@entry=0x7fbc9d1fde20 "40aa7286cb1cd6260418a0c76c4d7f1c24b39a337be5d0fabcc5a7c76408fea4", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc94000bd0, buf=buf@entry=0x7fbc9d1fde20 "40aa7286cb1cd6260418a0c76c4d7f1c24b39a337be5d0fabcc5a7c76408fea4", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9d1fde20 "40aa7286cb1cd6260418a0c76c4d7f1c24b39a337be5d0fabcc5a7c76408fea4", n=65, fp=0x7fbc94000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc94000bd0, __n=65, __s=0x7fbc9d1fde20 "40aa7286cb1cd6260418a0c76c4d7f1c24b39a337be5d0fabcc5a7c76408fea4") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Small car looks dutifully. Version id: 69 ; 09/24/2007 07:45 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d203870, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4acf10, __closure=0x55d93b4acf10, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4acf08) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4acf08) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4acf00) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939dac1c8 in MultiThreadedPageRankComputer::Pool::join (this=0x7ffde233fbd0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:83
#3  MultiThreadedPageRankComputer::generatePageIds (network=..., pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:190
#4  MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:29
#5  0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#6  0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 35132]
[New LWP 35133]
[New LWP 35134]
[New LWP 35135]
[New LWP 35136]
[New LWP 35137]
[New LWP 35139]
[New LWP 35140]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc999f7700 (LWP 35140)):
#0  clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:78
#1  0x00007fbc9d493ac4 in __spawnix (pid=pid@entry=0x7fbc74000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc999f6b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc999f6b70, envp=0x7ffde2340460, xflags=0, exec=0x7fbc9d46a2f0 <execve>) at ../sysdeps/unix/sysv/linux/spawni.c:382
#2  0x00007fbc9d49415b in __spawni (pid=pid@entry=0x7fbc74000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", acts=acts@entry=0x7fbc999f6b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc999f6b70, envp=<optimized out>, xflags=0) at ../sysdeps/unix/sysv/linux/spawni.c:431
#3  0x00007fbc9d49391f in __GI___posix_spawn (pid=pid@entry=0x7fbc74000cb0, path=path@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc999f6b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc999f6b70, envp=<optimized out>) at spawn.c:30
#4  0x00007fbc9d40b30d in spawn_process (child_pipe_fd=1, child_end=1, parent_end=0, pipe_fds=0x7fbc999f6b68, do_cloexec=0, command=0x0, fp=0x7fbc74000bd0, fa=0x7fbc999f6b90) at iopopen.c:88
#5  _IO_new_proc_open (fp=fp@entry=0x7fbc74000bd0, command=command@entry=0x7fbc74000b60 "printf \"Great tiger looks randomly. Version id: 68 ; 01/18/2005 11:37 AM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:197
#6  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc74000b60 "printf \"Great tiger looks randomly. Version id: 68 ; 01/18/2005 11:37 AM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#7  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Great tiger looks randomly. Version id: 68 ; 01/18/2005 11:37 AM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#8  Page::generateId (this=0x7fbc9d209b10, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#9  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4c60d0, __closure=0x55d93b4c60d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#10 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#11 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#12 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:244
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:251
#14 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4c60c0) at /usr/include/c++/9/thread:195
#15 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#16 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#17 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9a1f8700 (LWP 35139)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc800020e0, fd=3) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=3, buf=0x7fbc800020e0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc80000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc80000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "79008062eadee70ba4c5f53ef7b58c4cea5a99c8c235dbf911ec9eafea95cc16", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "79008062eadee70ba4c5f53ef7b58c4cea5a99c8c235dbf911ec9eafea95cc16", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9a1f7e20 "79008062eadee70ba4c5f53ef7b58c4cea5a99c8c235dbf911ec9eafea95cc16", n=65, fp=0x7fbc80000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc80000bd0, __n=65, __s=0x7fbc9a1f7e20 "79008062eadee70ba4c5f53ef7b58c4cea5a99c8c235dbf911ec9eafea95cc16") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Clueless boy asks occasionally. Version id: 62 ; 10/19/1994 09:24 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d209ab0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b52acf0, __closure=0x55d93b52acf0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b52ace8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b52ace8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b52ace0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9a9f9700 (LWP 35137)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc7c001f20, fd=5) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=5, buf=0x7fbc7c001f20, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc7c000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc7c000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc7c000bd0, buf=buf@entry=0x7fbc9a9f8e20 "dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc7c000bd0, buf=buf@entry=0x7fbc9a9f8e20 "dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9a9f8e20 "dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150", n=65, fp=0x7fbc7c000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc7c000bd0, __n=65, __s=0x7fbc9a9f8e20 "dfdd12c1cddef0f80e27704c4cc1cc9ecf062e3d4b63b7ce98e31cc849fbd150") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Stupid koala barfs randomly. Version id: 13 ; 05/12/1998 02:23 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d2089d0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b5b4900, __closure=0x55d93b5b4900, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b5b48f0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9b1fa700 (LWP 35136)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc84001f70, fd=8) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=8, buf=0x7fbc84001f70, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc84000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc84000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc84000bd0, buf=buf@entry=0x7fbc9b1f9e20 "81528dfb7c54a72ac3f9a924a24c5e7435dc8f8ee9e68a28f1c53f45630f4e8f", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc84000bd0, buf=buf@entry=0x7fbc9b1f9e20 "81528dfb7c54a72ac3f9a924a24c5e7435dc8f8ee9e68a28f1c53f45630f4e8f", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9b1f9e20 "81528dfb7c54a72ac3f9a924a24c5e7435dc8f8ee9e68a28f1c53f45630f4e8f", n=65, fp=0x7fbc84000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc84000bd0, __n=65, __s=0x7fbc9b1f9e20 "81528dfb7c54a72ac3f9a924a24c5e7435dc8f8ee9e68a28f1c53f45630f4e8f") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Huge cat calls dutifully. Version id: 56 ; 10/03/2002 02:57 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d209b70, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b53bc30, __closure=0x55d93b53bc30, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b53bc28) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b53bc28) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b53bc20) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9b9fb700 (LWP 35135)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc88000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc88000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc88000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="New cat works cheerfully. Version id: 1 ; 01/16/1997 05:31 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d209930, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b582cc0, __closure=0x55d93b582cc0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b582cb8) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b582cb8) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b582cb0) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9c1fc700 (LWP 35134)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc8c0020b0, fd=7) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=7, buf=0x7fbc8c0020b0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc8c000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc8c000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc8c000bd0, buf=buf@entry=0x7fbc9c1fbe20 "e3a0e1206f4975620de0aebfbc5dd591459349f3d79bd34f77a6438a3933e02c", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc8c000bd0, buf=buf@entry=0x7fbc9c1fbe20 "e3a0e1206f4975620de0aebfbc5dd591459349f3d79bd34f77a6438a3933e02c", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9c1fbe20 "e3a0e1206f4975620de0aebfbc5dd591459349f3d79bd34f77a6438a3933e02c", n=65, fp=0x7fbc8c000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc8c000bd0, __n=65, __s=0x7fbc9c1fbe20 "e3a0e1206f4975620de0aebfbc5dd591459349f3d79bd34f77a6438a3933e02c") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Dirty spider asks cheerfully. Version id: 4 ; 10/17/2016 07:23 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d209a50, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b56d450, __closure=0x55d93b56d450, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b56d448) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b56d448) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b56d440) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9c9fd700 (LWP 35133)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc900020e0, fd=12) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=12, buf=0x7fbc900020e0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc90000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc90000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc90000bd0, buf=buf@entry=0x7fbc9c9fce20 "699d3639106a4dda5b6e711a65c835b9de0c9885cd2d677425e82994d984aec8", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc90000bd0, buf=buf@entry=0x7fbc9c9fce20 "699d3639106a4dda5b6e711a65c835b9de0c9885cd2d677425e82994d984aec8", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9c9fce20 "699d3639106a4dda5b6e711a65c835b9de0c9885cd2d677425e82994d984aec8", n=65, fp=0x7fbc90000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc90000bd0, __n=65, __s=0x7fbc9c9fce20 "699d3639106a4dda5b6e711a65c835b9de0c9885cd2d677425e82994d984aec8") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Dirty tiger drives dutifully. Version id: 59 ; 05/08/2005 04:33 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d209750, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4d39d0, __closure=0x55d93b4d39d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4d39c0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc9d1fe700 (LWP 35132)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b4bc in _IO_new_proc_open (fp=fp@entry=0x7fbc94000bd0, command=command@entry=0x7fbc94000b60 "printf \"Clueless boy runs cheerfully. Version id: 2 ; 02/19/2013 08:18 AM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:195
#2  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc94000b60 "printf \"Clueless boy runs cheerfully. Version id: 2 ; 02/19/2013 08:18 AM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#3  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Clueless boy runs cheerfully. Version id: 2 ; 02/19/2013 08:18 AM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#4  Page::generateId (this=0x7fbc9d209bd0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#5  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4acf10, __closure=0x55d93b4acf10, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#6  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4acf08) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4acf08) at /usr/include/c++/9/thread:251
#10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4acf00) at /usr/include/c++/9/thread:195
#11 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939dac1c8 in MultiThreadedPageRankComputer::Pool::join (this=0x7ffde233fbd0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:83
#3  MultiThreadedPageRankComputer::generatePageIds (network=..., pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:190
#4  MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:29
#5  0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#6  0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 35132]
[New LWP 35133]
[New LWP 35134]
[New LWP 35135]
[New LWP 35136]
[New LWP 35137]
[New LWP 35139]
[New LWP 35140]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc999f7700 (LWP 35140)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc74002ba0, fd=3) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=3, buf=0x7fbc74002ba0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc74000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc74000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "488cb9deb742c9143c3089aa8880427d6ae49ada828e7b929f2826bfd7b517e7", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "488cb9deb742c9143c3089aa8880427d6ae49ada828e7b929f2826bfd7b517e7", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc999f6e20 "488cb9deb742c9143c3089aa8880427d6ae49ada828e7b929f2826bfd7b517e7", n=65, fp=0x7fbc74000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc74000bd0, __n=65, __s=0x7fbc999f6e20 "488cb9deb742c9143c3089aa8880427d6ae49ada828e7b929f2826bfd7b517e7") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Old fox drives crazily. Version id: 31 ; 11/26/2017 10:43 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d210890, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4c60d0, __closure=0x55d93b4c60d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4c60c0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9a1f8700 (LWP 35139)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc80002b80, fd=5) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=5, buf=0x7fbc80002b80, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc80000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc80000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "7581d0bb0ba86e945e8a90679d609ad7aa9e0bf0e7f08d28b16a2a9c64b2b1ce", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "7581d0bb0ba86e945e8a90679d609ad7aa9e0bf0e7f08d28b16a2a9c64b2b1ce", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9a1f7e20 "7581d0bb0ba86e945e8a90679d609ad7aa9e0bf0e7f08d28b16a2a9c64b2b1ce", n=65, fp=0x7fbc80000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc80000bd0, __n=65, __s=0x7fbc9a1f7e20 "7581d0bb0ba86e945e8a90679d609ad7aa9e0bf0e7f08d28b16a2a9c64b2b1ce") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Old boy drives randomly. Version id: 100 ; 04/29/2009 07:17 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d210950, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b52acf0, __closure=0x55d93b52acf0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b52ace8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b52ace8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b52ace0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9a9f9700 (LWP 35137)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc7c000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc7c000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc7c000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="Big girl drives regularly. Version id: 45 ; 07/11/2015 06:59 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d210770, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b5b4900, __closure=0x55d93b5b4900, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b5b48f0) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9b1fa700 (LWP 35136)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b4bc in _IO_new_proc_open (fp=fp@entry=0x7fbc84000bd0, command=command@entry=0x7fbc84000b60 "printf \"New koala hits merrily. Version id: 77 ; 10/19/2016 12:37 PM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:195
#2  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc84000b60 "printf \"New koala hits merrily. Version id: 77 ; 10/19/2016 12:37 PM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#3  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="New koala hits merrily. Version id: 77 ; 10/19/2016 12:37 PM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#4  Page::generateId (this=0x7fbc9d210a10, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#5  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b53bc30, __closure=0x55d93b53bc30, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#6  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b53bc28) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b53bc28) at /usr/include/c++/9/thread:251
#10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b53bc20) at /usr/include/c++/9/thread:195
#11 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9b9fb700 (LWP 35135)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc880028d0, fd=7) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=7, buf=0x7fbc880028d0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc88000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc88000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc88000bd0, buf=buf@entry=0x7fbc9b9fae20 "e207b19d2e6f7fa81da69f8c3ffe82bffa4206c306a92f6a87860e794a9d674a", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc88000bd0, buf=buf@entry=0x7fbc9b9fae20 "e207b19d2e6f7fa81da69f8c3ffe82bffa4206c306a92f6a87860e794a9d674a", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9b9fae20 "e207b19d2e6f7fa81da69f8c3ffe82bffa4206c306a92f6a87860e794a9d674a", n=65, fp=0x7fbc88000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc88000bd0, __n=65, __s=0x7fbc9b9fae20 "e207b19d2e6f7fa81da69f8c3ffe82bffa4206c306a92f6a87860e794a9d674a") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Adorable fox asks merrily. Version id: 51 ; 07/04/1991 09:18 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d2107d0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b582cc0, __closure=0x55d93b582cc0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b582cb8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b582cb8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b582cb0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9c1fc700 (LWP 35134)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b4bc in _IO_new_proc_open (fp=fp@entry=0x7fbc8c000bd0, command=command@entry=0x7fbc8c000b60 "printf \"Stupid wolf barfs foolishly. Version id: 67 ; 03/14/2004 04:05 PM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:195
#2  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc8c000b60 "printf \"Stupid wolf barfs foolishly. Version id: 67 ; 03/14/2004 04:05 PM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#3  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Stupid wolf barfs foolishly. Version id: 67 ; 03/14/2004 04:05 PM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#4  Page::generateId (this=0x7fbc9d2109b0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#5  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b56d450, __closure=0x55d93b56d450, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#6  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b56d448) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b56d448) at /usr/include/c++/9/thread:251
#10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b56d440) at /usr/include/c++/9/thread:195
#11 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9c9fd700 (LWP 35133)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b4bc in _IO_new_proc_open (fp=fp@entry=0x7fbc90000bd0, command=command@entry=0x7fbc90000b60 "printf \"New tiger jumps foolishly. Version id: 98 ; 04/13/2014 12:23 AM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:195
#2  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc90000b60 "printf \"New tiger jumps foolishly. Version id: 98 ; 04/13/2014 12:23 AM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#3  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="New tiger jumps foolishly. Version id: 98 ; 04/13/2014 12:23 AM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#4  Page::generateId (this=0x7fbc9d2108f0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#5  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4d39d0, __closure=0x55d93b4d39d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#6  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:251
#10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4d39c0) at /usr/include/c++/9/thread:195
#11 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc9d1fe700 (LWP 35132)):
#0  clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:78
#1  0x00007fbc9d493ac4 in __spawnix (pid=pid@entry=0x7fbc94000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9d1fdb90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9d1fdb70, envp=0x7ffde2340460, xflags=0, exec=0x7fbc9d46a2f0 <execve>) at ../sysdeps/unix/sysv/linux/spawni.c:382
#2  0x00007fbc9d49415b in __spawni (pid=pid@entry=0x7fbc94000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", acts=acts@entry=0x7fbc9d1fdb90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9d1fdb70, envp=<optimized out>, xflags=0) at ../sysdeps/unix/sysv/linux/spawni.c:431
#3  0x00007fbc9d49391f in __GI___posix_spawn (pid=pid@entry=0x7fbc94000cb0, path=path@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9d1fdb90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9d1fdb70, envp=<optimized out>) at spawn.c:30
#4  0x00007fbc9d40b30d in spawn_process (child_pipe_fd=1, child_end=1, parent_end=0, pipe_fds=0x7fbc9d1fdb68, do_cloexec=0, command=0x0, fp=0x7fbc94000bd0, fa=0x7fbc9d1fdb90) at iopopen.c:88
#5  _IO_new_proc_open (fp=fp@entry=0x7fbc94000bd0, command=command@entry=0x7fbc94000b60 "printf \"Stupid dog works crazily. Version id: 14 ; 03/06/1991 04:07 PM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:197
#6  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc94000b60 "printf \"Stupid dog works crazily. Version id: 14 ; 03/06/1991 04:07 PM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#7  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Stupid dog works crazily. Version id: 14 ; 03/06/1991 04:07 PM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#8  Page::generateId (this=0x7fbc9d210830, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#9  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4acf10, __closure=0x55d93b4acf10, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#10 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#11 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#12 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4acf08) at /usr/include/c++/9/thread:244
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4acf08) at /usr/include/c++/9/thread:251
#14 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4acf00) at /usr/include/c++/9/thread:195
#15 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#16 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#17 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939dac1c8 in MultiThreadedPageRankComputer::Pool::join (this=0x7ffde233fbd0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:83
#3  MultiThreadedPageRankComputer::generatePageIds (network=..., pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:190
#4  MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:29
#5  0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#6  0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 35132]
[New LWP 35133]
[New LWP 35134]
[New LWP 35135]
[New LWP 35136]
[New LWP 35137]
[New LWP 35139]
[New LWP 35140]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc999f7700 (LWP 35140)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc740034b0, fd=4) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=4, buf=0x7fbc740034b0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc74000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc74000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "904c6f6fbafd51ff059e3afc599b26a6031605fa1b3ccbc85cadb981a6d88751", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc74000bd0, buf=buf@entry=0x7fbc999f6e20 "904c6f6fbafd51ff059e3afc599b26a6031605fa1b3ccbc85cadb981a6d88751", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc999f6e20 "904c6f6fbafd51ff059e3afc599b26a6031605fa1b3ccbc85cadb981a6d88751", n=65, fp=0x7fbc74000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc74000bd0, __n=65, __s=0x7fbc999f6e20 "904c6f6fbafd51ff059e3afc599b26a6031605fa1b3ccbc85cadb981a6d88751") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Stupid spider jumps randomly. Version id: 84 ; 11/09/2015 03:04 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d216e30, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4c60d0, __closure=0x55d93b4c60d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4c60c8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4c60c0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9a1f8700 (LWP 35139)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc80003710, fd=7) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=7, buf=0x7fbc80003710, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc80000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc80000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "4a543b263f67361b61b59c62ef712e3fbed8d5ea603db9166609841ccff44878", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc80000bd0, buf=buf@entry=0x7fbc9a1f7e20 "4a543b263f67361b61b59c62ef712e3fbed8d5ea603db9166609841ccff44878", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9a1f7e20 "4a543b263f67361b61b59c62ef712e3fbed8d5ea603db9166609841ccff44878", n=65, fp=0x7fbc80000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc80000bd0, __n=65, __s=0x7fbc9a1f7e20 "4a543b263f67361b61b59c62ef712e3fbed8d5ea603db9166609841ccff44878") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Adorable fox drives randomly. Version id: 7 ; 10/20/2016 03:01 PM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d217130, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b52acf0, __closure=0x55d93b52acf0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b52ace8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b52ace8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b52ace0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9a9f9700 (LWP 35137)):
#0  clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:78
#1  0x00007fbc9d493ac4 in __spawnix (pid=pid@entry=0x7fbc7c000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9a9f8b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a9f8b70, envp=0x7ffde2340460, xflags=0, exec=0x7fbc9d46a2f0 <execve>) at ../sysdeps/unix/sysv/linux/spawni.c:382
#2  0x00007fbc9d49415b in __spawni (pid=pid@entry=0x7fbc7c000cb0, file=file@entry=0x7fbc9d53b5aa "/bin/sh", acts=acts@entry=0x7fbc9a9f8b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a9f8b70, envp=<optimized out>, xflags=0) at ../sysdeps/unix/sysv/linux/spawni.c:431
#3  0x00007fbc9d49391f in __GI___posix_spawn (pid=pid@entry=0x7fbc7c000cb0, path=path@entry=0x7fbc9d53b5aa "/bin/sh", file_actions=file_actions@entry=0x7fbc9a9f8b90, attrp=attrp@entry=0x0, argv=argv@entry=0x7fbc9a9f8b70, envp=<optimized out>) at spawn.c:30
#4  0x00007fbc9d40b30d in spawn_process (child_pipe_fd=1, child_end=1, parent_end=0, pipe_fds=0x7fbc9a9f8b68, do_cloexec=0, command=0x0, fp=0x7fbc7c000bd0, fa=0x7fbc9a9f8b90) at iopopen.c:88
#5  _IO_new_proc_open (fp=fp@entry=0x7fbc7c000bd0, command=command@entry=0x7fbc7c000b60 "printf \"Great lion uses dutifully. Version id: 2 ; 02/20/2018 02:21 PM\" | sha256sum", mode=<optimized out>, mode@entry=0x55d939db2055 "r") at iopopen.c:197
#6  0x00007fbc9d40b55f in _IO_new_popen (command=0x7fbc7c000b60 "printf \"Great lion uses dutifully. Version id: 2 ; 02/20/2018 02:21 PM\" | sha256sum", mode=0x55d939db2055 "r") at iopopen.c:241
#7  0x000055d939da7e12 in Sha256IdGenerator::generateId (content="Great lion uses dutifully. Version id: 2 ; 02/20/2018 02:21 PM", this=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:2312
#8  Page::generateId (this=0x7fbc9d217190, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#9  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b5b4900, __closure=0x55d93b5b4900, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#10 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#11 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#12 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:244
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b5b48f8) at /usr/include/c++/9/thread:251
#14 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b5b48f0) at /usr/include/c++/9/thread:195
#15 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#16 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#17 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9b1fa700 (LWP 35136)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc84000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc84000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc84000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="Dirty girl drives merrily. Version id: 95 ; 03/03/2000 11:42 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d216e90, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b53bc30, __closure=0x55d93b53bc30, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b53bc28) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b53bc28) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b53bc20) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9b9fb700 (LWP 35135)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc88003320, fd=5) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=5, buf=0x7fbc88003320, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc88000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc88000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc88000bd0, buf=buf@entry=0x7fbc9b9fae20 "d0387b9ffe39958ee130aaca2a6009d17e33d187f42edfae1004387aab1e658b", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc88000bd0, buf=buf@entry=0x7fbc9b9fae20 "d0387b9ffe39958ee130aaca2a6009d17e33d187f42edfae1004387aab1e658b", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9b9fae20 "d0387b9ffe39958ee130aaca2a6009d17e33d187f42edfae1004387aab1e658b", n=65, fp=0x7fbc88000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc88000bd0, __n=65, __s=0x7fbc9b9fae20 "d0387b9ffe39958ee130aaca2a6009d17e33d187f42edfae1004387aab1e658b") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Big tiger wants occasionally. Version id: 58 ; 11/22/2013 06:06 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d217070, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b582cc0, __closure=0x55d93b582cc0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b582cb8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b582cb8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b582cb0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9c1fc700 (LWP 35134)):
#0  __lll_lock_wait_private (futex=futex@entry=0x7fbc9d572460 <proc_file_chain_lock>) at ./lowlevellock.c:35
#1  0x00007fbc9d40b071 in _IO_new_proc_close (fp=0x7fbc8c000bd0) at iopopen.c:260
#2  0x00007fbc9d416fe0 in _IO_new_file_close_it (fp=fp@entry=0x7fbc8c000bd0) at libioP.h:948
#3  0x00007fbc9d4090b6 in _IO_new_fclose (fp=0x7fbc8c000bd0) at iofclose.c:53
#4  0x000055d939da7e47 in Sha256IdGenerator::generateId (content="New boy hits foolishly. Version id: 0 ; 08/04/1994 07:09 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:31
#5  Page::generateId (this=0x7fbc9d216fb0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#6  0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b56d450, __closure=0x55d93b56d450, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#7  std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b56d448) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b56d448) at /usr/include/c++/9/thread:251
#11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b56d440) at /usr/include/c++/9/thread:195
#12 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#13 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#14 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9c9fd700 (LWP 35133)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc900036c0, fd=3) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=3, buf=0x7fbc900036c0, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc90000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc90000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc90000bd0, buf=buf@entry=0x7fbc9c9fce20 "414d8a32e82c4e6be7140f915a7a62edd82c5310cd8b98abc05a1e34b57ae51b", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc90000bd0, buf=buf@entry=0x7fbc9c9fce20 "414d8a32e82c4e6be7140f915a7a62edd82c5310cd8b98abc05a1e34b57ae51b", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9c9fce20 "414d8a32e82c4e6be7140f915a7a62edd82c5310cd8b98abc05a1e34b57ae51b", n=65, fp=0x7fbc90000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc90000bd0, __n=65, __s=0x7fbc9c9fce20 "414d8a32e82c4e6be7140f915a7a62edd82c5310cd8b98abc05a1e34b57ae51b") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Dirty spider barfs cheerfully. Version id: 96 ; 12/12/1990 10:49 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d217010, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4d39d0, __closure=0x55d93b4d39d0, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4d39c8) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4d39c0) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc9d1fe700 (LWP 35132)):
#0  __GI___libc_read (nbytes=4096, buf=0x7fbc94003990, fd=8) at ../sysdeps/unix/sysv/linux/read.c:26
#1  __GI___libc_read (fd=8, buf=0x7fbc94003990, nbytes=4096) at ../sysdeps/unix/sysv/linux/read.c:24
#2  0x00007fbc9d417d1f in _IO_new_file_underflow (fp=0x7fbc94000bd0) at libioP.h:948
#3  0x00007fbc9d419106 in __GI__IO_default_uflow (fp=0x7fbc94000bd0) at libioP.h:948
#4  0x00007fbc9d40a9ec in __GI__IO_getline_info (fp=fp@entry=0x7fbc94000bd0, buf=buf@entry=0x7fbc9d1fde20 "d1e274c0b885ae2ae3b05599760d41528915cd70f9c5b53bdffd3d298d5d2ef2", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1, eof=eof@entry=0x0) at iogetline.c:60
#5  0x00007fbc9d40aaec in __GI__IO_getline (fp=fp@entry=0x7fbc94000bd0, buf=buf@entry=0x7fbc9d1fde20 "d1e274c0b885ae2ae3b05599760d41528915cd70f9c5b53bdffd3d298d5d2ef2", n=n@entry=64, delim=delim@entry=10, extract_delim=extract_delim@entry=1) at iogetline.c:34
#6  0x00007fbc9d40984a in _IO_fgets (buf=0x7fbc9d1fde20 "d1e274c0b885ae2ae3b05599760d41528915cd70f9c5b53bdffd3d298d5d2ef2", n=65, fp=0x7fbc94000bd0) at iofgets.c:53
#7  0x000055d939da7e36 in fgets (__stream=0x7fbc94000bd0, __n=65, __s=0x7fbc9d1fde20 "d1e274c0b885ae2ae3b05599760d41528915cd70f9c5b53bdffd3d298d5d2ef2") at /usr/include/x86_64-linux-gnu/bits/stdio2.h:265
#8  Sha256IdGenerator::generateId (content="Dirty cat barfs merrily. Version id: 25 ; 03/30/2008 06:39 AM", this=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/sha256IdGenerator.hpp:26
#9  Page::generateId (this=0x7fbc9d2170d0, idGenerator=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/page.hpp:26
#10 0x000055d939da83a3 in MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}::operator()(unsigned int) const (__closure=0x55d93b4acf10, __closure=0x55d93b4acf10, threadId=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1058
#11 std::__invoke_impl<void, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#12 std::__invoke<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93b4acf08) at /usr/include/c++/9/thread:244
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93b4acf08) at /usr/include/c++/9/thread:251
#15 std::thread::_State_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&, Network const&)::{lambda(unsigned int)#1}, unsigned int> > >::_M_run() (this=0x55d93b4acf00) at /usr/include/c++/9/thread:195
#16 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#18 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448066692864, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000055d939dac1c8 in MultiThreadedPageRankComputer::Pool::join (this=0x7ffde233fbd0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:83
#3  MultiThreadedPageRankComputer::generatePageIds (network=..., pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:190
#4  MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:29
#5  0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#6  0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d63baf0 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d63baf0 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939dabaaa in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s=...) at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fc30, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fc30, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (this=0x7ffde233fc30, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  0x000055d939dac2cd in std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >::operator[] (__k=..., this=0x7ffde233fc30) at /usr/include/c++/9/bits/unordered_map.h:984
#7  MultiThreadedPageRankComputer::initEdges (edges=std::unordered_map with 1200 elements = {...}, network=..., pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:213
#8  MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:34
#9  0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#10 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 38789]
[New LWP 38790]
[New LWP 38791]
[New LWP 38792]
[New LWP 38793]
[New LWP 38794]
[New LWP 38795]
[New LWP 38796]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448007943936, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc9b9fb700 (LWP 38796)):
#0  0x00007fbc9d63bb09 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="128f289cbbe1fde5db7c6f9f2db3d87ed873ad4f4f9ae619b1e96816f27c2045") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=7, __closure=0x55d93f9c7ae0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7ad8) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7ad8) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9b9fae70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7aa0, __f=<optimized out>, __did_set=0x7fbc9b9fae27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7ab8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7ab8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9b9fae40: (void (std::__future_base::_State_baseV2::*)(class std::__future_base::_State_baseV2 * const, class std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7aa0) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b54f268) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b54f268) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b54f260) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9c1fc700 (LWP 38795)):
#0  std::__detail::_Mod_range_hashing::operator() (this=0x7ffde233fbf0, __den=<optimized out>, __num=<optimized out>) at /usr/include/c++/9/bits/hashtable_policy.h:1393
#1  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index (this=0x7ffde233fbf0, __p=0x55d93f997750, __n=<optimized out>) at /usr/include/c++/9/bits/hashtable_policy.h:1396
#2  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_bucket_index (this=0x7ffde233fbf0, __n=<optimized out>) at /usr/include/c++/9/bits/hashtable.h:640
#3  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node (__code=4625144892024148720, __k=..., __n=1866, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:1548
#4  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node (__c=4625144892024148720, __key=..., __bkt=1866, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:655
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:697
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=6, __closure=0x55d93f9c72a0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7298) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7298) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9c1fbe70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7260, __f=<optimized out>, __did_set=0x7fbc9c1fbe27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7278, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7278) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9c1fbe40: (void (std::__future_base::_State_baseV2::*)(class std::__future_base::_State_baseV2 * const, class std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7260) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b5de0e8) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b5de0e8) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b5de0e0) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9c9fd700 (LWP 38794)):
#0  0x000055d939da46f4 in memcmp@plt ()
#1  0x000055d939db0fea in std::char_traits<char>::compare (__n=<optimized out>, __s2=<optimized out>, __s1=<optimized out>) at /usr/include/c++/9/bits/char_traits.h:325
#2  std::operator==<char> (__rhs="0dc877561df34614b89e3b47470325fb42f07295f9489c9b396b582b41573405", __lhs="0dc877561df34614b89e3b47470325fb42f07295f9489c9b396b582b41573405") at /usr/include/c++/9/bits/basic_string.h:6152
#3  PageId::operator== (other=..., this=0x7fbc944eaeb0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:15
#4  std::equal_to<PageId>::operator() (this=0x7ffde233fbf0, __y=..., __x=...) at /usr/include/c++/9/bits/stl_function.h:356
#5  std::__detail::_Equal_helper<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, unsigned long, true>::_S_equals (__eq=..., __extract=..., __n=0x55d93f9b4c50, __c=1767203474291158187, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1450
#6  std::__detail::_Hashtable_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals (this=0x7ffde233fbf0, __n=0x55d93f9b4c50, __c=1767203474291158187, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1834
#7  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node (__code=1767203474291158187, __k=..., __n=249, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:1545
#8  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node (__c=1767203474291158187, __key=..., __bkt=249, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:655
#9  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:697
#10 std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#11 MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=5, __closure=0x55d93f9c7340) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#12 std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#13 std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7338) at /usr/include/c++/9/thread:244
#15 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7338) at /usr/include/c++/9/thread:251
#16 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9c9fce70) at /usr/include/c++/9/future:1339
#17 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#18 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#19 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7300, __f=<optimized out>, __did_set=0x7fbc9c9fce27) at /usr/include/c++/9/future:561
#20 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7318, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#21 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7318) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#22 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9c9fce40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#23 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7300) at /usr/include/c++/9/future:401
#24 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#25 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#26 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b602888) at /usr/include/c++/9/thread:244
#28 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b602888) at /usr/include/c++/9/thread:251
#29 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b602880) at /usr/include/c++/9/thread:195
#30 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#31 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#32 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9d1fe700 (LWP 38793)):
#0  0x00007fbc9d63bb13 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="ba7b6b57ede3c416a256762626323cc1941839ae53e3bc4282ad991c3271ab87") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=4, __closure=0x55d93f9c73e0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c73d8) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c73d8) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9d1fde70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c73a0, __f=<optimized out>, __did_set=0x7fbc9d1fde27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c73b8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c73b8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9d1fde40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c73a0) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b634f58) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b634f58) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b634f50) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9b1fa700 (LWP 38792)):
#0  0x00007fbc9d63baf3 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="ee7909adc5be2878030456bc7d293b854aa8f85e6bfd65cd940414ed9f7fca76") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=3, __closure=0x55d93f9c74d0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c74c8) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c74c8) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9b1f9e70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7490, __f=<optimized out>, __did_set=0x7fbc9b1f9e27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c74a8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c74a8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9b1f9e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7490) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b633bd8) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b633bd8) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b633bd0) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9a9f9700 (LWP 38791)):
#0  0x00007fbc9d63baf3 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="e91291e181bb6f0e8c9c0381eb2d2618d21993e4ccbba620010678d1b79b7a55") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=2, __closure=0x55d93f9c7570) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7568) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7568) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9a9f8e70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7530, __f=<optimized out>, __did_set=0x7fbc9a9f8e27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7548, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7548) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9a9f8e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7530) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b652c88) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b652c88) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b652c80) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9a1f8700 (LWP 38790)):
#0  0x00007fbc9d63baf3 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="acb62c3cd62913963f5e8aeba64b0aba62cef1ab8d18787ac725c2879120b0ae") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=1, __closure=0x55d93f9c7740) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7738) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7738) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9a1f7e70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7700, __f=<optimized out>, __did_set=0x7fbc9a1f7e27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7718, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7718) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9a1f7e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7700) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b4d25f8) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b4d25f8) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b4d25f0) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc999f7700 (LWP 38789)):
#0  0x00007fbc9d63bb09 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="9df0c3ce121b68137b718538cabf2d0fa4237d3f479904bf80ffcfcc13a9e679") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=0, __closure=0x55d93f9c7910) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7908) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7908) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc999f6e70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c78d0, __f=<optimized out>, __did_set=0x7fbc999f6e27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c78e8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c78e8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc999f6e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c78d0) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b69f988) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b69f988) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b69f980) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448007943936, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c78f8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#3  0x000055d939da66bf in __gthread_once (__func=<optimized out>, __once=<optimized out>) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#4  std::call_once<void (std::thread::*)(), std::thread*> (__f=@0x7ffde233fab0: (void (std::thread::*)(std::thread * const)) 0x7fbc9d667fd0 <std::thread::join()>, __once=...) at /usr/include/c++/9/mutex:683
#5  std::__future_base::_Async_state_commonV2::_M_join (this=<optimized out>) at /usr/include/c++/9/future:1642
#6  std::__future_base::_Async_state_commonV2::_M_complete_async (this=<optimized out>) at /usr/include/c++/9/future:1640
#7  0x000055d939dacc86 in std::__future_base::_State_baseV2::wait (this=0x55d93f9c78d0) at /usr/include/c++/9/future:334
#8  std::__basic_future<std::pair<double, double> >::_M_get_result (this=0x55d93b4acf80) at /usr/include/c++/9/future:717
#9  std::future<std::pair<double, double> >::get (this=0x55d93b4acf80) at /usr/include/c++/9/future:796
#10 MultiThreadedPageRankComputer::updateRanks (iteration=1, alpha=0.84999999999999998, dangleSum=0, networkSize=<optimized out>, edges=std::unordered_map with 1200 elements = {...}, pageHashMap=std::unordered_map with 1200 elements = {...}, pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:291
#11 MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:43
#12 0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#13 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[New LWP 38851]
[New LWP 38852]
[New LWP 38853]
[New LWP 38854]
[New LWP 38855]
[New LWP 38856]
[New LWP 38857]
[New LWP 38858]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__pthread_clockjoin_ex (threadid=140448041514752, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145

Thread 9 (Thread 0x7fbc999f7700 (LWP 38858)):
#0  0x000055d939db0ea0 in std::__detail::_Mod_range_hashing::operator() (this=0x7ffde233fbf0, __den=2357, __num=9582230475608773507) at /usr/include/c++/9/bits/hashtable_policy.h:1388
#1  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index (this=0x7ffde233fbf0, __n=2357, __c=9582230475608773507) at /usr/include/c++/9/bits/hashtable_policy.h:1390
#2  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_bucket_index (this=0x7ffde233fbf0, __k=..., __c=9582230475608773507) at /usr/include/c++/9/bits/hashtable.h:644
#3  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:696
#4  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#5  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=7, __closure=0x55d93f9c7ae0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#6  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#7  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#8  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7ad8) at /usr/include/c++/9/thread:244
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7ad8) at /usr/include/c++/9/thread:251
#10 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc999f6e70) at /usr/include/c++/9/future:1339
#11 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#12 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#13 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7aa0, __f=<optimized out>, __did_set=0x7fbc999f6e27) at /usr/include/c++/9/future:561
#14 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7ab8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#15 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7ab8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#16 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc999f6e40: (void (std::__future_base::_State_baseV2::*)(class std::__future_base::_State_baseV2 * const, class std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#17 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7aa0) at /usr/include/c++/9/future:401
#18 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#19 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#20 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#21 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b5de0e8) at /usr/include/c++/9/thread:244
#22 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b5de0e8) at /usr/include/c++/9/thread:251
#23 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b5de0e0) at /usr/include/c++/9/thread:195
#24 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#25 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#26 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 8 (Thread 0x7fbc9a1f8700 (LWP 38857)):
#0  __memcmp_avx2_movbe () at ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:71
#1  0x000055d939db0fea in std::char_traits<char>::compare (__n=<optimized out>, __s2=<optimized out>, __s1=<optimized out>) at /usr/include/c++/9/bits/char_traits.h:325
#2  std::operator==<char> (__rhs="b79c8ec9ac496321f5d6dfacb31a1b6679e81f22ef579aff18a8472b5492d8db", __lhs="b79c8ec9ac496321f5d6dfacb31a1b6679e81f22ef579aff18a8472b5492d8db") at /usr/include/c++/9/bits/basic_string.h:6152
#3  PageId::operator== (other=..., this=0x7fbc9457abd0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:15
#4  std::equal_to<PageId>::operator() (this=0x7ffde233fbf0, __y=..., __x=...) at /usr/include/c++/9/bits/stl_function.h:356
#5  std::__detail::_Equal_helper<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, unsigned long, true>::_S_equals (__eq=..., __extract=..., __n=0x55d93f98f640, __c=12670269708683629584, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1450
#6  std::__detail::_Hashtable_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals (this=0x7ffde233fbf0, __n=0x55d93f98f640, __c=12670269708683629584, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1834
#7  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node (__code=12670269708683629584, __k=..., __n=1942, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:1545
#8  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node (__c=12670269708683629584, __key=..., __bkt=1942, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:655
#9  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:697
#10 std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#11 MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=6, __closure=0x55d93f9c7910) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#12 std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#13 std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#14 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7908) at /usr/include/c++/9/thread:244
#15 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7908) at /usr/include/c++/9/thread:251
#16 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9a1f7e70) at /usr/include/c++/9/future:1339
#17 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#18 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#19 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c78d0, __f=<optimized out>, __did_set=0x7fbc9a1f7e27) at /usr/include/c++/9/future:561
#20 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c78e8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#21 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c78e8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#22 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9a1f7e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#23 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c78d0) at /usr/include/c++/9/future:401
#24 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#25 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#26 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b634f58) at /usr/include/c++/9/thread:244
#28 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b634f58) at /usr/include/c++/9/thread:251
#29 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b634f50) at /usr/include/c++/9/thread:195
#30 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#31 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#32 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 7 (Thread 0x7fbc9a9f9700 (LWP 38856)):
#0  std::__detail::_Equal_helper<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, unsigned long, true>::_S_equals (__eq=..., __extract=..., __n=0x55d93f9b9ab0, __c=10696294979467257679, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1829
#1  std::__detail::_Hashtable_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals (this=0x7ffde233fbf0, __n=0x55d93f9b9ab0, __c=10696294979467257679, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1834
#2  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node (__code=10696294979467257679, __k=..., __n=1549, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:1545
#3  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node (__c=10696294979467257679, __key=..., __bkt=1549, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:655
#4  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:697
#5  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#6  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=5, __closure=0x55d93f9c7740) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#7  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#8  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#9  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7738) at /usr/include/c++/9/thread:244
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7738) at /usr/include/c++/9/thread:251
#11 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9a9f8e70) at /usr/include/c++/9/future:1339
#12 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#13 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#14 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7700, __f=<optimized out>, __did_set=0x7fbc9a9f8e27) at /usr/include/c++/9/future:561
#15 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7718, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#16 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7718) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#17 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9a9f8e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#18 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7700) at /usr/include/c++/9/future:401
#19 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#20 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#21 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#22 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b5215b8) at /usr/include/c++/9/thread:244
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b5215b8) at /usr/include/c++/9/thread:251
#24 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b5215b0) at /usr/include/c++/9/thread:195
#25 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#26 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#27 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 6 (Thread 0x7fbc9b1fa700 (LWP 38855)):
#0  0x000055d939db0fcc in std::operator==<char> (__rhs="b3b2e6cc5f4b5388ccd0052136657ce43585c48e4b3999b2387383257a30b16a", __lhs="b3b2e6cc5f4b5388ccd0052136657ce43585c48e4b3999b2387383257a30b16a") at /usr/include/c++/9/bits/basic_string.h:6149
#1  PageId::operator== (other=..., this=0x7fbc9073bcc0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:15
#2  std::equal_to<PageId>::operator() (this=0x7ffde233fbf0, __y=..., __x=...) at /usr/include/c++/9/bits/stl_function.h:356
#3  std::__detail::_Equal_helper<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, unsigned long, true>::_S_equals (__eq=..., __extract=..., __n=0x55d93f9b7010, __c=6836830701009894310, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1450
#4  std::__detail::_Hashtable_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals (this=0x7ffde233fbf0, __n=0x55d93f9b7010, __c=6836830701009894310, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1834
#5  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node (__code=6836830701009894310, __k=..., __n=950, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:1545
#6  std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node (__c=6836830701009894310, __key=..., __bkt=950, this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:655
#7  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:697
#8  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#9  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=4, __closure=0x55d93f9c7570) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#10 std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#11 std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#12 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7568) at /usr/include/c++/9/thread:244
#13 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7568) at /usr/include/c++/9/thread:251
#14 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9b1f9e70) at /usr/include/c++/9/future:1339
#15 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#16 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#17 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7530, __f=<optimized out>, __did_set=0x7fbc9b1f9e27) at /usr/include/c++/9/future:561
#18 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7548, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#19 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7548) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#20 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9b1f9e40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#21 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7530) at /usr/include/c++/9/future:401
#22 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#23 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#24 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#25 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b4dea68) at /usr/include/c++/9/thread:244
#26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b4dea68) at /usr/include/c++/9/thread:251
#27 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b4dea60) at /usr/include/c++/9/thread:195
#28 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#29 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#30 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 5 (Thread 0x7fbc9d1fe700 (LWP 38854)):
#0  0x00007fbc9d63bb0c in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="06524ed7ecfbd7e0a60e92f1a793e2e87c948c9ea41cd0192b0489c909aafedc") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=3, __closure=0x55d93f9c74d0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c74c8) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c74c8) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9d1fde70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7490, __f=<optimized out>, __did_set=0x7fbc9d1fde27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c74a8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c74a8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9d1fde40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7490) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b559f88) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b559f88) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b559f80) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 4 (Thread 0x7fbc9c9fd700 (LWP 38853)):
#0  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=2, __closure=0x55d93f9c73e0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:273
#1  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#2  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#3  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c73d8) at /usr/include/c++/9/thread:244
#4  std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c73d8) at /usr/include/c++/9/thread:251
#5  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9c9fce70) at /usr/include/c++/9/future:1339
#6  0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#7  0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#8  std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c73a0, __f=<optimized out>, __did_set=0x7fbc9c9fce27) at /usr/include/c++/9/future:561
#9  0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c73b8, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#10 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c73b8) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#11 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9c9fce40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#12 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c73a0) at /usr/include/c++/9/future:401
#13 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#14 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#15 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#16 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b4c5748) at /usr/include/c++/9/thread:244
#17 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b4c5748) at /usr/include/c++/9/thread:251
#18 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b4c5740) at /usr/include/c++/9/thread:195
#19 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#20 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#21 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 3 (Thread 0x7fbc9c1fc700 (LWP 38852)):
#0  0x00007fbc9d63baf3 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="90a7448cfdc1cfff7c2cb11eb4eacd0d9f872aa4e0eba93d6971804f10125b78") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=1, __closure=0x55d93f9c7340) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7338) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7338) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9c1fbe70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7300, __f=<optimized out>, __did_set=0x7fbc9c1fbe27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7318, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7318) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9c1fbe40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7300) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b5bc3d8) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b5bc3d8) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b5bc3d0) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 2 (Thread 0x7fbc9b9fb700 (LWP 38851)):
#0  0x00007fbc9d63baf3 in std::_Hash_bytes(void const*, unsigned long, unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#1  0x000055d939db0e8b in std::_Hash_impl::hash (__seed=3339675911, __clength=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/9/bits/functional_hash.h:197
#2  std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (this=<optimized out>, __s="abd3beb2ba9c99df5d73386f7bf198baa402374d3dc1be285c39b3547bd5ee54") at /usr/include/c++/9/bits/basic_string.h:6735
#3  PageIdHash::operator() (this=0x7ffde233fbf0, pageId=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:32
#4  std::__detail::_Hash_code_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::__detail::_Select1st, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code (this=0x7ffde233fbf0, __k=...) at /usr/include/c++/9/bits/hashtable_policy.h:1384
#5  std::__detail::_Map_base<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable_policy.h:695
#6  std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::operator[] (__k=..., this=0x7ffde233fbf0) at /usr/include/c++/9/bits/unordered_map.h:985
#7  MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}::operator()(unsigned int) const (threadId=0, __closure=0x55d93f9c72a0) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:274
#8  std::__invoke_impl<std::pair<double, double>, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_other, MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&, unsigned int&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#9  std::__invoke<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>(std::__invoke_result&&, (MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#10 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=0x55d93f9c7298) at /usr/include/c++/9/thread:244
#11 std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >::operator()() (this=0x55d93f9c7298) at /usr/include/c++/9/thread:251
#12 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::operator()() const (this=0x7fbc9b9fae70) at /usr/include/c++/9/future:1339
#13 0x000055d939db1195 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<std::pair<double, double> >, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/9/bits/std_function.h:151
#14 0x000055d939da676d in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /usr/include/c++/9/bits/std_function.h:683
#15 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x55d93f9c7260, __f=<optimized out>, __did_set=0x7fbc9b9fae27) at /usr/include/c++/9/future:561
#16 0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7278, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#17 0x000055d939da7ab5 in __gthread_once (__func=<optimized out>, __once=0x55d93f9c7278) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#18 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=@0x7fbc9b9fae40: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x55d939da6740 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /usr/include/c++/9/mutex:683
#19 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x55d93f9c7260) at /usr/include/c++/9/future:401
#20 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /usr/include/c++/9/future:1662
#21 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#22 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}&&, (std::__invoke_result&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#23 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x55d93b4c06c8) at /usr/include/c++/9/thread:244
#24 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> >::operator()() (this=0x55d93b4c06c8) at /usr/include/c++/9/thread:251
#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int> >, std::pair<double, double> >::_Async_state_impl(std::tuple<MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&, std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >&, std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >&, unsigned long, double, double, unsigned int)::{lambda(unsigned int)#1}, unsigned int>&&)::{lambda()#1}> > >::_M_run() (this=0x55d93b4c06c0) at /usr/include/c++/9/thread:195
#26 0x00007fbc9d667d84 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#27 0x00007fbc9d77b609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#28 0x00007fbc9d4a6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  __pthread_clockjoin_ex (threadid=140448041514752, thread_return=0x0, clockid=<optimized out>, abstime=<optimized out>, block=<optimized out>) at pthread_join_common.c:145
#1  0x00007fbc9d667fe7 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x00007fbc9d78447f in __pthread_once_slow (once_control=0x55d93f9c7288, init_routine=0x7fbc9d666b80 <__once_proxy>) at pthread_once.c:116
#3  0x000055d939da66bf in __gthread_once (__func=<optimized out>, __once=<optimized out>) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:700
#4  std::call_once<void (std::thread::*)(), std::thread*> (__f=@0x7ffde233fab0: (void (std::thread::*)(std::thread * const)) 0x7fbc9d667fd0 <std::thread::join()>, __once=...) at /usr/include/c++/9/mutex:683
#5  std::__future_base::_Async_state_commonV2::_M_join (this=<optimized out>) at /usr/include/c++/9/future:1642
#6  std::__future_base::_Async_state_commonV2::_M_complete_async (this=<optimized out>) at /usr/include/c++/9/future:1640
#7  0x000055d939dacc86 in std::__future_base::_State_baseV2::wait (this=0x55d93f9c7260) at /usr/include/c++/9/future:334
#8  std::__basic_future<std::pair<double, double> >::_M_get_result (this=0x55d93b4acf80) at /usr/include/c++/9/future:717
#9  std::future<std::pair<double, double> >::get (this=0x55d93b4acf80) at /usr/include/c++/9/future:796
#10 MultiThreadedPageRankComputer::updateRanks (iteration=8, alpha=0.84999999999999998, dangleSum=0, networkSize=<optimized out>, edges=std::unordered_map with 1200 elements = {...}, pageHashMap=std::unordered_map with 1200 elements = {...}, pool=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:291
#11 MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:43
#12 0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#13 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbc9d421874 in __GI___libc_free (mem=0x7fbc8c0b5850) at malloc.c:3102

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  0x00007fbc9d421874 in __GI___libc_free (mem=0x7fbc8c0b5850) at malloc.c:3102
#1  0x000055d939da870a in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fbc8459cf00, __p=<optimized out>) at /usr/include/c++/9/ext/new_allocator.h:119
#2  std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __n=<optimized out>, __p=<optimized out>) at /usr/include/c++/9/bits/alloc_traits.h:470
#3  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy (__size=<optimized out>, this=0x7fbc8459cf00) at /usr/include/c++/9/bits/basic_string.h:237
#4  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose (this=0x7fbc8459cf00) at /usr/include/c++/9/bits/basic_string.h:232
#5  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string (this=0x7fbc8459cf00, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:658
#6  PageId::~PageId (this=0x7fbc8459cf00, __in_chrg=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:6
#7  std::_Destroy<PageId> (__pointer=0x7fbc8459cf00) at /usr/include/c++/9/bits/stl_construct.h:98
#8  std::_Destroy_aux<false>::__destroy<PageId*> (__last=<optimized out>, __first=0x7fbc8459cf00) at /usr/include/c++/9/bits/stl_construct.h:108
#9  std::_Destroy<PageId*> (__last=<optimized out>, __first=<optimized out>) at /usr/include/c++/9/bits/stl_construct.h:137
#10 std::_Destroy<PageId*, PageId> (__last=0x7fbc845a3080, __first=<optimized out>) at /usr/include/c++/9/bits/stl_construct.h:206
#11 std::vector<PageId, std::allocator<PageId> >::~vector (this=0x55d93d82b908, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:677
#12 MultiThreadedPageRankComputer::EdgeInfo::~EdgeInfo (this=0x55d93d82b908, __in_chrg=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:132
#13 std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>::~pair (this=0x55d93d82b8e8, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_pair.h:208
#14 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > (this=<optimized out>, __p=0x55d93d82b8e8) at /usr/include/c++/9/ext/new_allocator.h:153
#15 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > (__a=..., __p=0x55d93d82b8e8) at /usr/include/c++/9/bits/alloc_traits.h:497
#16 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::_M_deallocate_node (this=<optimized out>, __n=0x55d93d82b8e0) at /usr/include/c++/9/bits/hashtable_policy.h:2102
#17 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x55d93f95b940) at /usr/include/c++/9/bits/hashtable_policy.h:2124
#18 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x7ffde233fc30) at /usr/include/c++/9/bits/hashtable.h:2028
#19 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x7ffde233fc30, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/hashtable.h:1352
#20 0x000055d939dad4dd in std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >::~unordered_map (this=0x7ffde233fc30, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/unordered_map.h:102
#21 MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:32
#22 0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#23 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7fbc88000020) at malloc.c:4506

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  malloc_consolidate (av=av@entry=0x7fbc88000020) at malloc.c:4506
#1  0x00007fbc9d41e160 in _int_free (av=0x7fbc88000020, p=0x7fbc885d5020, have_lock=<optimized out>) at malloc.c:4400
#2  0x000055d939da8725 in __gnu_cxx::new_allocator<PageId>::deallocate (this=0x55d93cf8a3e8, __p=<optimized out>) at /usr/include/c++/9/ext/new_allocator.h:119
#3  std::allocator_traits<std::allocator<PageId> >::deallocate (__a=..., __n=<optimized out>, __p=<optimized out>) at /usr/include/c++/9/bits/alloc_traits.h:470
#4  std::_Vector_base<PageId, std::allocator<PageId> >::_M_deallocate (this=0x55d93cf8a3e8, __n=<optimized out>, __p=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:351
#5  std::_Vector_base<PageId, std::allocator<PageId> >::~_Vector_base (this=0x55d93cf8a3e8, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:332
#6  std::vector<PageId, std::allocator<PageId> >::~vector (this=0x55d93cf8a3e8, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:680
#7  MultiThreadedPageRankComputer::EdgeInfo::~EdgeInfo (this=0x55d93cf8a3e8, __in_chrg=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:132
#8  std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>::~pair (this=0x55d93cf8a3c8, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_pair.h:208
#9  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > (this=<optimized out>, __p=0x55d93cf8a3c8) at /usr/include/c++/9/ext/new_allocator.h:153
#10 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > (__a=..., __p=0x55d93cf8a3c8) at /usr/include/c++/9/bits/alloc_traits.h:497
#11 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::_M_deallocate_node (this=<optimized out>, __n=0x55d93cf8a3c0) at /usr/include/c++/9/bits/hashtable_policy.h:2102
#12 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x55d93f868000) at /usr/include/c++/9/bits/hashtable_policy.h:2124
#13 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x7ffde233fc30) at /usr/include/c++/9/bits/hashtable.h:2028
#14 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x7ffde233fc30, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/hashtable.h:1352
#15 0x000055d939dad4dd in std::unordered_map<PageId, MultiThreadedPageRankComputer::EdgeInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::EdgeInfo> > >::~unordered_map (this=0x7ffde233fc30, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/unordered_map.h:102
#16 MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:32
#17 0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#18 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_free (av=0x7fbc9d56fb80 <main_arena>, p=0x55d93f9bbcb0, have_lock=0) at malloc.c:4279

Thread 1 (Thread 0x7fbc9d230740 (LWP 35048)):
#0  _int_free (av=0x7fbc9d56fb80 <main_arena>, p=0x55d93f9bbcb0, have_lock=0) at malloc.c:4279
#1  0x000055d939dad4f5 in __gnu_cxx::new_allocator<char>::deallocate (this=0x55d93f9bbd18, __p=<optimized out>) at /usr/include/c++/9/ext/new_allocator.h:119
#2  std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __n=<optimized out>, __p=<optimized out>) at /usr/include/c++/9/bits/alloc_traits.h:470
#3  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy (__size=<optimized out>, this=0x55d93f9bbd18) at /usr/include/c++/9/bits/basic_string.h:237
#4  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose (this=0x55d93f9bbd18) at /usr/include/c++/9/bits/basic_string.h:232
#5  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string (this=0x55d93f9bbd18, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/basic_string.h:658
#6  PageId::~PageId (this=0x55d93f9bbd18, __in_chrg=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/lib/../../src/immutable/pageId.hpp:6
#7  std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>::~pair (this=0x55d93f9bbd18, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/stl_pair.h:208
#8  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, true> >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > (this=<optimized out>, __p=0x55d93f9bbd18) at /usr/include/c++/9/ext/new_allocator.h:153
#9  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, true> > >::destroy<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > (__a=..., __p=0x55d93f9bbd18) at /usr/include/c++/9/bits/alloc_traits.h:497
#10 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, true> > >::_M_deallocate_node (this=<optimized out>, __n=0x55d93f9bbd10) at /usr/include/c++/9/bits/hashtable_policy.h:2102
#11 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x55d93f9af190) at /usr/include/c++/9/bits/hashtable_policy.h:2124
#12 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x7ffde233fbf0) at /usr/include/c++/9/bits/hashtable.h:2028
#13 std::_Hashtable<PageId, std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> >, std::__detail::_Select1st, std::equal_to<PageId>, PageIdHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x7ffde233fbf0, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/hashtable.h:1352
#14 std::unordered_map<PageId, MultiThreadedPageRankComputer::PageInfo, PageIdHash, std::equal_to<PageId>, std::allocator<std::pair<PageId const, MultiThreadedPageRankComputer::PageInfo> > >::~unordered_map (this=0x7ffde233fbf0, __in_chrg=<optimized out>) at /usr/include/c++/9/bits/unordered_map.h:102
#15 MultiThreadedPageRankComputer::computeForNetwork (this=<optimized out>, network=..., alpha=0.84999999999999998, iterations=100, tolerance=9.9999999999999995e-08) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/../src/multiThreadedPageRankComputer.hpp:31
#16 0x000055d939da5604 in pageRankComputationWithNetwork (computer=..., network=...) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:18
#17 0x000055d939da4eeb in main (argc=<optimized out>, argv=<optimized out>) at /home/janw23/Workspace/MIMUW/uw-pw-pagerank/PageRank/tests/e2eTest.cpp:50
[Inferior 1 (process 35048) detached]
