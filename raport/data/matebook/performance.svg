<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.32%)</title><rect x="89.0" y="501" width="3.8" height="15.0" fill="rgb(253,151,45)" rx="2" ry="2" />
<text  x="92.00" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef20a7d4e0) (1 samples, 0.11%)</title><rect x="104.0" y="341" width="1.3" height="15.0" fill="rgb(213,199,16)" rx="2" ry="2" />
<text  x="107.05" y="351.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2 samples, 0.21%)</title><rect x="374.9" y="181" width="2.5" height="15.0" fill="rgb(214,108,2)" rx="2" ry="2" />
<text  x="377.91" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=..., (1 samples, 0.11%)</title><rect x="1018.2" y="357" width="1.3" height="15.0" fill="rgb(247,69,34)" rx="2" ry="2" />
<text  x="1021.20" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="851.4" y="453" width="1.3" height="15.0" fill="rgb(209,92,3)" rx="2" ry="2" />
<text  x="854.42" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (7 samples, 0.74%)</title><rect x="881.5" y="373" width="8.8" height="15.0" fill="rgb(251,109,23)" rx="2" ry="2" />
<text  x="884.52" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (1 samples, 0.11%)</title><rect x="87.7" y="453" width="1.3" height="15.0" fill="rgb(217,41,30)" rx="2" ry="2" />
<text  x="90.75" y="463.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2 samples, 0.21%)</title><rect x="174.3" y="165" width="2.5" height="15.0" fill="rgb(215,63,53)" rx="2" ry="2" />
<text  x="177.27" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf96f666e0, (1 samples, 0.11%)</title><rect x="802.5" y="197" width="1.3" height="15.0" fill="rgb(249,74,36)" rx="2" ry="2" />
<text  x="805.52" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef23c0f0b0) (3 samples, 0.32%)</title><rect x="80.2" y="501" width="3.8" height="15.0" fill="rgb(250,87,14)" rx="2" ry="2" />
<text  x="83.22" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (5 samples, 0.53%)</title><rect x="130.4" y="389" width="6.3" height="15.0" fill="rgb(245,157,3)" rx="2" ry="2" />
<text  x="133.38" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="171.8" y="101" width="1.2" height="15.0" fill="rgb(244,124,17)" rx="2" ry="2" />
<text  x="174.76" y="111.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (140 samples, 14.88%)</title><rect x="369.9" y="213" width="175.6" height="15.0" fill="rgb(232,216,13)" rx="2" ry="2" />
<text  x="372.89" y="223.5" >MultiThreadedPageRankC..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf74000020, (1 samples, 0.11%)</title><rect x="132.9" y="277" width="1.2" height="15.0" fill="rgb(242,10,4)" rx="2" ry="2" />
<text  x="135.89" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="135.4" y="277" width="1.3" height="15.0" fill="rgb(249,139,32)" rx="2" ry="2" />
<text  x="138.40" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="84.0" y="437" width="1.2" height="15.0" fill="rgb(253,77,31)" rx="2" ry="2" />
<text  x="86.99" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (6 samples, 0.64%)</title><rect x="32.6" y="469" width="7.5" height="15.0" fill="rgb(218,202,20)" rx="2" ry="2" />
<text  x="35.57" y="479.5" ></text>
</g>
<g >
<title>??() (438 samples, 46.55%)</title><rect x="89.0" y="517" width="549.2" height="15.0" fill="rgb(206,16,28)" rx="2" ry="2" />
<text  x="92.00" y="527.5" >??()</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef2057a0c0) (1 samples, 0.11%)</title><rect x="99.0" y="357" width="1.3" height="15.0" fill="rgb(230,72,23)" rx="2" ry="2" />
<text  x="102.03" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1134.8" y="421" width="1.3" height="15.0" fill="rgb(206,229,10)" rx="2" ry="2" />
<text  x="1137.82" y="431.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (32 samples, 3.40%)</title><rect x="40.1" y="437" width="40.1" height="15.0" fill="rgb(212,37,23)" rx="2" ry="2" />
<text  x="43.10" y="447.5" >__g..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="86.5" y="405" width="1.2" height="15.0" fill="rgb(205,96,3)" rx="2" ry="2" />
<text  x="89.49" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3 samples, 0.32%)</title><rect x="273.3" y="133" width="3.8" height="15.0" fill="rgb(222,70,17)" rx="2" ry="2" />
<text  x="276.34" y="143.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (3 samples, 0.32%)</title><rect x="709.7" y="341" width="3.8" height="15.0" fill="rgb(222,101,6)" rx="2" ry="2" />
<text  x="712.72" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (1 samples, 0.11%)</title><rect x="1128.6" y="357" width="1.2" height="15.0" fill="rgb(238,47,46)" rx="2" ry="2" />
<text  x="1131.55" y="367.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (5 samples, 0.53%)</title><rect x="465.2" y="101" width="6.3" height="15.0" fill="rgb(243,163,10)" rx="2" ry="2" />
<text  x="468.20" y="111.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="796.2" y="181" width="1.3" height="15.0" fill="rgb(243,157,13)" rx="2" ry="2" />
<text  x="799.25" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="469" width="2.5" height="15.0" fill="rgb(209,186,38)" rx="2" ry="2" />
<text  x="919.63" y="479.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1185.0" y="421" width="1.2" height="15.0" fill="rgb(213,141,50)" rx="2" ry="2" />
<text  x="1187.98" y="431.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (387 samples, 41.13%)</title><rect x="153.0" y="373" width="485.2" height="15.0" fill="rgb(228,189,5)" rx="2" ry="2" />
<text  x="155.95" y="383.5" >__gthread_once(__func=&lt;optimized</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="23.8" y="405" width="1.2" height="15.0" fill="rgb(246,206,24)" rx="2" ry="2" />
<text  x="26.79" y="415.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="798.8" y="181" width="1.2" height="15.0" fill="rgb(218,170,12)" rx="2" ry="2" />
<text  x="801.76" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="648.3" y="421" width="6.2" height="15.0" fill="rgb(227,10,33)" rx="2" ry="2" />
<text  x="651.28" y="431.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.43%)</title><rect x="721.0" y="437" width="5.0" height="15.0" fill="rgb(226,209,36)" rx="2" ry="2" />
<text  x="724.01" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.21%)</title><rect x="1182.5" y="389" width="2.5" height="15.0" fill="rgb(209,24,53)" rx="2" ry="2" />
<text  x="1185.48" y="399.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2 samples, 0.21%)</title><rect x="174.3" y="181" width="2.5" height="15.0" fill="rgb(246,197,38)" rx="2" ry="2" />
<text  x="177.27" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd1852ff40, (1 samples, 0.11%)</title><rect x="896.6" y="405" width="1.2" height="15.0" fill="rgb(225,56,37)" rx="2" ry="2" />
<text  x="899.57" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.74%)</title><rect x="958.0" y="485" width="8.8" height="15.0" fill="rgb(228,70,21)" rx="2" ry="2" />
<text  x="961.01" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (9 samples, 0.96%)</title><rect x="609.4" y="165" width="11.3" height="15.0" fill="rgb(251,28,1)" rx="2" ry="2" />
<text  x="612.40" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.43%)</title><rect x="633.2" y="197" width="5.0" height="15.0" fill="rgb(235,49,7)" rx="2" ry="2" />
<text  x="636.23" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf9395b930) (1 samples, 0.11%)</title><rect x="802.5" y="181" width="1.3" height="15.0" fill="rgb(234,64,33)" rx="2" ry="2" />
<text  x="805.52" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="189.3" y="117" width="1.3" height="15.0" fill="rgb(205,147,1)" rx="2" ry="2" />
<text  x="192.32" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef20b3db10) (8 samples, 0.85%)</title><rect x="732.3" y="453" width="10.0" height="15.0" fill="rgb(210,153,35)" rx="2" ry="2" />
<text  x="735.30" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.11%)</title><rect x="213.1" y="117" width="1.3" height="15.0" fill="rgb(214,1,50)" rx="2" ry="2" />
<text  x="216.15" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.11%)</title><rect x="116.6" y="245" width="1.2" height="15.0" fill="rgb(233,166,27)" rx="2" ry="2" />
<text  x="119.59" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (143 samples, 15.20%)</title><rect x="369.9" y="309" width="179.3" height="15.0" fill="rgb(207,217,6)" rx="2" ry="2" />
<text  x="372.89" y="319.5" >std::_Function_handler&lt;..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="642.0" y="485" width="1.3" height="15.0" fill="rgb(242,168,43)" rx="2" ry="2" />
<text  x="645.01" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1186.2" y="373" width="1.3" height="15.0" fill="rgb(219,54,12)" rx="2" ry="2" />
<text  x="1189.24" y="383.5" ></text>
</g>
<g >
<title>PageId::operator== (4 samples, 0.43%)</title><rect x="326.0" y="85" width="5.0" height="15.0" fill="rgb(237,199,36)" rx="2" ry="2" />
<text  x="329.00" y="95.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef208a5138, (4 samples, 0.43%)</title><rect x="1040.8" y="373" width="5.0" height="15.0" fill="rgb(213,76,17)" rx="2" ry="2" />
<text  x="1043.78" y="383.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (8 samples, 0.85%)</title><rect x="549.2" y="197" width="10.0" height="15.0" fill="rgb(226,170,16)" rx="2" ry="2" />
<text  x="552.21" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (89 samples, 9.46%)</title><rect x="258.3" y="325" width="111.6" height="15.0" fill="rgb(229,92,33)" rx="2" ry="2" />
<text  x="261.29" y="335.5" >std::function..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef15cb0428, (1 samples, 0.11%)</title><rect x="963.0" y="309" width="1.3" height="15.0" fill="rgb(214,25,13)" rx="2" ry="2" />
<text  x="966.03" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.21%)</title><rect x="208.1" y="181" width="2.5" height="15.0" fill="rgb(216,139,22)" rx="2" ry="2" />
<text  x="211.13" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (39 samples, 4.14%)</title><rect x="496.5" y="117" width="49.0" height="15.0" fill="rgb(214,9,52)" rx="2" ry="2" />
<text  x="499.55" y="127.5" >std:..</text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="785.0" y="181" width="1.2" height="15.0" fill="rgb(207,223,4)" rx="2" ry="2" />
<text  x="787.96" y="191.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="154.2" y="117" width="1.3" height="15.0" fill="rgb(215,17,50)" rx="2" ry="2" />
<text  x="157.21" y="127.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (3 samples, 0.32%)</title><rect x="80.2" y="389" width="3.8" height="15.0" fill="rgb(226,32,53)" rx="2" ry="2" />
<text  x="83.22" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="654.5" y="389" width="1.3" height="15.0" fill="rgb(238,112,48)" rx="2" ry="2" />
<text  x="657.55" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.11%)</title><rect x="642.0" y="469" width="1.3" height="15.0" fill="rgb(206,80,31)" rx="2" ry="2" />
<text  x="645.01" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="958.0" y="405" width="8.8" height="15.0" fill="rgb(248,68,10)" rx="2" ry="2" />
<text  x="961.01" y="415.5" ></text>
</g>
<g >
<title>_IO_no_init(fp=fp@entry=0x7ffd1852fba0, (1 samples, 0.11%)</title><rect x="1133.6" y="421" width="1.2" height="15.0" fill="rgb(231,204,3)" rx="2" ry="2" />
<text  x="1136.57" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (9 samples, 0.96%)</title><rect x="1173.7" y="469" width="11.3" height="15.0" fill="rgb(250,183,48)" rx="2" ry="2" />
<text  x="1176.70" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (13 samples, 1.38%)</title><rect x="455.2" y="149" width="16.3" height="15.0" fill="rgb(208,156,12)" rx="2" ry="2" />
<text  x="458.16" y="159.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initPages (4 samples, 0.43%)</title><rect x="1138.6" y="501" width="5.0" height="15.0" fill="rgb(245,118,41)" rx="2" ry="2" />
<text  x="1141.59" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (10 samples, 1.06%)</title><rect x="1109.7" y="421" width="12.6" height="15.0" fill="rgb(220,88,38)" rx="2" ry="2" />
<text  x="1112.74" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.43%)</title><rect x="867.7" y="389" width="5.0" height="15.0" fill="rgb(254,216,28)" rx="2" ry="2" />
<text  x="870.73" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (19 samples, 2.02%)</title><rect x="343.6" y="133" width="23.8" height="15.0" fill="rgb(212,75,40)" rx="2" ry="2" />
<text  x="346.56" y="143.5" >s..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="213.1" y="37" width="1.3" height="15.0" fill="rgb(214,53,0)" rx="2" ry="2" />
<text  x="216.15" y="47.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (387 samples, 41.13%)</title><rect x="153.0" y="405" width="485.2" height="15.0" fill="rgb(243,168,6)" rx="2" ry="2" />
<text  x="155.95" y="415.5" >std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="170.5" y="149" width="1.3" height="15.0" fill="rgb(247,11,50)" rx="2" ry="2" />
<text  x="173.51" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (30 samples, 3.19%)</title><rect x="278.4" y="197" width="37.6" height="15.0" fill="rgb(206,78,15)" rx="2" ry="2" />
<text  x="281.35" y="207.5" >Mul..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (2 samples, 0.21%)</title><rect x="367.4" y="213" width="2.5" height="15.0" fill="rgb(242,82,38)" rx="2" ry="2" />
<text  x="370.39" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="153.0" y="325" width="20.0" height="15.0" fill="rgb(229,124,24)" rx="2" ry="2" />
<text  x="155.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1171.2" y="357" width="2.5" height="15.0" fill="rgb(226,37,48)" rx="2" ry="2" />
<text  x="1174.19" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (4 samples, 0.43%)</title><rect x="1138.6" y="469" width="5.0" height="15.0" fill="rgb(218,200,26)" rx="2" ry="2" />
<text  x="1141.59" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (143 samples, 15.20%)</title><rect x="369.9" y="245" width="179.3" height="15.0" fill="rgb(228,156,52)" rx="2" ry="2" />
<text  x="372.89" y="255.5" >std::__invoke&lt;MultiThre..</text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="1035.8" y="405" width="5.0" height="15.0" fill="rgb(219,206,0)" rx="2" ry="2" />
<text  x="1038.76" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef20441db8, (1 samples, 0.11%)</title><rect x="810.0" y="293" width="1.3" height="15.0" fill="rgb(234,152,36)" rx="2" ry="2" />
<text  x="813.04" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="149.2" y="373" width="1.2" height="15.0" fill="rgb(222,217,22)" rx="2" ry="2" />
<text  x="152.19" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*&gt; (1 samples, 0.11%)</title><rect x="1186.2" y="485" width="1.3" height="15.0" fill="rgb(223,104,41)" rx="2" ry="2" />
<text  x="1189.24" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf98886210) (1 samples, 0.11%)</title><rect x="783.7" y="181" width="1.3" height="15.0" fill="rgb(224,164,48)" rx="2" ry="2" />
<text  x="786.71" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (41 samples, 4.36%)</title><rect x="776.2" y="357" width="51.4" height="15.0" fill="rgb(247,61,51)" rx="2" ry="2" />
<text  x="779.18" y="367.5" >std::..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="1104.7" y="389" width="5.0" height="15.0" fill="rgb(208,185,25)" rx="2" ry="2" />
<text  x="1107.73" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (3 samples, 0.32%)</title><rect x="1018.2" y="405" width="3.8" height="15.0" fill="rgb(234,32,11)" rx="2" ry="2" />
<text  x="1021.20" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf84dff670) (1 samples, 0.11%)</title><rect x="791.2" y="181" width="1.3" height="15.0" fill="rgb(253,157,16)" rx="2" ry="2" />
<text  x="794.23" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (1 samples, 0.11%)</title><rect x="342.3" y="133" width="1.3" height="15.0" fill="rgb(215,7,16)" rx="2" ry="2" />
<text  x="345.31" y="143.5" ></text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="771.2" y="357" width="5.0" height="15.0" fill="rgb(254,210,44)" rx="2" ry="2" />
<text  x="774.17" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="10.0" y="469" width="1.3" height="15.0" fill="rgb(217,129,32)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="915.4" y="485" width="1.2" height="15.0" fill="rgb(210,74,10)" rx="2" ry="2" />
<text  x="918.38" y="495.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="771.2" y="389" width="5.0" height="15.0" fill="rgb(250,206,52)" rx="2" ry="2" />
<text  x="774.17" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="862.7" y="437" width="3.8" height="15.0" fill="rgb(241,23,16)" rx="2" ry="2" />
<text  x="865.71" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="173.0" y="197" width="3.8" height="15.0" fill="rgb(221,225,9)" rx="2" ry="2" />
<text  x="176.02" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.64%)</title><rect x="245.7" y="165" width="7.6" height="15.0" fill="rgb(219,52,43)" rx="2" ry="2" />
<text  x="248.75" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef24a99540, (1 samples, 0.11%)</title><rect x="961.8" y="213" width="1.2" height="15.0" fill="rgb(208,120,33)" rx="2" ry="2" />
<text  x="964.77" y="223.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="771.2" y="437" width="5.0" height="15.0" fill="rgb(247,132,3)" rx="2" ry="2" />
<text  x="774.17" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (11 samples, 1.17%)</title><rect x="595.6" y="165" width="13.8" height="15.0" fill="rgb(207,98,11)" rx="2" ry="2" />
<text  x="598.61" y="175.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (21 samples, 2.23%)</title><rect x="699.7" y="501" width="26.3" height="15.0" fill="rgb(248,53,23)" rx="2" ry="2" />
<text  x="702.69" y="511.5" >M..</text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="1045.8" y="405" width="5.0" height="15.0" fill="rgb(226,11,50)" rx="2" ry="2" />
<text  x="1048.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="1122.3" y="453" width="5.0" height="15.0" fill="rgb(245,17,33)" rx="2" ry="2" />
<text  x="1125.28" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.64%)</title><rect x="316.0" y="181" width="7.5" height="15.0" fill="rgb(236,214,19)" rx="2" ry="2" />
<text  x="318.97" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0bb1c878) (3 samples, 0.32%)</title><rect x="262.1" y="133" width="3.7" height="15.0" fill="rgb(239,190,12)" rx="2" ry="2" />
<text  x="265.05" y="143.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;Page*, (1 samples, 0.11%)</title><rect x="1128.6" y="405" width="1.2" height="15.0" fill="rgb(215,209,34)" rx="2" ry="2" />
<text  x="1131.55" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="95.3" y="325" width="1.2" height="15.0" fill="rgb(231,116,9)" rx="2" ry="2" />
<text  x="98.27" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="1122.3" y="421" width="1.2" height="15.0" fill="rgb(229,126,19)" rx="2" ry="2" />
<text  x="1125.28" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (3 samples, 0.32%)</title><rect x="327.3" y="53" width="3.7" height="15.0" fill="rgb(214,146,30)" rx="2" ry="2" />
<text  x="330.26" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef220c5e68, (1 samples, 0.11%)</title><rect x="823.8" y="293" width="1.3" height="15.0" fill="rgb(210,175,19)" rx="2" ry="2" />
<text  x="826.84" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="357" width="1.2" height="15.0" fill="rgb(221,24,9)" rx="2" ry="2" />
<text  x="864.46" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.11%)</title><rect x="84.0" y="421" width="1.2" height="15.0" fill="rgb(239,9,9)" rx="2" ry="2" />
<text  x="86.99" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="1138.6" y="437" width="1.2" height="15.0" fill="rgb(246,45,15)" rx="2" ry="2" />
<text  x="1141.59" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (19 samples, 2.02%)</title><rect x="1010.7" y="485" width="23.8" height="15.0" fill="rgb(241,25,21)" rx="2" ry="2" />
<text  x="1013.68" y="495.5" >s..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (57 samples, 6.06%)</title><rect x="549.2" y="277" width="71.5" height="15.0" fill="rgb(233,172,16)" rx="2" ry="2" />
<text  x="552.21" y="287.5" >std::thr..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="1104.7" y="437" width="5.0" height="15.0" fill="rgb(231,78,30)" rx="2" ry="2" />
<text  x="1107.73" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="23.8" y="453" width="1.2" height="15.0" fill="rgb(229,167,1)" rx="2" ry="2" />
<text  x="26.79" y="463.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="91.5" y="293" width="1.3" height="15.0" fill="rgb(245,122,3)" rx="2" ry="2" />
<text  x="94.51" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf78000020, (1 samples, 0.11%)</title><rect x="787.5" y="181" width="1.2" height="15.0" fill="rgb(227,77,54)" rx="2" ry="2" />
<text  x="790.47" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="818.8" y="277" width="1.3" height="15.0" fill="rgb(244,173,20)" rx="2" ry="2" />
<text  x="821.82" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="155.5" y="149" width="1.2" height="15.0" fill="rgb(224,149,30)" rx="2" ry="2" />
<text  x="158.46" y="159.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (44 samples, 4.68%)</title><rect x="28.8" y="533" width="55.2" height="15.0" fill="rgb(228,25,33)" rx="2" ry="2" />
<text  x="31.81" y="543.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="916.6" y="293" width="2.5" height="15.0" fill="rgb(207,92,24)" rx="2" ry="2" />
<text  x="919.63" y="303.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.43%)</title><rect x="253.3" y="149" width="5.0" height="15.0" fill="rgb(243,7,48)" rx="2" ry="2" />
<text  x="256.27" y="159.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2222d5a8, (43 samples, 4.57%)</title><rect x="1050.8" y="373" width="53.9" height="15.0" fill="rgb(225,101,0)" rx="2" ry="2" />
<text  x="1053.81" y="383.5" >__pth..</text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="841.4" y="405" width="1.2" height="15.0" fill="rgb(226,199,50)" rx="2" ry="2" />
<text  x="844.39" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="861.5" y="309" width="1.2" height="15.0" fill="rgb(217,166,10)" rx="2" ry="2" />
<text  x="864.46" y="319.5" ></text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="727.3" y="357" width="5.0" height="15.0" fill="rgb(225,23,16)" rx="2" ry="2" />
<text  x="730.28" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef22074358, (1 samples, 0.11%)</title><rect x="822.6" y="293" width="1.2" height="15.0" fill="rgb(246,204,44)" rx="2" ry="2" />
<text  x="825.58" y="303.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="890.3" y="405" width="1.3" height="15.0" fill="rgb(241,217,46)" rx="2" ry="2" />
<text  x="893.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.21%)</title><rect x="208.1" y="165" width="2.5" height="15.0" fill="rgb(225,1,14)" rx="2" ry="2" />
<text  x="211.13" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.11%)</title><rect x="886.5" y="341" width="1.3" height="15.0" fill="rgb(216,200,44)" rx="2" ry="2" />
<text  x="889.54" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf78b97050) (1 samples, 0.11%)</title><rect x="776.2" y="181" width="1.2" height="15.0" fill="rgb(239,79,54)" rx="2" ry="2" />
<text  x="779.18" y="191.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="850.2" y="437" width="1.2" height="15.0" fill="rgb(235,136,36)" rx="2" ry="2" />
<text  x="853.17" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="91.5" y="309" width="1.3" height="15.0" fill="rgb(223,222,54)" rx="2" ry="2" />
<text  x="94.51" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef22170ad8, (1 samples, 0.11%)</title><rect x="825.1" y="293" width="1.2" height="15.0" fill="rgb(208,3,16)" rx="2" ry="2" />
<text  x="828.09" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.43%)</title><rect x="596.9" y="133" width="5.0" height="15.0" fill="rgb(214,108,7)" rx="2" ry="2" />
<text  x="599.87" y="143.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (57 samples, 6.06%)</title><rect x="549.2" y="309" width="71.5" height="15.0" fill="rgb(232,46,9)" rx="2" ry="2" />
<text  x="552.21" y="319.5" >std::_Fu..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1188.7" y="421" width="1.3" height="15.0" fill="rgb(213,72,8)" rx="2" ry="2" />
<text  x="1191.75" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="84.0" y="453" width="1.2" height="15.0" fill="rgb(231,54,9)" rx="2" ry="2" />
<text  x="86.99" y="463.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd40, (1 samples, 0.11%)</title><rect x="1132.3" y="453" width="1.3" height="15.0" fill="rgb(232,94,24)" rx="2" ry="2" />
<text  x="1135.32" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf88000020) (1 samples, 0.11%)</title><rect x="810.0" y="261" width="1.3" height="15.0" fill="rgb(205,23,26)" rx="2" ry="2" />
<text  x="813.04" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (23 samples, 2.44%)</title><rect x="929.2" y="453" width="28.8" height="15.0" fill="rgb(223,89,31)" rx="2" ry="2" />
<text  x="932.17" y="463.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="634.5" y="165" width="1.2" height="15.0" fill="rgb(222,127,33)" rx="2" ry="2" />
<text  x="637.48" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (11 samples, 1.17%)</title><rect x="136.7" y="389" width="13.7" height="15.0" fill="rgb(241,163,36)" rx="2" ry="2" />
<text  x="139.65" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef085b1788) (2 samples, 0.21%)</title><rect x="270.8" y="149" width="2.5" height="15.0" fill="rgb(211,74,22)" rx="2" ry="2" />
<text  x="273.83" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef221aa7c0) (1 samples, 0.11%)</title><rect x="106.6" y="357" width="1.2" height="15.0" fill="rgb(252,153,44)" rx="2" ry="2" />
<text  x="109.56" y="367.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.43%)</title><rect x="867.7" y="373" width="5.0" height="15.0" fill="rgb(211,23,22)" rx="2" ry="2" />
<text  x="870.73" y="383.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize(this=0x7ffd18530450, (2 samples, 0.21%)</title><rect x="827.6" y="517" width="2.5" height="15.0" fill="rgb(246,45,48)" rx="2" ry="2" />
<text  x="830.60" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="111.6" y="277" width="5.0" height="15.0" fill="rgb(221,194,10)" rx="2" ry="2" />
<text  x="114.57" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="857.7" y="453" width="1.2" height="15.0" fill="rgb(253,128,13)" rx="2" ry="2" />
<text  x="860.69" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="654.5" y="437" width="1.3" height="15.0" fill="rgb(235,66,54)" rx="2" ry="2" />
<text  x="657.55" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="175.5" y="133" width="1.3" height="15.0" fill="rgb(223,110,37)" rx="2" ry="2" />
<text  x="178.53" y="143.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (4 samples, 0.43%)</title><rect x="326.0" y="69" width="5.0" height="15.0" fill="rgb(233,149,34)" rx="2" ry="2" />
<text  x="329.00" y="79.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (5 samples, 0.53%)</title><rect x="648.3" y="405" width="6.2" height="15.0" fill="rgb(243,1,0)" rx="2" ry="2" />
<text  x="651.28" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (5 samples, 0.53%)</title><rect x="872.7" y="437" width="6.3" height="15.0" fill="rgb(230,127,52)" rx="2" ry="2" />
<text  x="875.74" y="447.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1122.3" y="373" width="1.2" height="15.0" fill="rgb(231,202,2)" rx="2" ry="2" />
<text  x="1125.28" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (6 samples, 0.64%)</title><rect x="32.6" y="485" width="7.5" height="15.0" fill="rgb(244,191,17)" rx="2" ry="2" />
<text  x="35.57" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="1022.0" y="437" width="1.2" height="15.0" fill="rgb(206,227,1)" rx="2" ry="2" />
<text  x="1024.97" y="447.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (1 samples, 0.11%)</title><rect x="91.5" y="373" width="1.3" height="15.0" fill="rgb(240,70,2)" rx="2" ry="2" />
<text  x="94.51" y="383.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (6 samples, 0.64%)</title><rect x="32.6" y="389" width="7.5" height="15.0" fill="rgb(228,57,28)" rx="2" ry="2" />
<text  x="35.57" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (12 samples, 1.28%)</title><rect x="456.4" y="133" width="15.1" height="15.0" fill="rgb(226,161,38)" rx="2" ry="2" />
<text  x="459.42" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="845.2" y="453" width="1.2" height="15.0" fill="rgb(237,215,39)" rx="2" ry="2" />
<text  x="848.15" y="463.5" ></text>
</g>
<g >
<title>Page::generateId(idGenerator=..., (1 samples, 0.11%)</title><rect x="860.2" y="485" width="1.3" height="15.0" fill="rgb(231,116,41)" rx="2" ry="2" />
<text  x="863.20" y="495.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="727.3" y="341" width="5.0" height="15.0" fill="rgb(213,134,21)" rx="2" ry="2" />
<text  x="730.28" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (2 samples, 0.21%)</title><rect x="213.1" y="293" width="2.6" height="15.0" fill="rgb(225,12,2)" rx="2" ry="2" />
<text  x="216.15" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="645.8" y="437" width="2.5" height="15.0" fill="rgb(219,65,31)" rx="2" ry="2" />
<text  x="648.77" y="447.5" ></text>
</g>
<g >
<title>PageId::operator== (3 samples, 0.32%)</title><rect x="709.7" y="357" width="3.8" height="15.0" fill="rgb(254,37,40)" rx="2" ry="2" />
<text  x="712.72" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.32%)</title><rect x="253.3" y="101" width="3.7" height="15.0" fill="rgb(207,124,32)" rx="2" ry="2" />
<text  x="256.27" y="111.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2222d5a8, (32 samples, 3.40%)</title><rect x="40.1" y="421" width="40.1" height="15.0" fill="rgb(251,8,48)" rx="2" ry="2" />
<text  x="43.10" y="431.5" >__p..</text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="843.9" y="405" width="1.3" height="15.0" fill="rgb(223,163,38)" rx="2" ry="2" />
<text  x="846.90" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.11%)</title><rect x="213.1" y="69" width="1.3" height="15.0" fill="rgb(233,75,48)" rx="2" ry="2" />
<text  x="216.15" y="79.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="92.8" y="325" width="1.2" height="15.0" fill="rgb(244,113,40)" rx="2" ry="2" />
<text  x="95.76" y="335.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (10 samples, 1.06%)</title><rect x="1109.7" y="389" width="12.6" height="15.0" fill="rgb(248,14,29)" rx="2" ry="2" />
<text  x="1112.74" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (27 samples, 2.87%)</title><rect x="776.2" y="325" width="33.8" height="15.0" fill="rgb(248,125,37)" rx="2" ry="2" />
<text  x="779.18" y="335.5" >st..</text>
</g>
<g >
<title>std::mutex::lock (3 samples, 0.32%)</title><rect x="193.1" y="165" width="3.7" height="15.0" fill="rgb(254,177,3)" rx="2" ry="2" />
<text  x="196.08" y="175.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="215.7" y="117" width="1.2" height="15.0" fill="rgb(206,10,21)" rx="2" ry="2" />
<text  x="218.65" y="127.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="1104.7" y="341" width="5.0" height="15.0" fill="rgb(233,79,53)" rx="2" ry="2" />
<text  x="1107.73" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="633.2" y="149" width="1.3" height="15.0" fill="rgb(211,12,45)" rx="2" ry="2" />
<text  x="636.23" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="781.2" y="181" width="1.3" height="15.0" fill="rgb(210,17,33)" rx="2" ry="2" />
<text  x="784.20" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf922d5dc0, (1 samples, 0.11%)</title><rect x="800.0" y="197" width="1.3" height="15.0" fill="rgb(253,121,14)" rx="2" ry="2" />
<text  x="803.01" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="189.3" y="181" width="1.3" height="15.0" fill="rgb(245,8,54)" rx="2" ry="2" />
<text  x="192.32" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.64%)</title><rect x="1027.0" y="453" width="7.5" height="15.0" fill="rgb(245,142,10)" rx="2" ry="2" />
<text  x="1029.98" y="463.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (2 samples, 0.21%)</title><rect x="1132.3" y="501" width="2.5" height="15.0" fill="rgb(238,134,52)" rx="2" ry="2" />
<text  x="1135.32" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.32%)</title><rect x="319.7" y="101" width="3.8" height="15.0" fill="rgb(229,157,5)" rx="2" ry="2" />
<text  x="322.73" y="111.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.21%)</title><rect x="894.1" y="405" width="2.5" height="15.0" fill="rgb(206,50,39)" rx="2" ry="2" />
<text  x="897.06" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="195.6" y="133" width="1.2" height="15.0" fill="rgb(226,212,12)" rx="2" ry="2" />
<text  x="198.59" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef2057a0c0) (1 samples, 0.11%)</title><rect x="99.0" y="341" width="1.3" height="15.0" fill="rgb(243,2,18)" rx="2" ry="2" />
<text  x="102.03" y="351.5" ></text>
</g>
<g >
<title>PageId::~PageId (2 samples, 0.21%)</title><rect x="1173.7" y="405" width="2.5" height="15.0" fill="rgb(250,94,16)" rx="2" ry="2" />
<text  x="1176.70" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.11%)</title><rect x="87.7" y="485" width="1.3" height="15.0" fill="rgb(241,224,18)" rx="2" ry="2" />
<text  x="90.75" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (2 samples, 0.21%)</title><rect x="1187.5" y="501" width="2.5" height="15.0" fill="rgb(215,160,18)" rx="2" ry="2" />
<text  x="1190.49" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="633.2" y="133" width="1.3" height="15.0" fill="rgb(212,104,48)" rx="2" ry="2" />
<text  x="636.23" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="169.3" y="165" width="1.2" height="15.0" fill="rgb(236,52,11)" rx="2" ry="2" />
<text  x="172.26" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (11 samples, 1.17%)</title><rect x="136.7" y="405" width="13.7" height="15.0" fill="rgb(215,105,43)" rx="2" ry="2" />
<text  x="139.65" y="415.5" ></text>
</g>
<g >
<title>PageIdAndRank::~PageIdAndRank (1 samples, 0.11%)</title><rect x="1186.2" y="437" width="1.3" height="15.0" fill="rgb(218,18,31)" rx="2" ry="2" />
<text  x="1189.24" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (14 samples, 1.49%)</title><rect x="1109.7" y="469" width="17.6" height="15.0" fill="rgb(249,94,35)" rx="2" ry="2" />
<text  x="1112.74" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf692dd480, (1 samples, 0.11%)</title><rect x="776.2" y="197" width="1.2" height="15.0" fill="rgb(247,151,8)" rx="2" ry="2" />
<text  x="779.18" y="207.5" ></text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="1045.8" y="357" width="5.0" height="15.0" fill="rgb(242,138,48)" rx="2" ry="2" />
<text  x="1048.79" y="367.5" ></text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.11%)</title><rect x="726.0" y="357" width="1.3" height="15.0" fill="rgb(217,101,43)" rx="2" ry="2" />
<text  x="729.03" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="126.6" y="229" width="1.3" height="15.0" fill="rgb(235,79,5)" rx="2" ry="2" />
<text  x="129.62" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.11%)</title><rect x="249.5" y="69" width="1.3" height="15.0" fill="rgb(232,42,37)" rx="2" ry="2" />
<text  x="252.51" y="79.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="10.0" y="437" width="1.3" height="15.0" fill="rgb(207,57,12)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=474830) (1 samples, 0.11%)</title><rect x="1133.6" y="485" width="1.2" height="15.0" fill="rgb(220,27,21)" rx="2" ry="2" />
<text  x="1136.57" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="637.0" y="149" width="1.2" height="15.0" fill="rgb(214,60,19)" rx="2" ry="2" />
<text  x="639.99" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.53%)</title><rect x="136.7" y="325" width="6.2" height="15.0" fill="rgb(229,28,51)" rx="2" ry="2" />
<text  x="139.65" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.32%)</title><rect x="253.3" y="117" width="3.7" height="15.0" fill="rgb(210,212,44)" rx="2" ry="2" />
<text  x="256.27" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="135.4" y="213" width="1.3" height="15.0" fill="rgb(207,64,15)" rx="2" ry="2" />
<text  x="138.40" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="801.3" y="181" width="1.2" height="15.0" fill="rgb(253,144,43)" rx="2" ry="2" />
<text  x="804.26" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.43%)</title><rect x="596.9" y="117" width="5.0" height="15.0" fill="rgb(228,45,30)" rx="2" ry="2" />
<text  x="599.87" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="958.0" y="437" width="8.8" height="15.0" fill="rgb(243,32,1)" rx="2" ry="2" />
<text  x="961.01" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (43 samples, 4.57%)</title><rect x="1050.8" y="437" width="53.9" height="15.0" fill="rgb(206,22,46)" rx="2" ry="2" />
<text  x="1053.81" y="447.5" >std::..</text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="1104.7" y="357" width="5.0" height="15.0" fill="rgb(238,9,22)" rx="2" ry="2" />
<text  x="1107.73" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.11%)</title><rect x="249.5" y="53" width="1.3" height="15.0" fill="rgb(225,137,24)" rx="2" ry="2" />
<text  x="252.51" y="63.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (5 samples, 0.53%)</title><rect x="648.3" y="437" width="6.2" height="15.0" fill="rgb(233,36,33)" rx="2" ry="2" />
<text  x="651.28" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (1 samples, 0.11%)</title><rect x="637.0" y="133" width="1.2" height="15.0" fill="rgb(247,219,45)" rx="2" ry="2" />
<text  x="639.99" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.32%)</title><rect x="130.4" y="309" width="3.7" height="15.0" fill="rgb(209,186,26)" rx="2" ry="2" />
<text  x="133.38" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (5 samples, 0.53%)</title><rect x="830.1" y="421" width="6.3" height="15.0" fill="rgb(244,150,29)" rx="2" ry="2" />
<text  x="833.11" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (387 samples, 41.13%)</title><rect x="153.0" y="485" width="485.2" height="15.0" fill="rgb(214,5,49)" rx="2" ry="2" />
<text  x="155.95" y="495.5" >std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_..</text>
</g>
<g >
<title>_int_free(av=0x7fcf6c000020, (1 samples, 0.11%)</title><rect x="811.3" y="277" width="1.3" height="15.0" fill="rgb(220,104,27)" rx="2" ry="2" />
<text  x="814.30" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (14 samples, 1.49%)</title><rect x="620.7" y="309" width="17.5" height="15.0" fill="rgb(227,197,8)" rx="2" ry="2" />
<text  x="623.69" y="319.5" ></text>
</g>
<g >
<title>PageId::operator== (5 samples, 0.53%)</title><rect x="136.7" y="277" width="6.2" height="15.0" fill="rgb(228,75,35)" rx="2" ry="2" />
<text  x="139.65" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c5640) (1 samples, 0.11%)</title><rect x="555.5" y="149" width="1.2" height="15.0" fill="rgb(212,36,7)" rx="2" ry="2" />
<text  x="558.48" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="872.7" y="389" width="2.5" height="15.0" fill="rgb(208,118,35)" rx="2" ry="2" />
<text  x="875.74" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf80000020) (1 samples, 0.11%)</title><rect x="815.1" y="261" width="1.2" height="15.0" fill="rgb(251,148,7)" rx="2" ry="2" />
<text  x="818.06" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="899.1" y="357" width="5.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="902.08" y="367.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="856.4" y="421" width="1.3" height="15.0" fill="rgb(225,190,0)" rx="2" ry="2" />
<text  x="859.44" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="245.7" y="133" width="1.3" height="15.0" fill="rgb(239,215,13)" rx="2" ry="2" />
<text  x="248.75" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (87 samples, 9.25%)</title><rect x="258.3" y="213" width="109.1" height="15.0" fill="rgb(209,90,47)" rx="2" ry="2" />
<text  x="261.29" y="223.5" >MultiThreaded..</text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.11%)</title><rect x="84.0" y="533" width="1.2" height="15.0" fill="rgb(242,92,19)" rx="2" ry="2" />
<text  x="86.99" y="543.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="840.1" y="421" width="1.3" height="15.0" fill="rgb(221,1,32)" rx="2" ry="2" />
<text  x="843.14" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (1 samples, 0.11%)</title><rect x="1009.4" y="501" width="1.3" height="15.0" fill="rgb(251,17,20)" rx="2" ry="2" />
<text  x="1012.43" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=397) (1 samples, 0.11%)</title><rect x="638.2" y="469" width="1.3" height="15.0" fill="rgb(244,12,44)" rx="2" ry="2" />
<text  x="641.25" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="1138.6" y="453" width="3.7" height="15.0" fill="rgb(239,140,21)" rx="2" ry="2" />
<text  x="1141.59" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;PageId, (1 samples, 0.11%)</title><rect x="891.6" y="389" width="1.2" height="15.0" fill="rgb(205,2,18)" rx="2" ry="2" />
<text  x="894.55" y="399.5" ></text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.43%)</title><rect x="958.0" y="293" width="5.0" height="15.0" fill="rgb(209,142,31)" rx="2" ry="2" />
<text  x="961.01" y="303.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (3 samples, 0.32%)</title><rect x="709.7" y="373" width="3.8" height="15.0" fill="rgb(208,85,15)" rx="2" ry="2" />
<text  x="712.72" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef085b1750) (1 samples, 0.11%)</title><rect x="372.4" y="133" width="1.3" height="15.0" fill="rgb(240,82,47)" rx="2" ry="2" />
<text  x="375.40" y="143.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (39 samples, 4.14%)</title><rect x="496.5" y="133" width="49.0" height="15.0" fill="rgb(237,226,41)" rx="2" ry="2" />
<text  x="499.55" y="143.5" >std:..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf80000020) (1 samples, 0.11%)</title><rect x="813.8" y="261" width="1.3" height="15.0" fill="rgb(245,123,3)" rx="2" ry="2" />
<text  x="816.80" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (1 samples, 0.11%)</title><rect x="595.6" y="101" width="1.3" height="15.0" fill="rgb(249,184,6)" rx="2" ry="2" />
<text  x="598.61" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="958.0" y="245" width="5.0" height="15.0" fill="rgb(254,26,6)" rx="2" ry="2" />
<text  x="961.01" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="837.6" y="453" width="1.3" height="15.0" fill="rgb(252,38,17)" rx="2" ry="2" />
<text  x="840.63" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;PageId, (1 samples, 0.11%)</title><rect x="135.4" y="293" width="1.3" height="15.0" fill="rgb(227,172,7)" rx="2" ry="2" />
<text  x="138.40" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (13 samples, 1.38%)</title><rect x="709.7" y="485" width="16.3" height="15.0" fill="rgb(243,13,2)" rx="2" ry="2" />
<text  x="712.72" y="495.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1181.2" y="229" width="1.3" height="15.0" fill="rgb(236,174,8)" rx="2" ry="2" />
<text  x="1184.22" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef198121d8, (1 samples, 0.11%)</title><rect x="1182.5" y="341" width="1.2" height="15.0" fill="rgb(223,118,52)" rx="2" ry="2" />
<text  x="1185.48" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="644.5" y="325" width="1.3" height="15.0" fill="rgb(246,28,4)" rx="2" ry="2" />
<text  x="647.52" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (5 samples, 0.53%)</title><rect x="872.7" y="405" width="6.3" height="15.0" fill="rgb(221,218,23)" rx="2" ry="2" />
<text  x="875.74" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.32%)</title><rect x="1018.2" y="421" width="3.8" height="15.0" fill="rgb(242,75,47)" rx="2" ry="2" />
<text  x="1021.20" y="431.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (19 samples, 2.02%)</title><rect x="343.6" y="149" width="23.8" height="15.0" fill="rgb(234,126,5)" rx="2" ry="2" />
<text  x="346.56" y="159.5" >P..</text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (2 samples, 0.21%)</title><rect x="213.1" y="229" width="2.6" height="15.0" fill="rgb(208,56,15)" rx="2" ry="2" />
<text  x="216.15" y="239.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="189.3" y="149" width="1.3" height="15.0" fill="rgb(209,1,29)" rx="2" ry="2" />
<text  x="192.32" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="374.9" y="133" width="1.3" height="15.0" fill="rgb(233,25,7)" rx="2" ry="2" />
<text  x="377.91" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.32%)</title><rect x="327.3" y="37" width="3.7" height="15.0" fill="rgb(240,19,50)" rx="2" ry="2" />
<text  x="330.26" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.11%)</title><rect x="891.6" y="357" width="1.2" height="15.0" fill="rgb(207,71,17)" rx="2" ry="2" />
<text  x="894.55" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (8 samples, 0.85%)</title><rect x="158.0" y="197" width="10.0" height="15.0" fill="rgb(225,190,28)" rx="2" ry="2" />
<text  x="160.97" y="207.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.11%)</title><rect x="644.5" y="389" width="1.3" height="15.0" fill="rgb(238,143,25)" rx="2" ry="2" />
<text  x="647.52" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="1137.3" y="389" width="1.3" height="15.0" fill="rgb(239,95,2)" rx="2" ry="2" />
<text  x="1140.33" y="399.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="727.3" y="389" width="5.0" height="15.0" fill="rgb(247,222,46)" rx="2" ry="2" />
<text  x="730.28" y="399.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="817.6" y="245" width="1.2" height="15.0" fill="rgb(231,73,33)" rx="2" ry="2" />
<text  x="820.57" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (2 samples, 0.21%)</title><rect x="1129.8" y="469" width="2.5" height="15.0" fill="rgb(245,208,11)" rx="2" ry="2" />
<text  x="1132.81" y="479.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="857.7" y="405" width="1.2" height="15.0" fill="rgb(246,147,14)" rx="2" ry="2" />
<text  x="860.69" y="415.5" ></text>
</g>
<g >
<title>PageId::operator== (5 samples, 0.53%)</title><rect x="465.2" y="85" width="6.3" height="15.0" fill="rgb(247,229,18)" rx="2" ry="2" />
<text  x="468.20" y="95.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (57 samples, 6.06%)</title><rect x="549.2" y="245" width="71.5" height="15.0" fill="rgb(228,216,45)" rx="2" ry="2" />
<text  x="552.21" y="255.5" >std::__i..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (20 samples, 2.13%)</title><rect x="595.6" y="181" width="25.1" height="15.0" fill="rgb(222,5,27)" rx="2" ry="2" />
<text  x="598.61" y="191.5" >s..</text>
</g>
<g >
<title>std::vector&lt;PageId, (5 samples, 0.53%)</title><rect x="130.4" y="373" width="6.3" height="15.0" fill="rgb(206,106,29)" rx="2" ry="2" />
<text  x="133.38" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="1169.9" y="453" width="1.3" height="15.0" fill="rgb(206,152,28)" rx="2" ry="2" />
<text  x="1172.94" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.11%)</title><rect x="1186.2" y="357" width="1.3" height="15.0" fill="rgb(238,27,46)" rx="2" ry="2" />
<text  x="1189.24" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=&lt;optimized (2 samples, 0.21%)</title><rect x="364.9" y="117" width="2.5" height="15.0" fill="rgb(225,126,40)" rx="2" ry="2" />
<text  x="367.88" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.11%)</title><rect x="85.2" y="421" width="1.3" height="15.0" fill="rgb(215,34,17)" rx="2" ry="2" />
<text  x="88.24" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (5 samples, 0.53%)</title><rect x="899.1" y="453" width="6.2" height="15.0" fill="rgb(215,37,52)" rx="2" ry="2" />
<text  x="902.08" y="463.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="855.2" y="421" width="1.2" height="15.0" fill="rgb(238,95,35)" rx="2" ry="2" />
<text  x="858.19" y="431.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf98000020) (1 samples, 0.11%)</title><rect x="820.1" y="261" width="1.2" height="15.0" fill="rgb(237,167,1)" rx="2" ry="2" />
<text  x="823.07" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf82184f00, (1 samples, 0.11%)</title><rect x="788.7" y="197" width="1.3" height="15.0" fill="rgb(214,183,44)" rx="2" ry="2" />
<text  x="791.72" y="207.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (32 samples, 3.40%)</title><rect x="40.1" y="389" width="40.1" height="15.0" fill="rgb(223,124,15)" rx="2" ry="2" />
<text  x="43.10" y="399.5" >__p..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.21%)</title><rect x="1139.8" y="437" width="2.5" height="15.0" fill="rgb(213,27,12)" rx="2" ry="2" />
<text  x="1142.84" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef20457dd0) (2 samples, 0.21%)</title><rect x="94.0" y="341" width="2.5" height="15.0" fill="rgb(226,117,52)" rx="2" ry="2" />
<text  x="97.02" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="902.8" y="309" width="1.3" height="15.0" fill="rgb(217,118,41)" rx="2" ry="2" />
<text  x="905.84" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.32%)</title><rect x="862.7" y="405" width="3.8" height="15.0" fill="rgb(215,52,39)" rx="2" ry="2" />
<text  x="865.71" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (1 samples, 0.11%)</title><rect x="1128.6" y="373" width="1.2" height="15.0" fill="rgb(227,111,35)" rx="2" ry="2" />
<text  x="1131.55" y="383.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.11%)</title><rect x="126.6" y="213" width="1.3" height="15.0" fill="rgb(254,156,45)" rx="2" ry="2" />
<text  x="129.62" y="223.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="153.0" y="261" width="20.0" height="15.0" fill="rgb(205,16,22)" rx="2" ry="2" />
<text  x="155.95" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf9449c390) (1 samples, 0.11%)</title><rect x="807.5" y="181" width="1.3" height="15.0" fill="rgb(225,192,36)" rx="2" ry="2" />
<text  x="810.53" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (14 samples, 1.49%)</title><rect x="620.7" y="293" width="17.5" height="15.0" fill="rgb(221,57,54)" rx="2" ry="2" />
<text  x="623.69" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="825.1" y="245" width="1.2" height="15.0" fill="rgb(232,20,41)" rx="2" ry="2" />
<text  x="828.09" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="820.1" y="277" width="1.2" height="15.0" fill="rgb(239,38,4)" rx="2" ry="2" />
<text  x="823.07" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (9 samples, 0.96%)</title><rect x="879.0" y="453" width="11.3" height="15.0" fill="rgb(254,108,17)" rx="2" ry="2" />
<text  x="882.01" y="463.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (5 samples, 0.53%)</title><rect x="136.7" y="293" width="6.2" height="15.0" fill="rgb(212,94,27)" rx="2" ry="2" />
<text  x="139.65" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.11%)</title><rect x="1134.8" y="405" width="1.3" height="15.0" fill="rgb(233,66,37)" rx="2" ry="2" />
<text  x="1137.82" y="415.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateResult (1 samples, 0.11%)</title><rect x="10.0" y="549" width="1.3" height="15.0" fill="rgb(245,117,15)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (23 samples, 2.44%)</title><rect x="742.3" y="341" width="28.9" height="15.0" fill="rgb(218,100,30)" rx="2" ry="2" />
<text  x="745.33" y="351.5" >__..</text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1356) (1 samples, 0.11%)</title><rect x="841.4" y="469" width="1.2" height="15.0" fill="rgb(215,206,10)" rx="2" ry="2" />
<text  x="844.39" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (9 samples, 0.96%)</title><rect x="879.0" y="469" width="11.3" height="15.0" fill="rgb(214,8,15)" rx="2" ry="2" />
<text  x="882.01" y="479.5" ></text>
</g>
<g >
<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (7 samples, 0.74%)</title><rect x="1127.3" y="517" width="8.8" height="15.0" fill="rgb(217,15,2)" rx="2" ry="2" />
<text  x="1130.30" y="527.5" ></text>
</g>
<g >
<title>std::mutex::lock (3 samples, 0.32%)</title><rect x="371.1" y="165" width="3.8" height="15.0" fill="rgb(241,107,48)" rx="2" ry="2" />
<text  x="374.15" y="175.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="84.0" y="517" width="1.2" height="15.0" fill="rgb(234,95,17)" rx="2" ry="2" />
<text  x="86.99" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.64%)</title><rect x="1010.7" y="405" width="7.5" height="15.0" fill="rgb(249,7,11)" rx="2" ry="2" />
<text  x="1013.68" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef11e98c00, (1 samples, 0.11%)</title><rect x="1175.0" y="325" width="1.2" height="15.0" fill="rgb(246,199,36)" rx="2" ry="2" />
<text  x="1177.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.11%)</title><rect x="836.4" y="469" width="1.2" height="15.0" fill="rgb(244,185,17)" rx="2" ry="2" />
<text  x="839.38" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (7 samples, 0.74%)</title><rect x="120.4" y="245" width="8.7" height="15.0" fill="rgb(217,158,54)" rx="2" ry="2" />
<text  x="123.35" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="150.4" y="357" width="2.6" height="15.0" fill="rgb(215,131,29)" rx="2" ry="2" />
<text  x="153.45" y="367.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.43%)</title><rect x="208.1" y="197" width="5.0" height="15.0" fill="rgb(238,213,7)" rx="2" ry="2" />
<text  x="211.13" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef2054d790) (2 samples, 0.21%)</title><rect x="96.5" y="357" width="2.5" height="15.0" fill="rgb(247,58,13)" rx="2" ry="2" />
<text  x="99.52" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd1852ffa0, (4 samples, 0.43%)</title><rect x="907.9" y="421" width="5.0" height="15.0" fill="rgb(235,113,45)" rx="2" ry="2" />
<text  x="910.85" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef20a3ab58, (1 samples, 0.11%)</title><rect x="818.8" y="293" width="1.3" height="15.0" fill="rgb(224,204,45)" rx="2" ry="2" />
<text  x="821.82" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="1104.7" y="421" width="5.0" height="15.0" fill="rgb(225,36,9)" rx="2" ry="2" />
<text  x="1107.73" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="85.2" y="485" width="2.5" height="15.0" fill="rgb(219,190,18)" rx="2" ry="2" />
<text  x="88.24" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=&lt;optimized (1 samples, 0.11%)</title><rect x="257.0" y="117" width="1.3" height="15.0" fill="rgb(221,226,33)" rx="2" ry="2" />
<text  x="260.04" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="890.3" y="469" width="2.5" height="15.0" fill="rgb(236,54,45)" rx="2" ry="2" />
<text  x="893.30" y="479.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="848.9" y="405" width="1.3" height="15.0" fill="rgb(218,200,49)" rx="2" ry="2" />
<text  x="851.92" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (41 samples, 4.36%)</title><rect x="776.2" y="469" width="51.4" height="15.0" fill="rgb(221,99,3)" rx="2" ry="2" />
<text  x="779.18" y="479.5" >std::..</text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="815.1" y="245" width="1.2" height="15.0" fill="rgb(212,172,12)" rx="2" ry="2" />
<text  x="818.06" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="904.1" y="373" width="1.2" height="15.0" fill="rgb(217,117,22)" rx="2" ry="2" />
<text  x="907.09" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf95c35240, (1 samples, 0.11%)</title><rect x="801.3" y="197" width="1.2" height="15.0" fill="rgb(253,78,41)" rx="2" ry="2" />
<text  x="804.26" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.11%)</title><rect x="1008.2" y="469" width="1.2" height="15.0" fill="rgb(250,225,32)" rx="2" ry="2" />
<text  x="1011.17" y="479.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef0b5c5b30) (3 samples, 0.32%)</title><rect x="273.3" y="149" width="3.8" height="15.0" fill="rgb(207,208,4)" rx="2" ry="2" />
<text  x="276.34" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.43%)</title><rect x="958.0" y="229" width="5.0" height="15.0" fill="rgb(209,136,7)" rx="2" ry="2" />
<text  x="961.01" y="239.5" ></text>
</g>
<g >
<title>Page::~Page (9 samples, 0.96%)</title><rect x="1173.7" y="421" width="11.3" height="15.0" fill="rgb(235,137,44)" rx="2" ry="2" />
<text  x="1176.70" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef207e6228, (1 samples, 0.11%)</title><rect x="815.1" y="293" width="1.2" height="15.0" fill="rgb(250,155,32)" rx="2" ry="2" />
<text  x="818.06" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="135.4" y="229" width="1.3" height="15.0" fill="rgb(252,114,25)" rx="2" ry="2" />
<text  x="138.40" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="342.3" y="149" width="1.3" height="15.0" fill="rgb(250,85,26)" rx="2" ry="2" />
<text  x="345.31" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="1123.5" y="405" width="3.8" height="15.0" fill="rgb(233,217,15)" rx="2" ry="2" />
<text  x="1126.54" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf88000020) (1 samples, 0.11%)</title><rect x="816.3" y="261" width="1.3" height="15.0" fill="rgb(205,99,22)" rx="2" ry="2" />
<text  x="819.31" y="271.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (10 samples, 1.06%)</title><rect x="1149.9" y="437" width="12.5" height="15.0" fill="rgb(236,108,3)" rx="2" ry="2" />
<text  x="1152.87" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (19 samples, 2.02%)</title><rect x="219.4" y="197" width="23.8" height="15.0" fill="rgb(251,195,12)" rx="2" ry="2" />
<text  x="222.42" y="207.5" >M..</text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.11%)</title><rect x="1128.6" y="437" width="1.2" height="15.0" fill="rgb(246,164,37)" rx="2" ry="2" />
<text  x="1131.55" y="447.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (43 samples, 4.57%)</title><rect x="1050.8" y="405" width="53.9" height="15.0" fill="rgb(244,72,32)" rx="2" ry="2" />
<text  x="1053.81" y="415.5" >std::..</text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.21%)</title><rect x="96.5" y="325" width="2.5" height="15.0" fill="rgb(229,143,38)" rx="2" ry="2" />
<text  x="99.52" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef208144a0) (1 samples, 0.11%)</title><rect x="102.8" y="341" width="1.2" height="15.0" fill="rgb(243,47,53)" rx="2" ry="2" />
<text  x="105.79" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c5608) (1 samples, 0.11%)</title><rect x="265.8" y="149" width="1.3" height="15.0" fill="rgb(205,183,18)" rx="2" ry="2" />
<text  x="268.81" y="159.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="1104.7" y="405" width="5.0" height="15.0" fill="rgb(229,2,4)" rx="2" ry="2" />
<text  x="1107.73" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (41 samples, 4.36%)</title><rect x="316.0" y="197" width="51.4" height="15.0" fill="rgb(219,101,0)" rx="2" ry="2" />
<text  x="318.97" y="207.5" >std::..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (9 samples, 0.96%)</title><rect x="643.3" y="485" width="11.2" height="15.0" fill="rgb(248,71,46)" rx="2" ry="2" />
<text  x="646.26" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (3 samples, 0.32%)</title><rect x="247.0" y="117" width="3.8" height="15.0" fill="rgb(244,104,3)" rx="2" ry="2" />
<text  x="250.00" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="243.2" y="149" width="1.3" height="15.0" fill="rgb(227,168,3)" rx="2" ry="2" />
<text  x="246.24" y="159.5" ></text>
</g>
<g >
<title>checked_request2size(sz=&lt;optimized (1 samples, 0.11%)</title><rect x="895.3" y="373" width="1.3" height="15.0" fill="rgb(211,174,16)" rx="2" ry="2" />
<text  x="898.31" y="383.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="845.2" y="437" width="1.2" height="15.0" fill="rgb(253,180,37)" rx="2" ry="2" />
<text  x="848.15" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (34 samples, 3.61%)</title><rect x="215.7" y="277" width="42.6" height="15.0" fill="rgb(213,196,45)" rx="2" ry="2" />
<text  x="218.65" y="287.5" >std:..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="107.8" y="341" width="1.3" height="15.0" fill="rgb(205,215,7)" rx="2" ry="2" />
<text  x="110.81" y="351.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060daf8, (3 samples, 0.32%)</title><rect x="28.8" y="421" width="3.8" height="15.0" fill="rgb(253,179,36)" rx="2" ry="2" />
<text  x="31.81" y="431.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd20 (1 samples, 0.11%)</title><rect x="1133.6" y="437" width="1.2" height="15.0" fill="rgb(249,148,8)" rx="2" ry="2" />
<text  x="1136.57" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="216.9" y="133" width="1.3" height="15.0" fill="rgb(231,139,19)" rx="2" ry="2" />
<text  x="219.91" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=549) (1 samples, 0.11%)</title><rect x="856.4" y="469" width="1.3" height="15.0" fill="rgb(219,20,41)" rx="2" ry="2" />
<text  x="859.44" y="479.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="857.7" y="421" width="1.2" height="15.0" fill="rgb(235,102,37)" rx="2" ry="2" />
<text  x="860.69" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (23 samples, 2.44%)</title><rect x="929.2" y="389" width="28.8" height="15.0" fill="rgb(254,21,3)" rx="2" ry="2" />
<text  x="932.17" y="399.5" >st..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (6 samples, 0.64%)</title><rect x="1154.9" y="389" width="7.5" height="15.0" fill="rgb(247,27,14)" rx="2" ry="2" />
<text  x="1157.89" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="210.6" y="149" width="2.5" height="15.0" fill="rgb(249,58,53)" rx="2" ry="2" />
<text  x="213.64" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="862.7" y="453" width="3.8" height="15.0" fill="rgb(216,225,52)" rx="2" ry="2" />
<text  x="865.71" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="1187.5" y="421" width="1.2" height="15.0" fill="rgb(251,33,38)" rx="2" ry="2" />
<text  x="1190.49" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="880.3" y="357" width="1.2" height="15.0" fill="rgb(206,27,47)" rx="2" ry="2" />
<text  x="883.27" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="835.1" y="261" width="1.3" height="15.0" fill="rgb(253,146,21)" rx="2" ry="2" />
<text  x="838.12" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (387 samples, 41.13%)</title><rect x="153.0" y="453" width="485.2" height="15.0" fill="rgb(210,19,31)" rx="2" ry="2" />
<text  x="155.95" y="463.5" >std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_..</text>
</g>
<g >
<title>std::__cxx11::to_string(__val=66) (1 samples, 0.11%)</title><rect x="858.9" y="469" width="1.3" height="15.0" fill="rgb(245,16,9)" rx="2" ry="2" />
<text  x="861.95" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.11%)</title><rect x="466.5" y="53" width="1.2" height="15.0" fill="rgb(220,133,34)" rx="2" ry="2" />
<text  x="469.45" y="63.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.11%)</title><rect x="326.0" y="53" width="1.3" height="15.0" fill="rgb(247,116,9)" rx="2" ry="2" />
<text  x="329.00" y="63.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="267.1" y="117" width="1.2" height="15.0" fill="rgb(245,68,51)" rx="2" ry="2" />
<text  x="270.07" y="127.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (10 samples, 1.06%)</title><rect x="866.5" y="453" width="12.5" height="15.0" fill="rgb(216,84,52)" rx="2" ry="2" />
<text  x="869.47" y="463.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (19 samples, 2.02%)</title><rect x="836.4" y="485" width="23.8" height="15.0" fill="rgb(213,29,15)" rx="2" ry="2" />
<text  x="839.38" y="495.5" >N..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="150.4" y="277" width="1.3" height="15.0" fill="rgb(235,97,33)" rx="2" ry="2" />
<text  x="153.45" y="287.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (5 samples, 0.53%)</title><rect x="830.1" y="357" width="6.3" height="15.0" fill="rgb(232,90,25)" rx="2" ry="2" />
<text  x="833.11" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1f18a400, (1 samples, 0.11%)</title><rect x="958.0" y="213" width="1.3" height="15.0" fill="rgb(237,35,5)" rx="2" ry="2" />
<text  x="961.01" y="223.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (6 samples, 0.64%)</title><rect x="551.7" y="181" width="7.5" height="15.0" fill="rgb(252,191,1)" rx="2" ry="2" />
<text  x="554.72" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateResult (8 samples, 0.85%)</title><rect x="999.4" y="501" width="10.0" height="15.0" fill="rgb(240,212,3)" rx="2" ry="2" />
<text  x="1002.39" y="511.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf80000020, (1 samples, 0.11%)</title><rect x="125.4" y="229" width="1.2" height="15.0" fill="rgb(221,171,19)" rx="2" ry="2" />
<text  x="128.37" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef0bb1c878) (1 samples, 0.11%)</title><rect x="277.1" y="149" width="1.3" height="15.0" fill="rgb(240,202,7)" rx="2" ry="2" />
<text  x="280.10" y="159.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.11%)</title><rect x="213.1" y="101" width="1.3" height="15.0" fill="rgb(252,206,28)" rx="2" ry="2" />
<text  x="216.15" y="111.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffd1852fe90) (8 samples, 0.85%)</title><rect x="699.7" y="485" width="10.0" height="15.0" fill="rgb(231,146,26)" rx="2" ry="2" />
<text  x="702.69" y="495.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (40 samples, 4.25%)</title><rect x="726.0" y="469" width="50.2" height="15.0" fill="rgb(231,47,30)" rx="2" ry="2" />
<text  x="729.03" y="479.5" >std::..</text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="821.3" y="277" width="1.3" height="15.0" fill="rgb(211,60,34)" rx="2" ry="2" />
<text  x="824.33" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ef1e321c00) (1 samples, 0.11%)</title><rect x="960.5" y="197" width="1.3" height="15.0" fill="rgb(247,20,52)" rx="2" ry="2" />
<text  x="963.52" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="109.1" y="341" width="1.2" height="15.0" fill="rgb(240,165,26)" rx="2" ry="2" />
<text  x="112.06" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef20a6d998, (1 samples, 0.11%)</title><rect x="820.1" y="293" width="1.2" height="15.0" fill="rgb(234,193,34)" rx="2" ry="2" />
<text  x="823.07" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0bb1c840) (1 samples, 0.11%)</title><rect x="550.5" y="133" width="1.2" height="15.0" fill="rgb(205,62,49)" rx="2" ry="2" />
<text  x="553.47" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.21%)</title><rect x="190.6" y="101" width="2.5" height="15.0" fill="rgb(215,99,12)" rx="2" ry="2" />
<text  x="193.57" y="111.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1142.3" y="421" width="1.3" height="15.0" fill="rgb(211,215,3)" rx="2" ry="2" />
<text  x="1145.35" y="431.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;PageId*, (1 samples, 0.11%)</title><rect x="891.6" y="421" width="1.2" height="15.0" fill="rgb(249,198,53)" rx="2" ry="2" />
<text  x="894.55" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (32 samples, 3.40%)</title><rect x="40.1" y="469" width="40.1" height="15.0" fill="rgb(217,17,28)" rx="2" ry="2" />
<text  x="43.10" y="479.5" >std..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.32%)</title><rect x="709.7" y="405" width="3.8" height="15.0" fill="rgb(229,211,15)" rx="2" ry="2" />
<text  x="712.72" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (27 samples, 2.87%)</title><rect x="586.8" y="197" width="33.9" height="15.0" fill="rgb(245,105,32)" rx="2" ry="2" />
<text  x="589.83" y="207.5" >st..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (2 samples, 0.21%)</title><rect x="213.1" y="261" width="2.6" height="15.0" fill="rgb(227,113,11)" rx="2" ry="2" />
<text  x="216.15" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (31 samples, 3.29%)</title><rect x="919.1" y="469" width="38.9" height="15.0" fill="rgb(239,26,36)" rx="2" ry="2" />
<text  x="922.14" y="479.5" >std..</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef085b17c0) (1 samples, 0.11%)</title><rect x="258.3" y="149" width="1.2" height="15.0" fill="rgb(212,3,48)" rx="2" ry="2" />
<text  x="261.29" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=&lt;optimized (1 samples, 0.11%)</title><rect x="134.1" y="325" width="1.3" height="15.0" fill="rgb(205,76,11)" rx="2" ry="2" />
<text  x="137.14" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.11%)</title><rect x="905.3" y="469" width="1.3" height="15.0" fill="rgb(233,203,32)" rx="2" ry="2" />
<text  x="908.35" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="84.0" y="501" width="1.2" height="15.0" fill="rgb(206,229,47)" rx="2" ry="2" />
<text  x="86.99" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="958.0" y="389" width="8.8" height="15.0" fill="rgb(244,211,26)" rx="2" ry="2" />
<text  x="961.01" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="218.2" y="149" width="1.2" height="15.0" fill="rgb(220,120,29)" rx="2" ry="2" />
<text  x="221.16" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="905.3" y="437" width="1.3" height="15.0" fill="rgb(215,187,46)" rx="2" ry="2" />
<text  x="908.35" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (2 samples, 0.21%)</title><rect x="643.3" y="421" width="2.5" height="15.0" fill="rgb(213,52,33)" rx="2" ry="2" />
<text  x="646.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.32%)</title><rect x="319.7" y="165" width="3.8" height="15.0" fill="rgb(251,66,8)" rx="2" ry="2" />
<text  x="322.73" y="175.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes (13 samples, 1.38%)</title><rect x="1173.7" y="533" width="16.3" height="15.0" fill="rgb(252,16,14)" rx="2" ry="2" />
<text  x="1176.70" y="543.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="193.1" y="149" width="1.2" height="15.0" fill="rgb(236,129,33)" rx="2" ry="2" />
<text  x="196.08" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.43%)</title><rect x="643.3" y="453" width="5.0" height="15.0" fill="rgb(223,155,28)" rx="2" ry="2" />
<text  x="646.26" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="866.5" y="357" width="1.2" height="15.0" fill="rgb(242,56,5)" rx="2" ry="2" />
<text  x="869.47" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1171.2" y="325" width="2.5" height="15.0" fill="rgb(232,175,4)" rx="2" ry="2" />
<text  x="1174.19" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (1 samples, 0.11%)</title><rect x="1169.9" y="421" width="1.3" height="15.0" fill="rgb(213,148,50)" rx="2" ry="2" />
<text  x="1172.94" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="637.0" y="165" width="1.2" height="15.0" fill="rgb(251,26,26)" rx="2" ry="2" />
<text  x="639.99" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.53%)</title><rect x="136.7" y="229" width="6.2" height="15.0" fill="rgb(230,205,3)" rx="2" ry="2" />
<text  x="139.65" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef0d9ae8c0, (1 samples, 0.11%)</title><rect x="654.5" y="213" width="1.3" height="15.0" fill="rgb(218,153,1)" rx="2" ry="2" />
<text  x="657.55" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf695df990, (1 samples, 0.11%)</title><rect x="777.4" y="197" width="1.3" height="15.0" fill="rgb(221,225,17)" rx="2" ry="2" />
<text  x="780.44" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.74%)</title><rect x="441.4" y="181" width="8.7" height="15.0" fill="rgb(235,144,12)" rx="2" ry="2" />
<text  x="444.37" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf78000020, (1 samples, 0.11%)</title><rect x="806.3" y="181" width="1.2" height="15.0" fill="rgb(247,157,54)" rx="2" ry="2" />
<text  x="809.28" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.32%)</title><rect x="89.0" y="469" width="3.8" height="15.0" fill="rgb(219,5,17)" rx="2" ry="2" />
<text  x="92.00" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (3 samples, 0.32%)</title><rect x="28.8" y="485" width="3.8" height="15.0" fill="rgb(232,65,46)" rx="2" ry="2" />
<text  x="31.81" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=536) (1 samples, 0.11%)</title><rect x="855.2" y="469" width="1.2" height="15.0" fill="rgb(220,149,11)" rx="2" ry="2" />
<text  x="858.19" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.43%)</title><rect x="253.3" y="165" width="5.0" height="15.0" fill="rgb(242,210,41)" rx="2" ry="2" />
<text  x="256.27" y="175.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="195.6" y="149" width="1.2" height="15.0" fill="rgb(241,210,31)" rx="2" ry="2" />
<text  x="198.59" y="159.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (23 samples, 2.44%)</title><rect x="742.3" y="405" width="28.9" height="15.0" fill="rgb(211,55,28)" rx="2" ry="2" />
<text  x="745.33" y="415.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="405" width="3.8" height="15.0" fill="rgb(221,58,27)" rx="2" ry="2" />
<text  x="1007.41" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (3 samples, 0.32%)</title><rect x="830.1" y="245" width="3.8" height="15.0" fill="rgb(228,125,52)" rx="2" ry="2" />
<text  x="833.11" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initPages (4 samples, 0.43%)</title><rect x="23.8" y="549" width="5.0" height="15.0" fill="rgb(230,66,49)" rx="2" ry="2" />
<text  x="26.79" y="559.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (3 samples, 0.32%)</title><rect x="28.8" y="389" width="3.8" height="15.0" fill="rgb(250,94,34)" rx="2" ry="2" />
<text  x="31.81" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (6 samples, 0.64%)</title><rect x="442.6" y="133" width="7.5" height="15.0" fill="rgb(244,96,25)" rx="2" ry="2" />
<text  x="445.62" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="270.8" y="117" width="1.3" height="15.0" fill="rgb(237,183,37)" rx="2" ry="2" />
<text  x="273.83" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="958.0" y="277" width="5.0" height="15.0" fill="rgb(221,47,30)" rx="2" ry="2" />
<text  x="961.01" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="1138.6" y="389" width="1.2" height="15.0" fill="rgb(225,36,14)" rx="2" ry="2" />
<text  x="1141.59" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="373" width="2.5" height="15.0" fill="rgb(250,56,41)" rx="2" ry="2" />
<text  x="919.63" y="383.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf80000020, (1 samples, 0.11%)</title><rect x="779.9" y="181" width="1.3" height="15.0" fill="rgb(229,91,23)" rx="2" ry="2" />
<text  x="782.95" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;,Network (2 samples, 0.21%)</title><rect x="150.4" y="421" width="2.6" height="15.0" fill="rgb(208,34,17)" rx="2" ry="2" />
<text  x="153.45" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1123.5" y="341" width="3.8" height="15.0" fill="rgb(245,90,16)" rx="2" ry="2" />
<text  x="1126.54" y="351.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="100.3" y="325" width="1.2" height="15.0" fill="rgb(211,166,44)" rx="2" ry="2" />
<text  x="103.29" y="335.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.11%)</title><rect x="132.9" y="261" width="1.2" height="15.0" fill="rgb(233,126,1)" rx="2" ry="2" />
<text  x="135.89" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (6 samples, 0.64%)</title><rect x="489.0" y="133" width="7.5" height="15.0" fill="rgb(211,134,21)" rx="2" ry="2" />
<text  x="492.02" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef207d29d8, (1 samples, 0.11%)</title><rect x="813.8" y="293" width="1.3" height="15.0" fill="rgb(240,69,43)" rx="2" ry="2" />
<text  x="816.80" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1137.3" y="421" width="1.3" height="15.0" fill="rgb(231,111,25)" rx="2" ry="2" />
<text  x="1140.33" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (48 samples, 5.10%)</title><rect x="92.8" y="437" width="60.2" height="15.0" fill="rgb(246,63,33)" rx="2" ry="2" />
<text  x="95.76" y="447.5" >std::_..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (1 samples, 0.11%)</title><rect x="880.3" y="309" width="1.2" height="15.0" fill="rgb(222,40,39)" rx="2" ry="2" />
<text  x="883.27" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.21%)</title><rect x="208.1" y="117" width="2.5" height="15.0" fill="rgb(231,211,34)" rx="2" ry="2" />
<text  x="211.13" y="127.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="818.8" y="245" width="1.3" height="15.0" fill="rgb(250,191,34)" rx="2" ry="2" />
<text  x="821.82" y="255.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.21%)</title><rect x="599.4" y="101" width="2.5" height="15.0" fill="rgb(206,89,51)" rx="2" ry="2" />
<text  x="602.37" y="111.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.11%)</title><rect x="173.0" y="181" width="1.3" height="15.0" fill="rgb(225,91,44)" rx="2" ry="2" />
<text  x="176.02" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.64%)</title><rect x="442.6" y="165" width="7.5" height="15.0" fill="rgb(243,16,16)" rx="2" ry="2" />
<text  x="445.62" y="175.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.11%)</title><rect x="896.6" y="485" width="1.2" height="15.0" fill="rgb(229,82,41)" rx="2" ry="2" />
<text  x="899.57" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf699e11d0, (1 samples, 0.11%)</title><rect x="779.9" y="197" width="1.3" height="15.0" fill="rgb(216,115,5)" rx="2" ry="2" />
<text  x="782.95" y="207.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (3 samples, 0.32%)</title><rect x="1018.2" y="389" width="3.8" height="15.0" fill="rgb(212,133,45)" rx="2" ry="2" />
<text  x="1021.20" y="399.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="857.7" y="437" width="1.2" height="15.0" fill="rgb(211,182,8)" rx="2" ry="2" />
<text  x="860.69" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1486) (1 samples, 0.11%)</title><rect x="843.9" y="469" width="1.3" height="15.0" fill="rgb(229,140,7)" rx="2" ry="2" />
<text  x="846.90" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (3 samples, 0.32%)</title><rect x="709.7" y="389" width="3.8" height="15.0" fill="rgb(212,1,8)" rx="2" ry="2" />
<text  x="712.72" y="399.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd40, (1 samples, 0.11%)</title><rect x="1133.6" y="453" width="1.2" height="15.0" fill="rgb(252,22,19)" rx="2" ry="2" />
<text  x="1136.57" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="858.9" y="453" width="1.3" height="15.0" fill="rgb(227,192,0)" rx="2" ry="2" />
<text  x="861.95" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (6 samples, 0.64%)</title><rect x="1027.0" y="469" width="7.5" height="15.0" fill="rgb(228,143,54)" rx="2" ry="2" />
<text  x="1029.98" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="149.2" y="325" width="1.2" height="15.0" fill="rgb(239,209,27)" rx="2" ry="2" />
<text  x="152.19" y="335.5" ></text>
</g>
<g >
<title>Network::~Network (10 samples, 1.06%)</title><rect x="1173.7" y="517" width="12.5" height="15.0" fill="rgb(248,187,30)" rx="2" ry="2" />
<text  x="1176.70" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="87.7" y="405" width="1.3" height="15.0" fill="rgb(217,158,12)" rx="2" ry="2" />
<text  x="90.75" y="415.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.11%)</title><rect x="23.8" y="533" width="1.2" height="15.0" fill="rgb(240,153,17)" rx="2" ry="2" />
<text  x="26.79" y="543.5" ></text>
</g>
<g >
<title>PageId::~PageId (27 samples, 2.87%)</title><rect x="776.2" y="277" width="33.8" height="15.0" fill="rgb(217,26,13)" rx="2" ry="2" />
<text  x="779.18" y="287.5" >Pa..</text>
</g>
<g >
<title>std::operator==&lt;char&gt; (5 samples, 0.53%)</title><rect x="136.7" y="261" width="6.2" height="15.0" fill="rgb(252,189,28)" rx="2" ry="2" />
<text  x="139.65" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf98000020) (1 samples, 0.11%)</title><rect x="822.6" y="261" width="1.2" height="15.0" fill="rgb(209,29,38)" rx="2" ry="2" />
<text  x="825.58" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (5 samples, 0.53%)</title><rect x="830.1" y="373" width="6.3" height="15.0" fill="rgb(207,29,5)" rx="2" ry="2" />
<text  x="833.11" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1134.8" y="453" width="1.3" height="15.0" fill="rgb(221,186,2)" rx="2" ry="2" />
<text  x="1137.82" y="463.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="877.8" y="389" width="1.2" height="15.0" fill="rgb(211,106,7)" rx="2" ry="2" />
<text  x="880.76" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1183.7" y="325" width="1.3" height="15.0" fill="rgb(205,14,6)" rx="2" ry="2" />
<text  x="1186.73" y="335.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (3 samples, 0.32%)</title><rect x="107.8" y="389" width="3.8" height="15.0" fill="rgb(231,167,37)" rx="2" ry="2" />
<text  x="110.81" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="193.1" y="325" width="20.0" height="15.0" fill="rgb(246,144,17)" rx="2" ry="2" />
<text  x="196.08" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="654.5" y="277" width="1.3" height="15.0" fill="rgb(220,199,13)" rx="2" ry="2" />
<text  x="657.55" y="287.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="638.2" y="437" width="1.3" height="15.0" fill="rgb(207,176,3)" rx="2" ry="2" />
<text  x="641.25" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="554.2" y="117" width="1.3" height="15.0" fill="rgb(253,1,7)" rx="2" ry="2" />
<text  x="557.23" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (41 samples, 4.36%)</title><rect x="776.2" y="421" width="51.4" height="15.0" fill="rgb(228,82,10)" rx="2" ry="2" />
<text  x="779.18" y="431.5" >std::..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="107.8" y="325" width="1.3" height="15.0" fill="rgb(248,155,50)" rx="2" ry="2" />
<text  x="110.81" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="1137.3" y="437" width="1.3" height="15.0" fill="rgb(206,226,16)" rx="2" ry="2" />
<text  x="1140.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (7 samples, 0.74%)</title><rect x="1176.2" y="405" width="8.8" height="15.0" fill="rgb(219,66,34)" rx="2" ry="2" />
<text  x="1179.21" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="111.6" y="245" width="3.7" height="15.0" fill="rgb(250,102,45)" rx="2" ry="2" />
<text  x="114.57" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="421" width="2.5" height="15.0" fill="rgb(225,177,7)" rx="2" ry="2" />
<text  x="919.63" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (1 samples, 0.11%)</title><rect x="861.5" y="325" width="1.2" height="15.0" fill="rgb(245,64,34)" rx="2" ry="2" />
<text  x="864.46" y="335.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="99.0" y="325" width="1.3" height="15.0" fill="rgb(231,61,23)" rx="2" ry="2" />
<text  x="102.03" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="109.1" y="325" width="1.2" height="15.0" fill="rgb(208,166,12)" rx="2" ry="2" />
<text  x="112.06" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="1137.3" y="405" width="1.3" height="15.0" fill="rgb(211,176,30)" rx="2" ry="2" />
<text  x="1140.33" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.11%)</title><rect x="1128.6" y="453" width="1.2" height="15.0" fill="rgb(211,46,34)" rx="2" ry="2" />
<text  x="1131.55" y="463.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="215.7" y="197" width="3.7" height="15.0" fill="rgb(236,43,53)" rx="2" ry="2" />
<text  x="218.65" y="207.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;PageIdAndRank*, (1 samples, 0.11%)</title><rect x="1008.2" y="405" width="1.2" height="15.0" fill="rgb(222,91,28)" rx="2" ry="2" />
<text  x="1011.17" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.21%)</title><rect x="168.0" y="181" width="2.5" height="15.0" fill="rgb(231,38,14)" rx="2" ry="2" />
<text  x="171.00" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffd1852fe90) (10 samples, 1.06%)</title><rect x="11.3" y="533" width="12.5" height="15.0" fill="rgb(231,32,16)" rx="2" ry="2" />
<text  x="14.25" y="543.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="856.4" y="437" width="1.3" height="15.0" fill="rgb(232,63,26)" rx="2" ry="2" />
<text  x="859.44" y="447.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef23c0f0c8, (57 samples, 6.06%)</title><rect x="549.2" y="357" width="71.5" height="15.0" fill="rgb(247,142,6)" rx="2" ry="2" />
<text  x="552.21" y="367.5" >__pthrea..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf8d2d12e0) (1 samples, 0.11%)</title><rect x="795.0" y="181" width="1.2" height="15.0" fill="rgb(229,47,54)" rx="2" ry="2" />
<text  x="797.99" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (6 samples, 0.64%)</title><rect x="442.6" y="117" width="7.5" height="15.0" fill="rgb(249,208,13)" rx="2" ry="2" />
<text  x="445.62" y="127.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="135.4" y="245" width="1.3" height="15.0" fill="rgb(213,87,45)" rx="2" ry="2" />
<text  x="138.40" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="437" width="1.2" height="15.0" fill="rgb(227,80,41)" rx="2" ry="2" />
<text  x="864.46" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initPages (20 samples, 2.13%)</title><rect x="1010.7" y="501" width="25.1" height="15.0" fill="rgb(211,122,4)" rx="2" ry="2" />
<text  x="1013.68" y="511.5" >M..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="727.3" y="437" width="5.0" height="15.0" fill="rgb(210,88,19)" rx="2" ry="2" />
<text  x="730.28" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ef10ef8170) (1 samples, 0.11%)</title><rect x="896.6" y="389" width="1.2" height="15.0" fill="rgb(250,32,39)" rx="2" ry="2" />
<text  x="899.57" y="399.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="855.2" y="405" width="1.2" height="15.0" fill="rgb(250,84,39)" rx="2" ry="2" />
<text  x="858.19" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (27 samples, 2.87%)</title><rect x="776.2" y="213" width="33.8" height="15.0" fill="rgb(215,69,4)" rx="2" ry="2" />
<text  x="779.18" y="223.5" >st..</text>
</g>
<g >
<title>std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="999.4" y="485" width="8.8" height="15.0" fill="rgb(247,177,32)" rx="2" ry="2" />
<text  x="1002.39" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf6cfee760, (1 samples, 0.11%)</title><rect x="781.2" y="197" width="1.3" height="15.0" fill="rgb(219,228,9)" rx="2" ry="2" />
<text  x="784.20" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="906.6" y="453" width="6.3" height="15.0" fill="rgb(213,39,33)" rx="2" ry="2" />
<text  x="909.60" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="891.6" y="437" width="1.2" height="15.0" fill="rgb(227,61,16)" rx="2" ry="2" />
<text  x="894.55" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x55ef0edf1f90, (1 samples, 0.11%)</title><rect x="1169.9" y="357" width="1.3" height="15.0" fill="rgb(246,177,19)" rx="2" ry="2" />
<text  x="1172.94" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1173.7" y="373" width="2.5" height="15.0" fill="rgb(241,164,19)" rx="2" ry="2" />
<text  x="1176.70" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="1122.3" y="405" width="1.2" height="15.0" fill="rgb(253,207,27)" rx="2" ry="2" />
<text  x="1125.28" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="843.9" y="453" width="1.3" height="15.0" fill="rgb(243,22,21)" rx="2" ry="2" />
<text  x="846.90" y="463.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1126.0" y="277" width="1.3" height="15.0" fill="rgb(235,41,4)" rx="2" ry="2" />
<text  x="1129.05" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="1142.3" y="389" width="1.3" height="15.0" fill="rgb(212,108,36)" rx="2" ry="2" />
<text  x="1145.35" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="856.4" y="453" width="1.3" height="15.0" fill="rgb(218,124,22)" rx="2" ry="2" />
<text  x="859.44" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="153.0" y="245" width="20.0" height="15.0" fill="rgb(235,66,33)" rx="2" ry="2" />
<text  x="155.95" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="1027.0" y="421" width="1.2" height="15.0" fill="rgb(213,4,35)" rx="2" ry="2" />
<text  x="1029.98" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="1177.5" y="277" width="5.0" height="15.0" fill="rgb(230,140,16)" rx="2" ry="2" />
<text  x="1180.46" y="287.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.11%)</title><rect x="1186.2" y="421" width="1.3" height="15.0" fill="rgb(235,132,9)" rx="2" ry="2" />
<text  x="1189.24" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (5 samples, 0.53%)</title><rect x="136.7" y="245" width="6.2" height="15.0" fill="rgb(250,191,23)" rx="2" ry="2" />
<text  x="139.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (39 samples, 4.14%)</title><rect x="496.5" y="165" width="49.0" height="15.0" fill="rgb(228,57,25)" rx="2" ry="2" />
<text  x="499.55" y="175.5" >std:..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef23c0f0d8, (4 samples, 0.43%)</title><rect x="771.2" y="373" width="5.0" height="15.0" fill="rgb(235,153,25)" rx="2" ry="2" />
<text  x="774.17" y="383.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="376.2" y="117" width="1.2" height="15.0" fill="rgb(245,43,31)" rx="2" ry="2" />
<text  x="379.16" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="455.2" y="133" width="1.2" height="15.0" fill="rgb(222,10,54)" rx="2" ry="2" />
<text  x="458.16" y="143.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="963.0" y="261" width="1.3" height="15.0" fill="rgb(252,183,2)" rx="2" ry="2" />
<text  x="966.03" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="816.3" y="277" width="1.3" height="15.0" fill="rgb(242,138,38)" rx="2" ry="2" />
<text  x="819.31" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (4 samples, 0.43%)</title><rect x="958.0" y="325" width="5.0" height="15.0" fill="rgb(210,179,20)" rx="2" ry="2" />
<text  x="961.01" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef208124f0) (1 samples, 0.11%)</title><rect x="101.5" y="341" width="1.3" height="15.0" fill="rgb(243,69,24)" rx="2" ry="2" />
<text  x="104.54" y="351.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=1000, (14 samples, 1.49%)</title><rect x="638.2" y="533" width="17.6" height="15.0" fill="rgb(211,15,15)" rx="2" ry="2" />
<text  x="641.25" y="543.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="131.6" y="261" width="1.3" height="15.0" fill="rgb(235,152,50)" rx="2" ry="2" />
<text  x="134.64" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf68000020, (1 samples, 0.11%)</title><rect x="1175.0" y="309" width="1.2" height="15.0" fill="rgb(209,98,3)" rx="2" ry="2" />
<text  x="1177.95" y="319.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef2215acc0) (1 samples, 0.11%)</title><rect x="105.3" y="357" width="1.3" height="15.0" fill="rgb(223,126,6)" rx="2" ry="2" />
<text  x="108.30" y="367.5" ></text>
</g>
<g >
<title>PageId::PageId (15 samples, 1.59%)</title><rect x="111.6" y="341" width="18.8" height="15.0" fill="rgb(228,213,54)" rx="2" ry="2" />
<text  x="114.57" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8be50e10, (1 samples, 0.11%)</title><rect x="792.5" y="197" width="1.2" height="15.0" fill="rgb(218,139,2)" rx="2" ry="2" />
<text  x="795.49" y="207.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef247c5ba8, (14 samples, 1.49%)</title><rect x="620.7" y="357" width="17.5" height="15.0" fill="rgb(205,205,15)" rx="2" ry="2" />
<text  x="623.69" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (10 samples, 1.06%)</title><rect x="1109.7" y="437" width="12.6" height="15.0" fill="rgb(215,163,37)" rx="2" ry="2" />
<text  x="1112.74" y="447.5" ></text>
</g>
<g >
<title>_itoa_word(value=14, (1 samples, 0.11%)</title><rect x="842.6" y="389" width="1.3" height="15.0" fill="rgb(248,134,18)" rx="2" ry="2" />
<text  x="845.65" y="399.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="1142.3" y="437" width="1.3" height="15.0" fill="rgb(239,70,18)" rx="2" ry="2" />
<text  x="1145.35" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=308354) (1 samples, 0.11%)</title><rect x="1132.3" y="485" width="1.3" height="15.0" fill="rgb(206,98,18)" rx="2" ry="2" />
<text  x="1135.32" y="495.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0b5c5b30) (2 samples, 0.21%)</title><rect x="259.5" y="149" width="2.6" height="15.0" fill="rgb(206,69,10)" rx="2" ry="2" />
<text  x="262.54" y="159.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="858.9" y="405" width="1.3" height="15.0" fill="rgb(221,189,28)" rx="2" ry="2" />
<text  x="861.95" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.32%)</title><rect x="89.0" y="453" width="3.8" height="15.0" fill="rgb(254,130,15)" rx="2" ry="2" />
<text  x="92.00" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="171.8" y="133" width="1.2" height="15.0" fill="rgb(243,20,50)" rx="2" ry="2" />
<text  x="174.76" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1328) (1 samples, 0.11%)</title><rect x="840.1" y="469" width="1.3" height="15.0" fill="rgb(234,131,17)" rx="2" ry="2" />
<text  x="843.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=313) (1 samples, 0.11%)</title><rect x="853.9" y="469" width="1.3" height="15.0" fill="rgb(219,203,49)" rx="2" ry="2" />
<text  x="856.93" y="479.5" ></text>
</g>
<g >
<title>Page::Page (5 samples, 0.53%)</title><rect x="830.1" y="437" width="6.3" height="15.0" fill="rgb(246,131,34)" rx="2" ry="2" />
<text  x="833.11" y="447.5" ></text>
</g>
<g >
<title>Page::getId (2 samples, 0.21%)</title><rect x="85.2" y="533" width="2.5" height="15.0" fill="rgb(206,174,17)" rx="2" ry="2" />
<text  x="88.24" y="543.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="642.0" y="437" width="1.3" height="15.0" fill="rgb(235,91,45)" rx="2" ry="2" />
<text  x="645.01" y="447.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="891.6" y="341" width="1.2" height="15.0" fill="rgb(211,89,28)" rx="2" ry="2" />
<text  x="894.55" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="151.7" y="325" width="1.3" height="15.0" fill="rgb(251,144,17)" rx="2" ry="2" />
<text  x="154.70" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="171.8" y="149" width="1.2" height="15.0" fill="rgb(251,210,0)" rx="2" ry="2" />
<text  x="174.76" y="159.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="85.2" y="405" width="1.3" height="15.0" fill="rgb(234,229,38)" rx="2" ry="2" />
<text  x="88.24" y="415.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (2 samples, 0.21%)</title><rect x="213.1" y="213" width="2.6" height="15.0" fill="rgb(219,29,8)" rx="2" ry="2" />
<text  x="216.15" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.11%)</title><rect x="10.0" y="421" width="1.3" height="15.0" fill="rgb(235,63,40)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (5 samples, 0.53%)</title><rect x="648.3" y="389" width="6.2" height="15.0" fill="rgb(209,93,20)" rx="2" ry="2" />
<text  x="651.28" y="399.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="195.6" y="117" width="1.2" height="15.0" fill="rgb(216,19,10)" rx="2" ry="2" />
<text  x="198.59" y="127.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;PageId*, (2 samples, 0.21%)</title><rect x="916.6" y="405" width="2.5" height="15.0" fill="rgb(207,157,19)" rx="2" ry="2" />
<text  x="919.63" y="415.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1178.7" y="229" width="1.3" height="15.0" fill="rgb(208,65,12)" rx="2" ry="2" />
<text  x="1181.71" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.21%)</title><rect x="894.1" y="421" width="2.5" height="15.0" fill="rgb(238,152,30)" rx="2" ry="2" />
<text  x="897.06" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.43%)</title><rect x="245.7" y="149" width="5.1" height="15.0" fill="rgb(251,90,15)" rx="2" ry="2" />
<text  x="248.75" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="193.1" y="213" width="20.0" height="15.0" fill="rgb(243,219,32)" rx="2" ry="2" />
<text  x="196.08" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (2 samples, 0.21%)</title><rect x="213.1" y="325" width="2.6" height="15.0" fill="rgb(251,208,48)" rx="2" ry="2" />
<text  x="216.15" y="335.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2 samples, 0.21%)</title><rect x="549.2" y="181" width="2.5" height="15.0" fill="rgb(211,81,22)" rx="2" ry="2" />
<text  x="552.21" y="191.5" ></text>
</g>
<g >
<title>__find_specmb(format=0x55ef06d7b006 (1 samples, 0.11%)</title><rect x="843.9" y="389" width="1.3" height="15.0" fill="rgb(242,17,21)" rx="2" ry="2" />
<text  x="846.90" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="642.0" y="405" width="1.3" height="15.0" fill="rgb(228,43,9)" rx="2" ry="2" />
<text  x="645.01" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="25.0" y="485" width="3.8" height="15.0" fill="rgb(228,110,4)" rx="2" ry="2" />
<text  x="28.05" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (9 samples, 0.96%)</title><rect x="1173.7" y="437" width="11.3" height="15.0" fill="rgb(236,164,41)" rx="2" ry="2" />
<text  x="1176.70" y="447.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.43%)</title><rect x="830.1" y="261" width="5.0" height="15.0" fill="rgb(238,13,1)" rx="2" ry="2" />
<text  x="833.11" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::push_back (35 samples, 3.72%)</title><rect x="92.8" y="405" width="43.9" height="15.0" fill="rgb(222,87,14)" rx="2" ry="2" />
<text  x="95.76" y="415.5" >Mult..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (2 samples, 0.21%)</title><rect x="111.6" y="213" width="2.5" height="15.0" fill="rgb(252,13,32)" rx="2" ry="2" />
<text  x="114.57" y="223.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="858.9" y="421" width="1.3" height="15.0" fill="rgb(252,114,42)" rx="2" ry="2" />
<text  x="861.95" y="431.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (39 samples, 4.14%)</title><rect x="496.5" y="149" width="49.0" height="15.0" fill="rgb(233,163,52)" rx="2" ry="2" />
<text  x="499.55" y="159.5" >Page..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1147.4" y="437" width="1.2" height="15.0" fill="rgb(221,23,9)" rx="2" ry="2" />
<text  x="1150.36" y="447.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (43 samples, 4.57%)</title><rect x="1050.8" y="341" width="53.9" height="15.0" fill="rgb(228,227,51)" rx="2" ry="2" />
<text  x="1053.81" y="351.5" >__pth..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="830.1" y="325" width="6.3" height="15.0" fill="rgb(217,39,41)" rx="2" ry="2" />
<text  x="833.11" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf81c5f5e0, (1 samples, 0.11%)</title><rect x="787.5" y="197" width="1.2" height="15.0" fill="rgb(217,130,0)" rx="2" ry="2" />
<text  x="790.47" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="193.1" y="309" width="20.0" height="15.0" fill="rgb(226,9,31)" rx="2" ry="2" />
<text  x="196.08" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.43%)</title><rect x="168.0" y="197" width="5.0" height="15.0" fill="rgb(205,59,44)" rx="2" ry="2" />
<text  x="171.00" y="207.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="727.3" y="405" width="5.0" height="15.0" fill="rgb(215,118,44)" rx="2" ry="2" />
<text  x="730.28" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="1122.3" y="437" width="5.0" height="15.0" fill="rgb(237,151,28)" rx="2" ry="2" />
<text  x="1125.28" y="447.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="1035.8" y="341" width="5.0" height="15.0" fill="rgb(216,12,54)" rx="2" ry="2" />
<text  x="1038.76" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (5 samples, 0.53%)</title><rect x="1028.2" y="421" width="6.3" height="15.0" fill="rgb(229,10,52)" rx="2" ry="2" />
<text  x="1031.24" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (34 samples, 3.61%)</title><rect x="215.7" y="341" width="42.6" height="15.0" fill="rgb(224,47,37)" rx="2" ry="2" />
<text  x="218.65" y="351.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1171.2" y="341" width="2.5" height="15.0" fill="rgb(241,222,53)" rx="2" ry="2" />
<text  x="1174.19" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (3 samples, 0.32%)</title><rect x="545.5" y="213" width="3.7" height="15.0" fill="rgb(216,51,42)" rx="2" ry="2" />
<text  x="548.45" y="223.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="855.2" y="437" width="1.2" height="15.0" fill="rgb(214,220,8)" rx="2" ry="2" />
<text  x="858.19" y="447.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="837.6" y="437" width="1.3" height="15.0" fill="rgb(233,200,54)" rx="2" ry="2" />
<text  x="840.63" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x7fcf883ca330, (1 samples, 0.11%)</title><rect x="823.8" y="245" width="1.3" height="15.0" fill="rgb(212,83,13)" rx="2" ry="2" />
<text  x="826.84" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="958.0" y="421" width="8.8" height="15.0" fill="rgb(248,150,13)" rx="2" ry="2" />
<text  x="961.01" y="431.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks(iteration=0, (1 samples, 0.11%)</title><rect x="1143.6" y="501" width="1.3" height="15.0" fill="rgb(206,153,47)" rx="2" ry="2" />
<text  x="1146.60" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.11%)</title><rect x="26.3" y="421" width="1.3" height="15.0" fill="rgb(231,126,8)" rx="2" ry="2" />
<text  x="29.30" y="431.5" ></text>
</g>
<g >
<title>std::thread::join()() (8 samples, 0.85%)</title><rect x="732.3" y="357" width="10.0" height="15.0" fill="rgb(229,197,41)" rx="2" ry="2" />
<text  x="735.30" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (14 samples, 1.49%)</title><rect x="810.0" y="309" width="17.6" height="15.0" fill="rgb(230,144,20)" rx="2" ry="2" />
<text  x="813.04" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.21%)</title><rect x="150.4" y="389" width="2.6" height="15.0" fill="rgb(209,222,30)" rx="2" ry="2" />
<text  x="153.45" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="803.8" y="181" width="1.2" height="15.0" fill="rgb(214,213,29)" rx="2" ry="2" />
<text  x="806.77" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=299) (1 samples, 0.11%)</title><rect x="851.4" y="469" width="1.3" height="15.0" fill="rgb(239,192,53)" rx="2" ry="2" />
<text  x="854.42" y="479.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="851.4" y="437" width="1.3" height="15.0" fill="rgb(219,145,46)" rx="2" ry="2" />
<text  x="854.42" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=2048) (1 samples, 0.11%)</title><rect x="132.9" y="293" width="1.2" height="15.0" fill="rgb(230,206,29)" rx="2" ry="2" />
<text  x="135.89" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.11%)</title><rect x="654.5" y="229" width="1.3" height="15.0" fill="rgb(229,142,2)" rx="2" ry="2" />
<text  x="657.55" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (57 samples, 6.06%)</title><rect x="549.2" y="229" width="71.5" height="15.0" fill="rgb(222,78,13)" rx="2" ry="2" />
<text  x="552.21" y="239.5" >std::__i..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="633.2" y="181" width="3.8" height="15.0" fill="rgb(219,132,27)" rx="2" ry="2" />
<text  x="636.23" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.11%)</title><rect x="86.5" y="421" width="1.2" height="15.0" fill="rgb(208,153,8)" rx="2" ry="2" />
<text  x="89.49" y="431.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="771.2" y="341" width="5.0" height="15.0" fill="rgb(231,149,50)" rx="2" ry="2" />
<text  x="774.17" y="351.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (1 samples, 0.11%)</title><rect x="1134.8" y="469" width="1.3" height="15.0" fill="rgb(248,86,15)" rx="2" ry="2" />
<text  x="1137.82" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (10 samples, 1.06%)</title><rect x="1149.9" y="453" width="12.5" height="15.0" fill="rgb(215,203,53)" rx="2" ry="2" />
<text  x="1152.87" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="174.3" y="117" width="1.2" height="15.0" fill="rgb(246,213,53)" rx="2" ry="2" />
<text  x="177.27" y="127.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="654.5" y="501" width="1.3" height="15.0" fill="rgb(227,190,36)" rx="2" ry="2" />
<text  x="657.55" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=80) (3 samples, 0.32%)</title><rect x="25.0" y="437" width="3.8" height="15.0" fill="rgb(249,102,38)" rx="2" ry="2" />
<text  x="28.05" y="447.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (43 samples, 4.57%)</title><rect x="1050.8" y="389" width="53.9" height="15.0" fill="rgb(218,114,1)" rx="2" ry="2" />
<text  x="1053.81" y="399.5" >__gth..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::deallocate(this=0x7ffd185301b0, (1 samples, 0.11%)</title><rect x="1185.0" y="437" width="1.2" height="15.0" fill="rgb(220,40,11)" rx="2" ry="2" />
<text  x="1187.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1027.0" y="405" width="1.2" height="15.0" fill="rgb(232,39,50)" rx="2" ry="2" />
<text  x="1029.98" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="852.7" y="453" width="1.2" height="15.0" fill="rgb(222,16,12)" rx="2" ry="2" />
<text  x="855.68" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (41 samples, 4.36%)</title><rect x="776.2" y="389" width="51.4" height="15.0" fill="rgb(237,104,2)" rx="2" ry="2" />
<text  x="779.18" y="399.5" >std::..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (10 samples, 1.06%)</title><rect x="620.7" y="197" width="12.5" height="15.0" fill="rgb(205,229,46)" rx="2" ry="2" />
<text  x="623.69" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="208.1" y="133" width="2.5" height="15.0" fill="rgb(240,99,2)" rx="2" ry="2" />
<text  x="211.13" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.59%)</title><rect x="111.6" y="293" width="18.8" height="15.0" fill="rgb(235,84,3)" rx="2" ry="2" />
<text  x="114.57" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.21%)</title><rect x="270.8" y="133" width="2.5" height="15.0" fill="rgb(251,149,37)" rx="2" ry="2" />
<text  x="273.83" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0bb1c8b0) (1 samples, 0.11%)</title><rect x="373.7" y="133" width="1.2" height="15.0" fill="rgb(217,196,47)" rx="2" ry="2" />
<text  x="376.66" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="341" width="2.5" height="15.0" fill="rgb(227,195,9)" rx="2" ry="2" />
<text  x="919.63" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (5 samples, 0.53%)</title><rect x="899.1" y="469" width="6.2" height="15.0" fill="rgb(218,139,13)" rx="2" ry="2" />
<text  x="902.08" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1779) (1 samples, 0.11%)</title><rect x="847.7" y="469" width="1.2" height="15.0" fill="rgb(224,112,10)" rx="2" ry="2" />
<text  x="850.66" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="654.5" y="245" width="1.3" height="15.0" fill="rgb(211,200,34)" rx="2" ry="2" />
<text  x="657.55" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.11%)</title><rect x="1008.2" y="437" width="1.2" height="15.0" fill="rgb(211,92,28)" rx="2" ry="2" />
<text  x="1011.17" y="447.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="1128.6" y="325" width="1.2" height="15.0" fill="rgb(237,12,47)" rx="2" ry="2" />
<text  x="1131.55" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds (2 samples, 0.21%)</title><rect x="996.9" y="501" width="2.5" height="15.0" fill="rgb(248,125,10)" rx="2" ry="2" />
<text  x="999.89" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="135.4" y="357" width="1.3" height="15.0" fill="rgb(215,91,44)" rx="2" ry="2" />
<text  x="138.40" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.11%)</title><rect x="833.9" y="245" width="1.2" height="15.0" fill="rgb(216,39,3)" rx="2" ry="2" />
<text  x="836.87" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef192b6d90, (1 samples, 0.11%)</title><rect x="901.6" y="325" width="1.2" height="15.0" fill="rgb(252,142,47)" rx="2" ry="2" />
<text  x="904.58" y="335.5" ></text>
</g>
<g >
<title>memcpy@plt() (1 samples, 0.11%)</title><rect x="150.4" y="245" width="1.3" height="15.0" fill="rgb(206,95,22)" rx="2" ry="2" />
<text  x="153.45" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.21%)</title><rect x="916.6" y="325" width="2.5" height="15.0" fill="rgb(211,199,54)" rx="2" ry="2" />
<text  x="919.63" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="1045.8" y="437" width="5.0" height="15.0" fill="rgb(246,121,39)" rx="2" ry="2" />
<text  x="1048.79" y="447.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef20a7d4e0) (1 samples, 0.11%)</title><rect x="104.0" y="357" width="1.3" height="15.0" fill="rgb(248,29,49)" rx="2" ry="2" />
<text  x="107.05" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf78000020, (1 samples, 0.11%)</title><rect x="131.6" y="277" width="1.3" height="15.0" fill="rgb(237,64,17)" rx="2" ry="2" />
<text  x="134.64" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.11%)</title><rect x="896.6" y="421" width="1.2" height="15.0" fill="rgb(227,91,26)" rx="2" ry="2" />
<text  x="899.57" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="173.0" y="229" width="20.1" height="15.0" fill="rgb(222,52,53)" rx="2" ry="2" />
<text  x="176.02" y="239.5" ></text>
</g>
<g >
<title>PageId::PageId (9 samples, 0.96%)</title><rect x="879.0" y="437" width="11.3" height="15.0" fill="rgb(249,131,52)" rx="2" ry="2" />
<text  x="882.01" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef2054fb58, (1 samples, 0.11%)</title><rect x="1126.0" y="293" width="1.3" height="15.0" fill="rgb(223,199,46)" rx="2" ry="2" />
<text  x="1129.05" y="303.5" ></text>
</g>
<g >
<title>std::thread::join()() (32 samples, 3.40%)</title><rect x="40.1" y="405" width="40.1" height="15.0" fill="rgb(231,107,9)" rx="2" ry="2" />
<text  x="43.10" y="415.5" >std..</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0bb1c878) (3 samples, 0.32%)</title><rect x="262.1" y="149" width="3.7" height="15.0" fill="rgb(229,227,36)" rx="2" ry="2" />
<text  x="265.05" y="159.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="858.9" y="437" width="1.3" height="15.0" fill="rgb(214,13,18)" rx="2" ry="2" />
<text  x="861.95" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="174.3" y="133" width="1.2" height="15.0" fill="rgb(250,173,5)" rx="2" ry="2" />
<text  x="177.27" y="143.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.11%)</title><rect x="249.5" y="85" width="1.3" height="15.0" fill="rgb(213,53,9)" rx="2" ry="2" />
<text  x="252.51" y="95.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (83 samples, 8.82%)</title><rect x="441.4" y="197" width="104.1" height="15.0" fill="rgb(217,34,9)" rx="2" ry="2" />
<text  x="444.37" y="207.5" >std::unorder..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (10 samples, 1.06%)</title><rect x="1109.7" y="405" width="12.6" height="15.0" fill="rgb(221,44,29)" rx="2" ry="2" />
<text  x="1112.74" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.43%)</title><rect x="1138.6" y="485" width="5.0" height="15.0" fill="rgb(234,174,47)" rx="2" ry="2" />
<text  x="1141.59" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="91.5" y="341" width="1.3" height="15.0" fill="rgb(207,204,14)" rx="2" ry="2" />
<text  x="94.51" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (5 samples, 0.53%)</title><rect x="830.1" y="277" width="6.3" height="15.0" fill="rgb(242,80,46)" rx="2" ry="2" />
<text  x="833.11" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf70b5e4d0) (1 samples, 0.11%)</title><rect x="777.4" y="181" width="1.3" height="15.0" fill="rgb(244,132,47)" rx="2" ry="2" />
<text  x="780.44" y="191.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.32%)</title><rect x="319.7" y="149" width="3.8" height="15.0" fill="rgb(246,217,9)" rx="2" ry="2" />
<text  x="322.73" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8c5960f0, (1 samples, 0.11%)</title><rect x="795.0" y="197" width="1.2" height="15.0" fill="rgb(246,188,15)" rx="2" ry="2" />
<text  x="797.99" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef20550c60) (1 samples, 0.11%)</title><rect x="107.8" y="357" width="1.3" height="15.0" fill="rgb(230,19,44)" rx="2" ry="2" />
<text  x="110.81" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (9 samples, 0.96%)</title><rect x="331.0" y="149" width="11.3" height="15.0" fill="rgb(251,34,25)" rx="2" ry="2" />
<text  x="334.02" y="159.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (48 samples, 5.10%)</title><rect x="92.8" y="501" width="60.2" height="15.0" fill="rgb(241,114,18)" rx="2" ry="2" />
<text  x="95.76" y="511.5" >std::t..</text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (14 samples, 1.49%)</title><rect x="810.0" y="341" width="17.6" height="15.0" fill="rgb(227,63,33)" rx="2" ry="2" />
<text  x="813.04" y="351.5" ></text>
</g>
<g >
<title>std::mutex::lock (4 samples, 0.43%)</title><rect x="153.0" y="165" width="5.0" height="15.0" fill="rgb(220,184,38)" rx="2" ry="2" />
<text  x="155.95" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ef19f41fe0) (1 samples, 0.11%)</title><rect x="959.3" y="197" width="1.2" height="15.0" fill="rgb(216,220,46)" rx="2" ry="2" />
<text  x="962.27" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd1852ffa0, (1 samples, 0.11%)</title><rect x="1134.8" y="389" width="1.3" height="15.0" fill="rgb(246,176,30)" rx="2" ry="2" />
<text  x="1137.82" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1142.3" y="453" width="1.3" height="15.0" fill="rgb(229,25,0)" rx="2" ry="2" />
<text  x="1145.35" y="463.5" ></text>
</g>
<g >
<title>PageId::operator== (3 samples, 0.32%)</title><rect x="1018.2" y="373" width="3.8" height="15.0" fill="rgb(207,226,11)" rx="2" ry="2" />
<text  x="1021.20" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.11%)</title><rect x="654.5" y="325" width="1.3" height="15.0" fill="rgb(216,66,49)" rx="2" ry="2" />
<text  x="657.55" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="85.2" y="501" width="2.5" height="15.0" fill="rgb(223,130,45)" rx="2" ry="2" />
<text  x="88.24" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.11%)</title><rect x="1134.8" y="373" width="1.3" height="15.0" fill="rgb(228,158,19)" rx="2" ry="2" />
<text  x="1137.82" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (5 samples, 0.53%)</title><rect x="830.1" y="453" width="6.3" height="15.0" fill="rgb(239,64,36)" rx="2" ry="2" />
<text  x="833.11" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (387 samples, 41.13%)</title><rect x="153.0" y="421" width="485.2" height="15.0" fill="rgb(223,150,52)" rx="2" ry="2" />
<text  x="155.95" y="431.5" >std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::t..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="915.4" y="389" width="1.2" height="15.0" fill="rgb(222,110,44)" rx="2" ry="2" />
<text  x="918.38" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="654.5" y="261" width="1.3" height="15.0" fill="rgb(249,10,36)" rx="2" ry="2" />
<text  x="657.55" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="10.0" y="517" width="1.3" height="15.0" fill="rgb(236,148,34)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="150.4" y="341" width="2.6" height="15.0" fill="rgb(240,19,23)" rx="2" ry="2" />
<text  x="153.45" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="915.4" y="405" width="1.2" height="15.0" fill="rgb(217,212,34)" rx="2" ry="2" />
<text  x="918.38" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.64%)</title><rect x="1010.7" y="421" width="7.5" height="15.0" fill="rgb(235,119,8)" rx="2" ry="2" />
<text  x="1013.68" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef207e3ce0) (1 samples, 0.11%)</title><rect x="100.3" y="357" width="1.2" height="15.0" fill="rgb(245,169,17)" rx="2" ry="2" />
<text  x="103.29" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="899.1" y="373" width="5.0" height="15.0" fill="rgb(212,202,36)" rx="2" ry="2" />
<text  x="902.08" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="1171.2" y="453" width="2.5" height="15.0" fill="rgb(242,121,19)" rx="2" ry="2" />
<text  x="1174.19" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.21%)</title><rect x="643.3" y="437" width="2.5" height="15.0" fill="rgb(221,20,31)" rx="2" ry="2" />
<text  x="646.26" y="447.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060d748, (16 samples, 1.70%)</title><rect x="153.0" y="357" width="20.0" height="15.0" fill="rgb(208,225,48)" rx="2" ry="2" />
<text  x="155.95" y="367.5" ></text>
</g>
<g >
<title>operatordelete(void*) (1 samples, 0.11%)</title><rect x="911.6" y="405" width="1.3" height="15.0" fill="rgb(212,94,44)" rx="2" ry="2" />
<text  x="914.62" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.21%)</title><rect x="213.1" y="181" width="2.6" height="15.0" fill="rgb(225,44,27)" rx="2" ry="2" />
<text  x="216.15" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.21%)</title><rect x="170.5" y="181" width="2.5" height="15.0" fill="rgb(205,166,26)" rx="2" ry="2" />
<text  x="173.51" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf74000020, (1 samples, 0.11%)</title><rect x="134.1" y="309" width="1.3" height="15.0" fill="rgb(253,152,17)" rx="2" ry="2" />
<text  x="137.14" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="896.6" y="469" width="1.2" height="15.0" fill="rgb(210,110,11)" rx="2" ry="2" />
<text  x="899.57" y="479.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef20457dd0) (2 samples, 0.21%)</title><rect x="94.0" y="357" width="2.5" height="15.0" fill="rgb(223,136,38)" rx="2" ry="2" />
<text  x="97.02" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf9a8e9800) (1 samples, 0.11%)</title><rect x="786.2" y="181" width="1.3" height="15.0" fill="rgb(233,147,3)" rx="2" ry="2" />
<text  x="789.22" y="191.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="638.2" y="405" width="1.3" height="15.0" fill="rgb(226,142,25)" rx="2" ry="2" />
<text  x="641.25" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (10 samples, 1.06%)</title><rect x="1149.9" y="405" width="12.5" height="15.0" fill="rgb(242,130,11)" rx="2" ry="2" />
<text  x="1152.87" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (143 samples, 15.20%)</title><rect x="369.9" y="325" width="179.3" height="15.0" fill="rgb(253,69,50)" rx="2" ry="2" />
<text  x="372.89" y="335.5" >std::function&lt;std::uniq..</text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="840.1" y="405" width="1.3" height="15.0" fill="rgb(209,185,25)" rx="2" ry="2" />
<text  x="843.14" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (89 samples, 9.46%)</title><rect x="258.3" y="245" width="111.6" height="15.0" fill="rgb(253,139,11)" rx="2" ry="2" />
<text  x="261.29" y="255.5" >std::__invoke..</text>
</g>
<g >
<title>operatornew(unsigned (11 samples, 1.17%)</title><rect x="116.6" y="261" width="13.8" height="15.0" fill="rgb(221,39,39)" rx="2" ry="2" />
<text  x="119.59" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.11%)</title><rect x="654.5" y="341" width="1.3" height="15.0" fill="rgb(206,186,29)" rx="2" ry="2" />
<text  x="657.55" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (57 samples, 6.06%)</title><rect x="549.2" y="213" width="71.5" height="15.0" fill="rgb(242,30,47)" rx="2" ry="2" />
<text  x="552.21" y="223.5" >MultiThr..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef15cddb48, (1 samples, 0.11%)</title><rect x="965.5" y="309" width="1.3" height="15.0" fill="rgb(209,111,41)" rx="2" ry="2" />
<text  x="968.54" y="319.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="851.4" y="405" width="1.3" height="15.0" fill="rgb(253,171,50)" rx="2" ry="2" />
<text  x="854.42" y="415.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;PageId*, (1 samples, 0.11%)</title><rect x="891.6" y="405" width="1.2" height="15.0" fill="rgb(248,60,16)" rx="2" ry="2" />
<text  x="894.55" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0bafab50) (1 samples, 0.11%)</title><rect x="92.8" y="357" width="1.2" height="15.0" fill="rgb(251,124,12)" rx="2" ry="2" />
<text  x="95.76" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="1171.2" y="437" width="2.5" height="15.0" fill="rgb(241,9,48)" rx="2" ry="2" />
<text  x="1174.19" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.11%)</title><rect x="882.8" y="341" width="1.2" height="15.0" fill="rgb(222,137,34)" rx="2" ry="2" />
<text  x="885.77" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (39 samples, 4.14%)</title><rect x="496.5" y="101" width="49.0" height="15.0" fill="rgb(235,160,53)" rx="2" ry="2" />
<text  x="499.55" y="111.5" >std:..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="882.8" y="325" width="1.2" height="15.0" fill="rgb(221,2,4)" rx="2" ry="2" />
<text  x="885.77" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1138.6" y="405" width="1.2" height="15.0" fill="rgb(247,220,43)" rx="2" ry="2" />
<text  x="1141.59" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.11%)</title><rect x="639.5" y="421" width="1.3" height="15.0" fill="rgb(246,151,30)" rx="2" ry="2" />
<text  x="642.50" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.21%)</title><rect x="599.4" y="53" width="2.5" height="15.0" fill="rgb(229,183,28)" rx="2" ry="2" />
<text  x="602.37" y="63.5" ></text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="1040.8" y="357" width="5.0" height="15.0" fill="rgb(209,18,46)" rx="2" ry="2" />
<text  x="1043.78" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (9 samples, 0.96%)</title><rect x="1173.7" y="485" width="11.3" height="15.0" fill="rgb(219,151,25)" rx="2" ry="2" />
<text  x="1176.70" y="495.5" ></text>
</g>
<g >
<title>std::thread::join()() (23 samples, 2.44%)</title><rect x="742.3" y="357" width="28.9" height="15.0" fill="rgb(217,38,4)" rx="2" ry="2" />
<text  x="745.33" y="367.5" >st..</text>
</g>
<g >
<title>SingleThreadedPageRankComputer::PageInfo::setCurrentRank(newRank=1.992777859733667e-06, (1 samples, 0.11%)</title><rect x="1146.1" y="485" width="1.3" height="15.0" fill="rgb(213,170,40)" rx="2" ry="2" />
<text  x="1149.11" y="495.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.32%)</title><rect x="273.3" y="117" width="3.8" height="15.0" fill="rgb(230,105,10)" rx="2" ry="2" />
<text  x="276.34" y="127.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf80000020, (1 samples, 0.11%)</title><rect x="815.1" y="277" width="1.2" height="15.0" fill="rgb(232,190,4)" rx="2" ry="2" />
<text  x="818.06" y="287.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef208a5138, (4 samples, 0.43%)</title><rect x="727.3" y="373" width="5.0" height="15.0" fill="rgb(212,225,22)" rx="2" ry="2" />
<text  x="730.28" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.85%)</title><rect x="880.3" y="405" width="10.0" height="15.0" fill="rgb(234,20,45)" rx="2" ry="2" />
<text  x="883.27" y="415.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.21%)</title><rect x="599.4" y="85" width="2.5" height="15.0" fill="rgb(207,79,51)" rx="2" ry="2" />
<text  x="602.37" y="95.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef2216b810) (1 samples, 0.11%)</title><rect x="110.3" y="357" width="1.3" height="15.0" fill="rgb(228,139,37)" rx="2" ry="2" />
<text  x="113.32" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="880.3" y="325" width="1.2" height="15.0" fill="rgb(244,147,30)" rx="2" ry="2" />
<text  x="883.27" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf98df4460, (1 samples, 0.11%)</title><rect x="805.0" y="197" width="1.3" height="15.0" fill="rgb(215,160,50)" rx="2" ry="2" />
<text  x="808.03" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (34 samples, 3.61%)</title><rect x="324.8" y="181" width="42.6" height="15.0" fill="rgb(253,80,23)" rx="2" ry="2" />
<text  x="327.75" y="191.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.21%)</title><rect x="210.6" y="181" width="2.5" height="15.0" fill="rgb(241,0,45)" rx="2" ry="2" />
<text  x="213.64" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="154.2" y="133" width="1.3" height="15.0" fill="rgb(242,75,2)" rx="2" ry="2" />
<text  x="157.21" y="143.5" ></text>
</g>
<g >
<title>main() (440 samples, 46.76%)</title><rect x="638.2" y="549" width="551.8" height="15.0" fill="rgb(240,69,11)" rx="2" ry="2" />
<text  x="641.25" y="559.5" >main()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="23.8" y="501" width="1.2" height="15.0" fill="rgb(241,120,40)" rx="2" ry="2" />
<text  x="26.79" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (387 samples, 41.13%)</title><rect x="153.0" y="437" width="485.2" height="15.0" fill="rgb(210,217,12)" rx="2" ry="2" />
<text  x="155.95" y="447.5" >std::__invoke_impl&lt;void,</text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (31 samples, 3.29%)</title><rect x="919.1" y="501" width="38.9" height="15.0" fill="rgb(238,148,21)" rx="2" ry="2" />
<text  x="922.14" y="511.5" >Sin..</text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x7fcf6c1e7480, (1 samples, 0.11%)</title><rect x="811.3" y="245" width="1.3" height="15.0" fill="rgb(248,132,26)" rx="2" ry="2" />
<text  x="814.30" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="215.7" y="133" width="1.2" height="15.0" fill="rgb(230,180,16)" rx="2" ry="2" />
<text  x="218.65" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef15cbeca8, (1 samples, 0.11%)</title><rect x="964.3" y="309" width="1.2" height="15.0" fill="rgb(243,129,27)" rx="2" ry="2" />
<text  x="967.28" y="319.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2222d598, (143 samples, 15.20%)</title><rect x="369.9" y="357" width="179.3" height="15.0" fill="rgb(234,88,14)" rx="2" ry="2" />
<text  x="372.89" y="367.5" >__pthread_once_slow(onc..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060d918, (16 samples, 1.70%)</title><rect x="173.0" y="357" width="20.1" height="15.0" fill="rgb(240,141,52)" rx="2" ry="2" />
<text  x="176.02" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=129) (1 samples, 0.11%)</title><rect x="877.8" y="373" width="1.2" height="15.0" fill="rgb(228,179,29)" rx="2" ry="2" />
<text  x="880.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="189.3" y="165" width="1.3" height="15.0" fill="rgb(216,211,7)" rx="2" ry="2" />
<text  x="192.32" y="175.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef23c0f0d8, (4 samples, 0.43%)</title><rect x="1104.7" y="373" width="5.0" height="15.0" fill="rgb(223,1,35)" rx="2" ry="2" />
<text  x="1107.73" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef20f36840, (1 samples, 0.11%)</title><rect x="960.5" y="213" width="1.3" height="15.0" fill="rgb(249,147,15)" rx="2" ry="2" />
<text  x="963.52" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="1171.2" y="421" width="2.5" height="15.0" fill="rgb(243,54,45)" rx="2" ry="2" />
<text  x="1174.19" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (4 samples, 0.43%)</title><rect x="958.0" y="341" width="5.0" height="15.0" fill="rgb(212,117,24)" rx="2" ry="2" />
<text  x="961.01" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="153.0" y="229" width="20.0" height="15.0" fill="rgb(232,70,27)" rx="2" ry="2" />
<text  x="155.95" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef2054fda8, (1 samples, 0.11%)</title><rect x="812.6" y="293" width="1.2" height="15.0" fill="rgb(206,49,4)" rx="2" ry="2" />
<text  x="815.55" y="303.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef20b3db28, (89 samples, 9.46%)</title><rect x="258.3" y="357" width="111.6" height="15.0" fill="rgb(212,124,13)" rx="2" ry="2" />
<text  x="261.29" y="367.5" >__pthread_onc..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="173.0" y="325" width="20.1" height="15.0" fill="rgb(207,67,6)" rx="2" ry="2" />
<text  x="176.02" y="335.5" ></text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.43%)</title><rect x="1035.8" y="357" width="5.0" height="15.0" fill="rgb(211,152,48)" rx="2" ry="2" />
<text  x="1038.76" y="367.5" ></text>
</g>
<g >
<title>Page::addLink (11 samples, 1.17%)</title><rect x="879.0" y="501" width="13.8" height="15.0" fill="rgb(243,70,54)" rx="2" ry="2" />
<text  x="882.01" y="511.5" ></text>
</g>
<g >
<title>std::mutex::lock (2 samples, 0.21%)</title><rect x="215.7" y="165" width="2.5" height="15.0" fill="rgb(238,141,45)" rx="2" ry="2" />
<text  x="218.65" y="175.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060daf8, (1 samples, 0.11%)</title><rect x="726.0" y="373" width="1.3" height="15.0" fill="rgb(236,218,47)" rx="2" ry="2" />
<text  x="729.03" y="383.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="901.6" y="309" width="1.2" height="15.0" fill="rgb(244,62,26)" rx="2" ry="2" />
<text  x="904.58" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (12 samples, 1.28%)</title><rect x="456.4" y="117" width="15.1" height="15.0" fill="rgb(229,68,18)" rx="2" ry="2" />
<text  x="459.42" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.74%)</title><rect x="958.0" y="469" width="8.8" height="15.0" fill="rgb(222,33,17)" rx="2" ry="2" />
<text  x="961.01" y="479.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="963.0" y="277" width="1.3" height="15.0" fill="rgb(250,91,15)" rx="2" ry="2" />
<text  x="966.03" y="287.5" ></text>
</g>
<g >
<title>memcpy@plt() (1 samples, 0.11%)</title><rect x="1006.9" y="325" width="1.3" height="15.0" fill="rgb(213,77,46)" rx="2" ry="2" />
<text  x="1009.92" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.53%)</title><rect x="324.8" y="149" width="6.2" height="15.0" fill="rgb(252,109,16)" rx="2" ry="2" />
<text  x="327.75" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="847.7" y="453" width="1.2" height="15.0" fill="rgb(235,41,32)" rx="2" ry="2" />
<text  x="850.66" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef23c0f0b0) (4 samples, 0.43%)</title><rect x="771.2" y="453" width="5.0" height="15.0" fill="rgb(222,60,54)" rx="2" ry="2" />
<text  x="774.17" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="1177.5" y="309" width="5.0" height="15.0" fill="rgb(220,27,21)" rx="2" ry="2" />
<text  x="1180.46" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="905.3" y="389" width="1.3" height="15.0" fill="rgb(217,70,45)" rx="2" ry="2" />
<text  x="908.35" y="399.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (14 samples, 1.49%)</title><rect x="620.7" y="245" width="17.5" height="15.0" fill="rgb(253,9,44)" rx="2" ry="2" />
<text  x="623.69" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf997586b0, (1 samples, 0.11%)</title><rect x="806.3" y="197" width="1.2" height="15.0" fill="rgb(238,215,30)" rx="2" ry="2" />
<text  x="809.28" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=291) (1 samples, 0.11%)</title><rect x="850.2" y="469" width="1.2" height="15.0" fill="rgb(241,162,48)" rx="2" ry="2" />
<text  x="853.17" y="479.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.11%)</title><rect x="134.1" y="293" width="1.3" height="15.0" fill="rgb(243,210,46)" rx="2" ry="2" />
<text  x="137.14" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (8 samples, 0.85%)</title><rect x="732.3" y="437" width="10.0" height="15.0" fill="rgb(248,207,31)" rx="2" ry="2" />
<text  x="735.30" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="866.5" y="421" width="6.2" height="15.0" fill="rgb(220,35,42)" rx="2" ry="2" />
<text  x="869.47" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef20b3db10) (6 samples, 0.64%)</title><rect x="32.6" y="501" width="7.5" height="15.0" fill="rgb(209,120,19)" rx="2" ry="2" />
<text  x="35.57" y="511.5" ></text>
</g>
<g >
<title>std::mutex::unlock (1 samples, 0.11%)</title><rect x="218.2" y="165" width="1.2" height="15.0" fill="rgb(214,119,1)" rx="2" ry="2" />
<text  x="221.16" y="175.5" ></text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.43%)</title><rect x="1177.5" y="325" width="5.0" height="15.0" fill="rgb(214,92,5)" rx="2" ry="2" />
<text  x="1180.46" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.21%)</title><rect x="210.6" y="165" width="2.5" height="15.0" fill="rgb(246,33,45)" rx="2" ry="2" />
<text  x="213.64" y="175.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (59 samples, 6.27%)</title><rect x="1035.8" y="469" width="73.9" height="15.0" fill="rgb(209,203,35)" rx="2" ry="2" />
<text  x="1038.76" y="479.5" >std::__b..</text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="808.8" y="181" width="1.2" height="15.0" fill="rgb(221,74,33)" rx="2" ry="2" />
<text  x="811.79" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (15 samples, 1.59%)</title><rect x="111.6" y="357" width="18.8" height="15.0" fill="rgb(211,126,28)" rx="2" ry="2" />
<text  x="114.57" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf70000020) (1 samples, 0.11%)</title><rect x="130.4" y="261" width="1.2" height="15.0" fill="rgb(239,42,34)" rx="2" ry="2" />
<text  x="133.38" y="271.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="154.2" y="149" width="1.3" height="15.0" fill="rgb(250,219,37)" rx="2" ry="2" />
<text  x="157.21" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef172d5b10, (1 samples, 0.11%)</title><rect x="1178.7" y="245" width="1.3" height="15.0" fill="rgb(213,207,1)" rx="2" ry="2" />
<text  x="1181.71" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="190.6" y="133" width="2.5" height="15.0" fill="rgb(249,134,42)" rx="2" ry="2" />
<text  x="193.57" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.32%)</title><rect x="25.0" y="453" width="3.8" height="15.0" fill="rgb(211,9,2)" rx="2" ry="2" />
<text  x="28.05" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (34 samples, 3.61%)</title><rect x="215.7" y="245" width="42.6" height="15.0" fill="rgb(239,79,17)" rx="2" ry="2" />
<text  x="218.65" y="255.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="389" width="1.2" height="15.0" fill="rgb(250,72,51)" rx="2" ry="2" />
<text  x="864.46" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.21%)</title><rect x="599.4" y="37" width="2.5" height="15.0" fill="rgb(229,156,32)" rx="2" ry="2" />
<text  x="602.37" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.11%)</title><rect x="1008.2" y="453" width="1.2" height="15.0" fill="rgb(216,146,26)" rx="2" ry="2" />
<text  x="1011.17" y="463.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.11%)</title><rect x="843.9" y="373" width="1.3" height="15.0" fill="rgb(239,172,14)" rx="2" ry="2" />
<text  x="846.90" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="595.6" y="133" width="1.3" height="15.0" fill="rgb(209,87,11)" rx="2" ry="2" />
<text  x="598.61" y="143.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="965.5" y="277" width="1.3" height="15.0" fill="rgb(211,157,26)" rx="2" ry="2" />
<text  x="968.54" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef2054d790) (2 samples, 0.21%)</title><rect x="96.5" y="341" width="2.5" height="15.0" fill="rgb(247,19,26)" rx="2" ry="2" />
<text  x="99.52" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (40 samples, 4.25%)</title><rect x="726.0" y="501" width="50.2" height="15.0" fill="rgb(223,19,3)" rx="2" ry="2" />
<text  x="729.03" y="511.5" >Multi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="639.5" y="469" width="1.3" height="15.0" fill="rgb(252,212,41)" rx="2" ry="2" />
<text  x="642.50" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (3 samples, 0.32%)</title><rect x="963.0" y="341" width="3.8" height="15.0" fill="rgb(248,146,37)" rx="2" ry="2" />
<text  x="966.03" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c5720) (2 samples, 0.21%)</title><rect x="268.3" y="133" width="2.5" height="15.0" fill="rgb(247,61,52)" rx="2" ry="2" />
<text  x="271.32" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="373" width="1.2" height="15.0" fill="rgb(222,47,38)" rx="2" ry="2" />
<text  x="864.46" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="84.0" y="469" width="1.2" height="15.0" fill="rgb(240,195,29)" rx="2" ry="2" />
<text  x="86.99" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="150.4" y="373" width="2.6" height="15.0" fill="rgb(247,57,40)" rx="2" ry="2" />
<text  x="153.45" y="383.5" ></text>
</g>
<g >
<title>PageId::~PageId (5 samples, 0.53%)</title><rect x="906.6" y="501" width="6.3" height="15.0" fill="rgb(238,160,6)" rx="2" ry="2" />
<text  x="909.60" y="511.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="850.2" y="421" width="1.2" height="15.0" fill="rgb(221,203,6)" rx="2" ry="2" />
<text  x="853.17" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.64%)</title><rect x="489.0" y="149" width="7.5" height="15.0" fill="rgb(236,71,7)" rx="2" ry="2" />
<text  x="492.02" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;Page*, (1 samples, 0.11%)</title><rect x="1128.6" y="421" width="1.2" height="15.0" fill="rgb(207,130,31)" rx="2" ry="2" />
<text  x="1131.55" y="431.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.11%)</title><rect x="173.0" y="165" width="1.3" height="15.0" fill="rgb(207,157,28)" rx="2" ry="2" />
<text  x="176.02" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.21%)</title><rect x="1171.2" y="309" width="2.5" height="15.0" fill="rgb(210,66,47)" rx="2" ry="2" />
<text  x="1174.19" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (43 samples, 4.57%)</title><rect x="1050.8" y="421" width="53.9" height="15.0" fill="rgb(238,15,10)" rx="2" ry="2" />
<text  x="1053.81" y="431.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="855.2" y="453" width="1.2" height="15.0" fill="rgb(221,50,33)" rx="2" ry="2" />
<text  x="858.19" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (41 samples, 4.36%)</title><rect x="776.2" y="405" width="51.4" height="15.0" fill="rgb(221,110,30)" rx="2" ry="2" />
<text  x="779.18" y="415.5" >__gnu..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (8 samples, 0.85%)</title><rect x="732.3" y="389" width="10.0" height="15.0" fill="rgb(211,215,40)" rx="2" ry="2" />
<text  x="735.30" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (27 samples, 2.87%)</title><rect x="776.2" y="229" width="33.8" height="15.0" fill="rgb(243,50,48)" rx="2" ry="2" />
<text  x="779.18" y="239.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="1148.6" y="453" width="1.3" height="15.0" fill="rgb(219,195,45)" rx="2" ry="2" />
<text  x="1151.62" y="463.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (3 samples, 0.32%)</title><rect x="80.2" y="437" width="3.8" height="15.0" fill="rgb(241,159,35)" rx="2" ry="2" />
<text  x="83.22" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page, (1 samples, 0.11%)</title><rect x="1185.0" y="485" width="1.2" height="15.0" fill="rgb(230,213,1)" rx="2" ry="2" />
<text  x="1187.98" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (9 samples, 0.96%)</title><rect x="709.7" y="453" width="11.3" height="15.0" fill="rgb(227,16,28)" rx="2" ry="2" />
<text  x="712.72" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.11%)</title><rect x="870.2" y="357" width="1.3" height="15.0" fill="rgb(211,29,2)" rx="2" ry="2" />
<text  x="873.23" y="367.5" ></text>
</g>
<g >
<title>operatornew(unsigned (5 samples, 0.53%)</title><rect x="882.8" y="357" width="6.2" height="15.0" fill="rgb(205,27,23)" rx="2" ry="2" />
<text  x="885.77" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (16 samples, 1.70%)</title><rect x="173.0" y="341" width="20.1" height="15.0" fill="rgb(229,155,0)" rx="2" ry="2" />
<text  x="176.02" y="351.5" ></text>
</g>
<g >
<title>Page::getId (2 samples, 0.21%)</title><rect x="150.4" y="405" width="2.6" height="15.0" fill="rgb(236,21,40)" rx="2" ry="2" />
<text  x="153.45" y="415.5" ></text>
</g>
<g >
<title>std::thread::join()() (10 samples, 1.06%)</title><rect x="11.3" y="517" width="12.5" height="15.0" fill="rgb(233,39,41)" rx="2" ry="2" />
<text  x="14.25" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (89 samples, 9.46%)</title><rect x="258.3" y="229" width="111.6" height="15.0" fill="rgb(228,18,44)" rx="2" ry="2" />
<text  x="261.29" y="239.5" >std::__invoke..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (143 samples, 15.20%)</title><rect x="369.9" y="261" width="179.3" height="15.0" fill="rgb(211,34,44)" rx="2" ry="2" />
<text  x="372.89" y="271.5" >std::thread::_Invoker&lt;s..</text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="853.9" y="437" width="1.3" height="15.0" fill="rgb(224,17,8)" rx="2" ry="2" />
<text  x="856.93" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (14 samples, 1.49%)</title><rect x="620.7" y="261" width="17.5" height="15.0" fill="rgb(215,181,15)" rx="2" ry="2" />
<text  x="623.69" y="271.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060dcb8, (2 samples, 0.21%)</title><rect x="213.1" y="357" width="2.6" height="15.0" fill="rgb(205,73,20)" rx="2" ry="2" />
<text  x="216.15" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (72 samples, 7.65%)</title><rect x="455.2" y="181" width="90.3" height="15.0" fill="rgb(239,226,2)" rx="2" ry="2" />
<text  x="458.16" y="191.5" >std::__det..</text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1173.7" y="309" width="1.3" height="15.0" fill="rgb(233,58,36)" rx="2" ry="2" />
<text  x="1176.70" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (5 samples, 0.53%)</title><rect x="830.1" y="341" width="6.3" height="15.0" fill="rgb(242,47,47)" rx="2" ry="2" />
<text  x="833.11" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (10 samples, 1.06%)</title><rect x="1173.7" y="501" width="12.5" height="15.0" fill="rgb(213,205,35)" rx="2" ry="2" />
<text  x="1176.70" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (27 samples, 2.87%)</title><rect x="776.2" y="309" width="33.8" height="15.0" fill="rgb(220,98,33)" rx="2" ry="2" />
<text  x="779.18" y="319.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef208d1278, (1 samples, 0.11%)</title><rect x="816.3" y="293" width="1.3" height="15.0" fill="rgb(226,154,15)" rx="2" ry="2" />
<text  x="819.31" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.43%)</title><rect x="919.1" y="437" width="5.1" height="15.0" fill="rgb(214,204,37)" rx="2" ry="2" />
<text  x="922.14" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.21%)</title><rect x="1019.5" y="341" width="2.5" height="15.0" fill="rgb(208,24,11)" rx="2" ry="2" />
<text  x="1022.46" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;PageId*, (1 samples, 0.11%)</title><rect x="135.4" y="309" width="1.3" height="15.0" fill="rgb(219,5,43)" rx="2" ry="2" />
<text  x="138.40" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8a3fa570, (1 samples, 0.11%)</title><rect x="790.0" y="197" width="1.2" height="15.0" fill="rgb(230,36,46)" rx="2" ry="2" />
<text  x="792.98" y="207.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (48 samples, 5.10%)</title><rect x="92.8" y="453" width="60.2" height="15.0" fill="rgb(226,191,15)" rx="2" ry="2" />
<text  x="95.76" y="463.5" >std::_..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2060dad0) (1 samples, 0.11%)</title><rect x="726.0" y="453" width="1.3" height="15.0" fill="rgb(217,65,27)" rx="2" ry="2" />
<text  x="729.03" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (3 samples, 0.32%)</title><rect x="25.0" y="469" width="3.8" height="15.0" fill="rgb(217,114,45)" rx="2" ry="2" />
<text  x="28.05" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=1024) (2 samples, 0.21%)</title><rect x="130.4" y="293" width="2.5" height="15.0" fill="rgb(210,228,17)" rx="2" ry="2" />
<text  x="133.38" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="193.1" y="293" width="20.0" height="15.0" fill="rgb(231,53,21)" rx="2" ry="2" />
<text  x="196.08" y="303.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="845.2" y="421" width="1.2" height="15.0" fill="rgb(220,42,1)" rx="2" ry="2" />
<text  x="848.15" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="639.5" y="437" width="1.3" height="15.0" fill="rgb(213,225,20)" rx="2" ry="2" />
<text  x="642.50" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2222d580) (23 samples, 2.44%)</title><rect x="742.3" y="453" width="28.9" height="15.0" fill="rgb(211,192,47)" rx="2" ry="2" />
<text  x="745.33" y="463.5" >st..</text>
</g>
<g >
<title>std::call_once&lt;void (1 samples, 0.11%)</title><rect x="726.0" y="405" width="1.3" height="15.0" fill="rgb(205,162,17)" rx="2" ry="2" />
<text  x="729.03" y="415.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="900.3" y="309" width="1.3" height="15.0" fill="rgb(246,118,31)" rx="2" ry="2" />
<text  x="903.33" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="812.6" y="245" width="1.2" height="15.0" fill="rgb(252,189,8)" rx="2" ry="2" />
<text  x="815.55" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="861.5" y="453" width="1.2" height="15.0" fill="rgb(245,185,15)" rx="2" ry="2" />
<text  x="864.46" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.43%)</title><rect x="919.1" y="405" width="5.1" height="15.0" fill="rgb(228,193,14)" rx="2" ry="2" />
<text  x="922.14" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef085b17c0) (1 samples, 0.11%)</title><rect x="258.3" y="133" width="1.2" height="15.0" fill="rgb(240,5,6)" rx="2" ry="2" />
<text  x="261.29" y="143.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (23 samples, 2.44%)</title><rect x="929.2" y="437" width="28.8" height="15.0" fill="rgb(253,214,9)" rx="2" ry="2" />
<text  x="932.17" y="447.5" >Pa..</text>
</g>
<g >
<title>all (941 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(208,137,45)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (14 samples, 1.49%)</title><rect x="810.0" y="325" width="17.6" height="15.0" fill="rgb(239,60,48)" rx="2" ry="2" />
<text  x="813.04" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="153.0" y="197" width="5.0" height="15.0" fill="rgb(239,170,32)" rx="2" ry="2" />
<text  x="155.95" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8b600360, (1 samples, 0.11%)</title><rect x="791.2" y="197" width="1.3" height="15.0" fill="rgb(229,96,23)" rx="2" ry="2" />
<text  x="794.23" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="899.1" y="389" width="6.2" height="15.0" fill="rgb(240,144,26)" rx="2" ry="2" />
<text  x="902.08" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="110.3" y="341" width="1.3" height="15.0" fill="rgb(216,127,8)" rx="2" ry="2" />
<text  x="113.32" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (2 samples, 0.21%)</title><rect x="213.1" y="197" width="2.6" height="15.0" fill="rgb(253,110,14)" rx="2" ry="2" />
<text  x="216.15" y="207.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="838.9" y="421" width="1.2" height="15.0" fill="rgb(247,128,48)" rx="2" ry="2" />
<text  x="841.88" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="173.0" y="261" width="20.1" height="15.0" fill="rgb(230,132,44)" rx="2" ry="2" />
<text  x="176.02" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (3 samples, 0.32%)</title><rect x="1186.2" y="517" width="3.8" height="15.0" fill="rgb(209,45,43)" rx="2" ry="2" />
<text  x="1189.24" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.11%)</title><rect x="1008.2" y="421" width="1.2" height="15.0" fill="rgb(254,120,17)" rx="2" ry="2" />
<text  x="1011.17" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (48 samples, 5.10%)</title><rect x="92.8" y="469" width="60.2" height="15.0" fill="rgb(221,64,2)" rx="2" ry="2" />
<text  x="95.76" y="479.5" >std::t..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="213.1" y="149" width="1.3" height="15.0" fill="rgb(237,205,46)" rx="2" ry="2" />
<text  x="216.15" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="892.8" y="405" width="1.3" height="15.0" fill="rgb(253,87,7)" rx="2" ry="2" />
<text  x="895.81" y="415.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;PageId*, (2 samples, 0.21%)</title><rect x="916.6" y="389" width="2.5" height="15.0" fill="rgb(208,194,7)" rx="2" ry="2" />
<text  x="919.63" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf901ab7d0, (1 samples, 0.11%)</title><rect x="797.5" y="197" width="1.3" height="15.0" fill="rgb(219,31,44)" rx="2" ry="2" />
<text  x="800.50" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (5 samples, 0.53%)</title><rect x="1176.2" y="373" width="6.3" height="15.0" fill="rgb(214,39,42)" rx="2" ry="2" />
<text  x="1179.21" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (33 samples, 3.51%)</title><rect x="455.2" y="165" width="41.3" height="15.0" fill="rgb(228,215,16)" rx="2" ry="2" />
<text  x="458.16" y="175.5" >std..</text>
</g>
<g >
<title>__GI___libc_malloc(bytes=&lt;optimized (1 samples, 0.11%)</title><rect x="887.8" y="341" width="1.2" height="15.0" fill="rgb(225,29,1)" rx="2" ry="2" />
<text  x="890.79" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="866.5" y="373" width="1.2" height="15.0" fill="rgb(247,225,12)" rx="2" ry="2" />
<text  x="869.47" y="383.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.21%)</title><rect x="208.1" y="149" width="2.5" height="15.0" fill="rgb(223,158,14)" rx="2" ry="2" />
<text  x="211.13" y="159.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (9 samples, 0.96%)</title><rect x="609.4" y="133" width="11.3" height="15.0" fill="rgb(234,152,27)" rx="2" ry="2" />
<text  x="612.40" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="826.3" y="277" width="1.3" height="15.0" fill="rgb(244,48,39)" rx="2" ry="2" />
<text  x="829.34" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (4 samples, 0.43%)</title><rect x="958.0" y="309" width="5.0" height="15.0" fill="rgb(252,117,18)" rx="2" ry="2" />
<text  x="961.01" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (4 samples, 0.43%)</title><rect x="466.5" y="69" width="5.0" height="15.0" fill="rgb(233,80,41)" rx="2" ry="2" />
<text  x="469.45" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (3 samples, 0.32%)</title><rect x="605.6" y="133" width="3.8" height="15.0" fill="rgb(206,189,7)" rx="2" ry="2" />
<text  x="608.64" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf7c0a4af0, (1 samples, 0.11%)</title><rect x="785.0" y="197" width="1.2" height="15.0" fill="rgb(232,195,42)" rx="2" ry="2" />
<text  x="787.96" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=&lt;optimized (1 samples, 0.11%)</title><rect x="105.3" y="341" width="1.3" height="15.0" fill="rgb(215,42,53)" rx="2" ry="2" />
<text  x="108.30" y="351.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="850.2" y="405" width="1.2" height="15.0" fill="rgb(217,196,15)" rx="2" ry="2" />
<text  x="853.17" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="871.5" y="357" width="1.2" height="15.0" fill="rgb(234,171,45)" rx="2" ry="2" />
<text  x="874.49" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="173.0" y="213" width="20.1" height="15.0" fill="rgb(209,5,4)" rx="2" ry="2" />
<text  x="176.02" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1182.5" y="325" width="1.2" height="15.0" fill="rgb(232,7,6)" rx="2" ry="2" />
<text  x="1185.48" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="840.1" y="453" width="1.3" height="15.0" fill="rgb(214,155,41)" rx="2" ry="2" />
<text  x="843.14" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="897.8" y="469" width="1.3" height="15.0" fill="rgb(239,81,35)" rx="2" ry="2" />
<text  x="900.82" y="479.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef20abd8b0) (1 samples, 0.11%)</title><rect x="109.1" y="357" width="1.2" height="15.0" fill="rgb(210,142,1)" rx="2" ry="2" />
<text  x="112.06" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1b9f5650, (1 samples, 0.11%)</title><rect x="902.8" y="325" width="1.3" height="15.0" fill="rgb(250,191,25)" rx="2" ry="2" />
<text  x="905.84" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.32%)</title><rect x="1023.2" y="437" width="3.8" height="15.0" fill="rgb(247,78,5)" rx="2" ry="2" />
<text  x="1026.22" y="447.5" ></text>
</g>
<g >
<title>std::mutex::lock (12 samples, 1.28%)</title><rect x="92.8" y="373" width="15.0" height="15.0" fill="rgb(219,186,37)" rx="2" ry="2" />
<text  x="95.76" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (5 samples, 0.53%)</title><rect x="1176.2" y="357" width="6.3" height="15.0" fill="rgb(246,165,41)" rx="2" ry="2" />
<text  x="1179.21" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (5 samples, 0.53%)</title><rect x="899.1" y="437" width="6.2" height="15.0" fill="rgb(208,100,39)" rx="2" ry="2" />
<text  x="902.08" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="821.3" y="261" width="1.3" height="15.0" fill="rgb(238,64,54)" rx="2" ry="2" />
<text  x="824.33" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="10.0" y="501" width="1.3" height="15.0" fill="rgb(210,46,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (34 samples, 3.61%)</title><rect x="836.4" y="501" width="42.6" height="15.0" fill="rgb(247,87,29)" rx="2" ry="2" />
<text  x="839.38" y="511.5" >Netw..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.21%)</title><rect x="921.6" y="325" width="2.6" height="15.0" fill="rgb(217,134,11)" rx="2" ry="2" />
<text  x="924.65" y="335.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (30 samples, 3.19%)</title><rect x="1136.1" y="517" width="37.6" height="15.0" fill="rgb(219,81,41)" rx="2" ry="2" />
<text  x="1139.08" y="527.5" >Sin..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.64%)</title><rect x="1027.0" y="437" width="7.5" height="15.0" fill="rgb(237,122,53)" rx="2" ry="2" />
<text  x="1029.98" y="447.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="838.9" y="405" width="1.2" height="15.0" fill="rgb(209,50,46)" rx="2" ry="2" />
<text  x="841.88" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.64%)</title><rect x="1162.4" y="469" width="7.5" height="15.0" fill="rgb(253,140,47)" rx="2" ry="2" />
<text  x="1165.41" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ef09722ee0) (1 samples, 0.11%)</title><rect x="1124.8" y="277" width="1.2" height="15.0" fill="rgb(218,89,52)" rx="2" ry="2" />
<text  x="1127.79" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="721.0" y="421" width="5.0" height="15.0" fill="rgb(210,124,45)" rx="2" ry="2" />
<text  x="724.01" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.21%)</title><rect x="1019.5" y="357" width="2.5" height="15.0" fill="rgb(252,128,38)" rx="2" ry="2" />
<text  x="1022.46" y="367.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (12 samples, 1.28%)</title><rect x="92.8" y="389" width="15.0" height="15.0" fill="rgb(209,206,40)" rx="2" ry="2" />
<text  x="95.76" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (4 samples, 0.43%)</title><rect x="1177.5" y="341" width="5.0" height="15.0" fill="rgb(240,56,17)" rx="2" ry="2" />
<text  x="1180.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="87.7" y="501" width="1.3" height="15.0" fill="rgb(219,50,44)" rx="2" ry="2" />
<text  x="90.75" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (14 samples, 1.49%)</title><rect x="471.5" y="149" width="17.5" height="15.0" fill="rgb(238,225,35)" rx="2" ry="2" />
<text  x="474.47" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (143 samples, 15.20%)</title><rect x="369.9" y="293" width="179.3" height="15.0" fill="rgb(231,212,53)" rx="2" ry="2" />
<text  x="372.89" y="303.5" >std::__future_base::_Ta..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf8a62a610) (1 samples, 0.11%)</title><rect x="805.0" y="181" width="1.3" height="15.0" fill="rgb(245,157,0)" rx="2" ry="2" />
<text  x="808.03" y="191.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef20b3db38, (8 samples, 0.85%)</title><rect x="732.3" y="373" width="10.0" height="15.0" fill="rgb(253,199,50)" rx="2" ry="2" />
<text  x="735.30" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="91.5" y="357" width="1.3" height="15.0" fill="rgb(221,42,40)" rx="2" ry="2" />
<text  x="94.51" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="453" width="2.5" height="15.0" fill="rgb(231,124,6)" rx="2" ry="2" />
<text  x="919.63" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="588.1" y="133" width="2.5" height="15.0" fill="rgb(252,90,1)" rx="2" ry="2" />
<text  x="591.09" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef09722f38, (1 samples, 0.11%)</title><rect x="1124.8" y="293" width="1.2" height="15.0" fill="rgb(245,79,46)" rx="2" ry="2" />
<text  x="1127.79" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=&lt;optimized (1 samples, 0.11%)</title><rect x="114.1" y="213" width="1.2" height="15.0" fill="rgb(229,39,25)" rx="2" ry="2" />
<text  x="117.08" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (7 samples, 0.74%)</title><rect x="958.0" y="373" width="8.8" height="15.0" fill="rgb(241,96,40)" rx="2" ry="2" />
<text  x="961.01" y="383.5" ></text>
</g>
<g >
<title>Page::generateId (14 samples, 1.49%)</title><rect x="861.5" y="485" width="17.5" height="15.0" fill="rgb(246,166,52)" rx="2" ry="2" />
<text  x="864.46" y="495.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (387 samples, 41.13%)</title><rect x="153.0" y="501" width="485.2" height="15.0" fill="rgb(241,81,39)" rx="2" ry="2" />
<text  x="155.95" y="511.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__f..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="892.8" y="437" width="3.8" height="15.0" fill="rgb(223,8,9)" rx="2" ry="2" />
<text  x="895.81" y="447.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (6 samples, 0.64%)</title><rect x="32.6" y="453" width="7.5" height="15.0" fill="rgb(205,199,35)" rx="2" ry="2" />
<text  x="35.57" y="463.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="174.3" y="149" width="1.2" height="15.0" fill="rgb(206,1,33)" rx="2" ry="2" />
<text  x="177.27" y="159.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (40 samples, 4.25%)</title><rect x="726.0" y="485" width="50.2" height="15.0" fill="rgb(229,122,53)" rx="2" ry="2" />
<text  x="729.03" y="495.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="896.6" y="437" width="1.2" height="15.0" fill="rgb(215,94,43)" rx="2" ry="2" />
<text  x="899.57" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (34 samples, 3.61%)</title><rect x="215.7" y="325" width="42.6" height="15.0" fill="rgb(205,112,0)" rx="2" ry="2" />
<text  x="218.65" y="335.5" >std:..</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (4 samples, 0.43%)</title><rect x="326.0" y="101" width="5.0" height="15.0" fill="rgb(249,164,21)" rx="2" ry="2" />
<text  x="329.00" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.11%)</title><rect x="1122.3" y="389" width="1.2" height="15.0" fill="rgb(209,158,37)" rx="2" ry="2" />
<text  x="1125.28" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf80000020, (1 samples, 0.11%)</title><rect x="813.8" y="277" width="1.3" height="15.0" fill="rgb(238,48,21)" rx="2" ry="2" />
<text  x="816.80" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.21%)</title><rect x="213.1" y="165" width="2.6" height="15.0" fill="rgb(244,65,18)" rx="2" ry="2" />
<text  x="216.15" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="638.2" y="453" width="1.3" height="15.0" fill="rgb(253,141,38)" rx="2" ry="2" />
<text  x="641.25" y="463.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (1 samples, 0.11%)</title><rect x="726.0" y="389" width="1.3" height="15.0" fill="rgb(231,120,0)" rx="2" ry="2" />
<text  x="729.03" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="601.9" y="149" width="3.7" height="15.0" fill="rgb(209,52,41)" rx="2" ry="2" />
<text  x="604.88" y="159.5" ></text>
</g>
<g >
<title>std::mutex::unlock (3 samples, 0.32%)</title><rect x="107.8" y="373" width="3.8" height="15.0" fill="rgb(213,35,27)" rx="2" ry="2" />
<text  x="110.81" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.43%)</title><rect x="1177.5" y="261" width="5.0" height="15.0" fill="rgb(254,71,13)" rx="2" ry="2" />
<text  x="1180.46" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;PageIdconst, (1 samples, 0.11%)</title><rect x="369.9" y="165" width="1.2" height="15.0" fill="rgb(252,110,26)" rx="2" ry="2" />
<text  x="372.89" y="175.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (8 samples, 0.85%)</title><rect x="732.3" y="341" width="10.0" height="15.0" fill="rgb(238,83,45)" rx="2" ry="2" />
<text  x="735.30" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef208124f0) (1 samples, 0.11%)</title><rect x="101.5" y="357" width="1.3" height="15.0" fill="rgb(233,125,48)" rx="2" ry="2" />
<text  x="104.54" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (6 samples, 0.64%)</title><rect x="442.6" y="101" width="7.5" height="15.0" fill="rgb(223,17,30)" rx="2" ry="2" />
<text  x="445.62" y="111.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c5608) (1 samples, 0.11%)</title><rect x="265.8" y="133" width="1.3" height="15.0" fill="rgb(251,3,17)" rx="2" ry="2" />
<text  x="268.81" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef21409068, (1 samples, 0.11%)</title><rect x="1183.7" y="341" width="1.3" height="15.0" fill="rgb(219,76,7)" rx="2" ry="2" />
<text  x="1186.73" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="654.5" y="197" width="1.3" height="15.0" fill="rgb(228,212,36)" rx="2" ry="2" />
<text  x="657.55" y="207.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd20 (1 samples, 0.11%)</title><rect x="1132.3" y="437" width="1.3" height="15.0" fill="rgb(225,132,43)" rx="2" ry="2" />
<text  x="1135.32" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="891.6" y="309" width="1.2" height="15.0" fill="rgb(239,48,37)" rx="2" ry="2" />
<text  x="894.55" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.32%)</title><rect x="605.6" y="149" width="3.8" height="15.0" fill="rgb(209,219,1)" rx="2" ry="2" />
<text  x="608.64" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (41 samples, 4.36%)</title><rect x="776.2" y="501" width="51.4" height="15.0" fill="rgb(224,71,47)" rx="2" ry="2" />
<text  x="779.18" y="511.5" >std::..</text>
</g>
<g >
<title>get_max_fast() (1 samples, 0.11%)</title><rect x="23.8" y="389" width="1.2" height="15.0" fill="rgb(249,42,36)" rx="2" ry="2" />
<text  x="26.79" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="654.5" y="405" width="1.3" height="15.0" fill="rgb(239,198,35)" rx="2" ry="2" />
<text  x="657.55" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="267.1" y="133" width="1.2" height="15.0" fill="rgb(232,75,42)" rx="2" ry="2" />
<text  x="270.07" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.85%)</title><rect x="880.3" y="389" width="10.0" height="15.0" fill="rgb(216,107,7)" rx="2" ry="2" />
<text  x="883.27" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (6 samples, 0.64%)</title><rect x="899.1" y="485" width="7.5" height="15.0" fill="rgb(223,36,14)" rx="2" ry="2" />
<text  x="902.08" y="495.5" ></text>
</g>
<g >
<title>Page::generateId (1 samples, 0.11%)</title><rect x="1134.8" y="485" width="1.3" height="15.0" fill="rgb(250,52,27)" rx="2" ry="2" />
<text  x="1137.82" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="1040.8" y="421" width="5.0" height="15.0" fill="rgb(237,76,31)" rx="2" ry="2" />
<text  x="1043.78" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (5 samples, 0.53%)</title><rect x="830.1" y="405" width="6.3" height="15.0" fill="rgb(247,67,1)" rx="2" ry="2" />
<text  x="833.11" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (11 samples, 1.17%)</title><rect x="116.6" y="277" width="13.8" height="15.0" fill="rgb(242,131,20)" rx="2" ry="2" />
<text  x="119.59" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="389" width="3.8" height="15.0" fill="rgb(240,155,50)" rx="2" ry="2" />
<text  x="1007.41" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="890.3" y="437" width="1.3" height="15.0" fill="rgb(216,105,14)" rx="2" ry="2" />
<text  x="893.30" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725597&quot;, (1 samples, 0.11%)</title><rect x="465.2" y="69" width="1.3" height="15.0" fill="rgb(221,195,15)" rx="2" ry="2" />
<text  x="468.20" y="79.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::PageInfo::getLinkValue(iteration=&lt;optimized (1 samples, 0.11%)</title><rect x="440.1" y="197" width="1.3" height="15.0" fill="rgb(227,124,30)" rx="2" ry="2" />
<text  x="443.12" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.85%)</title><rect x="919.1" y="453" width="10.1" height="15.0" fill="rgb(226,53,33)" rx="2" ry="2" />
<text  x="922.14" y="463.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.32%)</title><rect x="1169.9" y="501" width="3.8" height="15.0" fill="rgb(209,174,21)" rx="2" ry="2" />
<text  x="1172.94" y="511.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="961.8" y="197" width="1.2" height="15.0" fill="rgb(229,185,33)" rx="2" ry="2" />
<text  x="964.77" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (18 samples, 1.91%)</title><rect x="1147.4" y="485" width="22.5" height="15.0" fill="rgb(220,37,13)" rx="2" ry="2" />
<text  x="1150.36" y="495.5" >s..</text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (2 samples, 0.21%)</title><rect x="890.3" y="485" width="2.5" height="15.0" fill="rgb(253,166,33)" rx="2" ry="2" />
<text  x="893.30" y="495.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef23c0f0d8, (3 samples, 0.32%)</title><rect x="80.2" y="421" width="3.8" height="15.0" fill="rgb(243,97,35)" rx="2" ry="2" />
<text  x="83.22" y="431.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf6c000020, (1 samples, 0.11%)</title><rect x="778.7" y="181" width="1.2" height="15.0" fill="rgb(220,6,19)" rx="2" ry="2" />
<text  x="781.69" y="191.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf70000020, (1 samples, 0.11%)</title><rect x="130.4" y="277" width="1.2" height="15.0" fill="rgb(231,142,30)" rx="2" ry="2" />
<text  x="133.38" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (2 samples, 0.21%)</title><rect x="884.0" y="341" width="2.5" height="15.0" fill="rgb(254,108,33)" rx="2" ry="2" />
<text  x="887.03" y="351.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (1 samples, 0.11%)</title><rect x="642.0" y="501" width="1.3" height="15.0" fill="rgb(216,184,44)" rx="2" ry="2" />
<text  x="645.01" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (3 samples, 0.32%)</title><rect x="963.0" y="357" width="3.8" height="15.0" fill="rgb(208,20,12)" rx="2" ry="2" />
<text  x="966.03" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1477) (1 samples, 0.11%)</title><rect x="842.6" y="469" width="1.3" height="15.0" fill="rgb(217,126,43)" rx="2" ry="2" />
<text  x="845.65" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=64, (1 samples, 0.11%)</title><rect x="866.5" y="325" width="1.2" height="15.0" fill="rgb(250,163,24)" rx="2" ry="2" />
<text  x="869.47" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="153.0" y="293" width="20.0" height="15.0" fill="rgb(239,26,32)" rx="2" ry="2" />
<text  x="155.95" y="303.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef20b3db38, (4 samples, 0.43%)</title><rect x="1045.8" y="373" width="5.0" height="15.0" fill="rgb(212,124,21)" rx="2" ry="2" />
<text  x="1048.79" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (32 samples, 3.40%)</title><rect x="40.1" y="485" width="40.1" height="15.0" fill="rgb(210,35,39)" rx="2" ry="2" />
<text  x="43.10" y="495.5" >std..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (1 samples, 0.11%)</title><rect x="218.2" y="181" width="1.2" height="15.0" fill="rgb(210,1,37)" rx="2" ry="2" />
<text  x="221.16" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="891.6" y="453" width="1.2" height="15.0" fill="rgb(242,173,29)" rx="2" ry="2" />
<text  x="894.55" y="463.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks(iteration=9, (1 samples, 0.11%)</title><rect x="1144.9" y="501" width="1.2" height="15.0" fill="rgb(246,5,43)" rx="2" ry="2" />
<text  x="1147.86" y="511.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef085b1750) (1 samples, 0.11%)</title><rect x="372.4" y="149" width="1.3" height="15.0" fill="rgb(243,152,35)" rx="2" ry="2" />
<text  x="375.40" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="556.7" y="149" width="1.3" height="15.0" fill="rgb(214,2,14)" rx="2" ry="2" />
<text  x="559.74" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="194.3" y="133" width="1.3" height="15.0" fill="rgb(233,160,34)" rx="2" ry="2" />
<text  x="197.34" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="155.5" y="133" width="1.2" height="15.0" fill="rgb(245,216,13)" rx="2" ry="2" />
<text  x="158.46" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (10 samples, 1.06%)</title><rect x="176.8" y="197" width="12.5" height="15.0" fill="rgb(234,66,14)" rx="2" ry="2" />
<text  x="179.78" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="895.3" y="389" width="1.3" height="15.0" fill="rgb(222,71,45)" rx="2" ry="2" />
<text  x="898.31" y="399.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="23.8" y="437" width="1.2" height="15.0" fill="rgb(238,9,49)" rx="2" ry="2" />
<text  x="26.79" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="150.4" y="309" width="1.3" height="15.0" fill="rgb(249,221,19)" rx="2" ry="2" />
<text  x="153.45" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1169.9" y="389" width="1.3" height="15.0" fill="rgb(221,148,41)" rx="2" ry="2" />
<text  x="1172.94" y="399.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="1040.8" y="341" width="5.0" height="15.0" fill="rgb(223,221,12)" rx="2" ry="2" />
<text  x="1043.78" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0832c5f0) (1 samples, 0.11%)</title><rect x="371.1" y="133" width="1.3" height="15.0" fill="rgb(252,7,31)" rx="2" ry="2" />
<text  x="374.15" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="455.2" y="101" width="1.2" height="15.0" fill="rgb(222,83,16)" rx="2" ry="2" />
<text  x="458.16" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="245.7" y="101" width="1.3" height="15.0" fill="rgb(223,84,15)" rx="2" ry="2" />
<text  x="248.75" y="111.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank&gt; (1 samples, 0.11%)</title><rect x="1186.2" y="453" width="1.3" height="15.0" fill="rgb(209,197,7)" rx="2" ry="2" />
<text  x="1189.24" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef23c0f0b0) (4 samples, 0.43%)</title><rect x="1104.7" y="453" width="5.0" height="15.0" fill="rgb(217,142,30)" rx="2" ry="2" />
<text  x="1107.73" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.21%)</title><rect x="85.2" y="453" width="2.5" height="15.0" fill="rgb(205,121,30)" rx="2" ry="2" />
<text  x="88.24" y="463.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="890.3" y="373" width="1.3" height="15.0" fill="rgb(222,62,7)" rx="2" ry="2" />
<text  x="893.30" y="383.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (12 samples, 1.28%)</title><rect x="243.2" y="197" width="15.1" height="15.0" fill="rgb(240,189,39)" rx="2" ry="2" />
<text  x="246.24" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="115.3" y="261" width="1.3" height="15.0" fill="rgb(247,2,45)" rx="2" ry="2" />
<text  x="118.33" y="271.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="1035.8" y="389" width="5.0" height="15.0" fill="rgb(215,19,52)" rx="2" ry="2" />
<text  x="1038.76" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf74000020, (1 samples, 0.11%)</title><rect x="812.6" y="277" width="1.2" height="15.0" fill="rgb(217,15,26)" rx="2" ry="2" />
<text  x="815.55" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="193.1" y="117" width="1.2" height="15.0" fill="rgb(212,89,24)" rx="2" ry="2" />
<text  x="196.08" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="357" width="3.8" height="15.0" fill="rgb(240,180,10)" rx="2" ry="2" />
<text  x="1007.41" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.11%)</title><rect x="915.4" y="469" width="1.2" height="15.0" fill="rgb(207,186,9)" rx="2" ry="2" />
<text  x="918.38" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf89d37dc0) (1 samples, 0.11%)</title><rect x="800.0" y="181" width="1.3" height="15.0" fill="rgb(235,50,27)" rx="2" ry="2" />
<text  x="803.01" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.11%)</title><rect x="654.5" y="357" width="1.3" height="15.0" fill="rgb(248,70,34)" rx="2" ry="2" />
<text  x="657.55" y="367.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="842.6" y="421" width="1.3" height="15.0" fill="rgb(206,211,9)" rx="2" ry="2" />
<text  x="845.65" y="431.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (66 samples, 7.01%)</title><rect x="830.1" y="517" width="82.8" height="15.0" fill="rgb(206,84,37)" rx="2" ry="2" />
<text  x="833.11" y="527.5" >SimpleNet..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (15 samples, 1.59%)</title><rect x="324.8" y="165" width="18.8" height="15.0" fill="rgb(211,110,18)" rx="2" ry="2" />
<text  x="327.75" y="175.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.11%)</title><rect x="23.8" y="517" width="1.2" height="15.0" fill="rgb(237,42,26)" rx="2" ry="2" />
<text  x="26.79" y="527.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (1 samples, 0.11%)</title><rect x="638.2" y="501" width="1.3" height="15.0" fill="rgb(226,151,42)" rx="2" ry="2" />
<text  x="641.25" y="511.5" ></text>
</g>
<g >
<title>std::thread::join()() (3 samples, 0.32%)</title><rect x="28.8" y="405" width="3.8" height="15.0" fill="rgb(247,92,3)" rx="2" ry="2" />
<text  x="31.81" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="173.0" y="293" width="20.1" height="15.0" fill="rgb(236,106,53)" rx="2" ry="2" />
<text  x="176.02" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="437" width="2.5" height="15.0" fill="rgb(235,195,53)" rx="2" ry="2" />
<text  x="919.63" y="447.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="267.1" y="149" width="1.2" height="15.0" fill="rgb(248,95,41)" rx="2" ry="2" />
<text  x="270.07" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.11%)</title><rect x="23.8" y="421" width="1.2" height="15.0" fill="rgb(225,221,38)" rx="2" ry="2" />
<text  x="26.79" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="23.8" y="469" width="1.2" height="15.0" fill="rgb(254,10,35)" rx="2" ry="2" />
<text  x="26.79" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*, (1 samples, 0.11%)</title><rect x="1186.2" y="501" width="1.3" height="15.0" fill="rgb(237,199,27)" rx="2" ry="2" />
<text  x="1189.24" y="511.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="10.0" y="405" width="1.3" height="15.0" fill="rgb(218,2,40)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>clone() (438 samples, 46.55%)</title><rect x="89.0" y="549" width="549.2" height="15.0" fill="rgb(213,198,54)" rx="2" ry="2" />
<text  x="92.00" y="559.5" >clone()</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="1123.5" y="421" width="3.8" height="15.0" fill="rgb(225,69,6)" rx="2" ry="2" />
<text  x="1126.54" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (10 samples, 1.06%)</title><rect x="11.3" y="549" width="12.5" height="15.0" fill="rgb(222,25,27)" rx="2" ry="2" />
<text  x="14.25" y="559.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,Network (3 samples, 0.32%)</title><rect x="89.0" y="421" width="3.8" height="15.0" fill="rgb(237,42,37)" rx="2" ry="2" />
<text  x="92.00" y="431.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::generateResult (1 samples, 0.11%)</title><rect x="84.0" y="549" width="1.2" height="15.0" fill="rgb(220,213,35)" rx="2" ry="2" />
<text  x="86.99" y="559.5" ></text>
</g>
<g >
<title>malloc_consolidate (5 samples, 0.53%)</title><rect x="1109.7" y="373" width="6.3" height="15.0" fill="rgb(220,26,2)" rx="2" ry="2" />
<text  x="1112.74" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="595.6" y="117" width="1.3" height="15.0" fill="rgb(206,8,32)" rx="2" ry="2" />
<text  x="598.61" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (1 samples, 0.11%)</title><rect x="890.3" y="421" width="1.3" height="15.0" fill="rgb(218,204,11)" rx="2" ry="2" />
<text  x="893.30" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.11%)</title><rect x="635.7" y="149" width="1.3" height="15.0" fill="rgb(207,197,48)" rx="2" ry="2" />
<text  x="638.74" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd1852ff40, (1 samples, 0.11%)</title><rect x="639.5" y="405" width="1.3" height="15.0" fill="rgb(213,10,45)" rx="2" ry="2" />
<text  x="642.50" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="850.2" y="453" width="1.2" height="15.0" fill="rgb(206,177,52)" rx="2" ry="2" />
<text  x="853.17" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (89 samples, 9.46%)</title><rect x="258.3" y="277" width="111.6" height="15.0" fill="rgb(230,174,8)" rx="2" ry="2" />
<text  x="261.29" y="287.5" >std::thread::..</text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.21%)</title><rect x="85.2" y="437" width="2.5" height="15.0" fill="rgb(241,19,28)" rx="2" ry="2" />
<text  x="88.24" y="447.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="841.4" y="421" width="1.2" height="15.0" fill="rgb(215,209,41)" rx="2" ry="2" />
<text  x="844.39" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="87.7" y="533" width="1.3" height="15.0" fill="rgb(220,115,43)" rx="2" ry="2" />
<text  x="90.75" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="189.3" y="101" width="1.3" height="15.0" fill="rgb(205,188,35)" rx="2" ry="2" />
<text  x="192.32" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="214.4" y="149" width="1.3" height="15.0" fill="rgb(205,69,32)" rx="2" ry="2" />
<text  x="217.40" y="159.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.21%)</title><rect x="588.1" y="149" width="2.5" height="15.0" fill="rgb(248,17,23)" rx="2" ry="2" />
<text  x="591.09" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (2 samples, 0.21%)</title><rect x="117.8" y="245" width="2.6" height="15.0" fill="rgb(251,45,39)" rx="2" ry="2" />
<text  x="120.84" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="866.5" y="437" width="6.2" height="15.0" fill="rgb(238,105,41)" rx="2" ry="2" />
<text  x="869.47" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="880.3" y="373" width="1.2" height="15.0" fill="rgb(219,94,31)" rx="2" ry="2" />
<text  x="883.27" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (5 samples, 0.53%)</title><rect x="830.1" y="485" width="6.3" height="15.0" fill="rgb(233,142,45)" rx="2" ry="2" />
<text  x="833.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.21%)</title><rect x="916.6" y="485" width="2.5" height="15.0" fill="rgb(214,187,52)" rx="2" ry="2" />
<text  x="919.63" y="495.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (6 samples, 0.64%)</title><rect x="442.6" y="149" width="7.5" height="15.0" fill="rgb(250,25,28)" rx="2" ry="2" />
<text  x="445.62" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="886.5" y="325" width="1.3" height="15.0" fill="rgb(227,187,21)" rx="2" ry="2" />
<text  x="889.54" y="335.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="156.7" y="149" width="1.3" height="15.0" fill="rgb(238,195,21)" rx="2" ry="2" />
<text  x="159.72" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="822.6" y="277" width="1.2" height="15.0" fill="rgb(215,47,38)" rx="2" ry="2" />
<text  x="825.58" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (12 samples, 1.28%)</title><rect x="1147.4" y="469" width="15.0" height="15.0" fill="rgb(242,143,32)" rx="2" ry="2" />
<text  x="1150.36" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef2054e208, (1 samples, 0.11%)</title><rect x="811.3" y="293" width="1.3" height="15.0" fill="rgb(241,10,27)" rx="2" ry="2" />
<text  x="814.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8cba06c0, (1 samples, 0.11%)</title><rect x="796.2" y="197" width="1.3" height="15.0" fill="rgb(230,9,8)" rx="2" ry="2" />
<text  x="799.25" y="207.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (143 samples, 15.20%)</title><rect x="369.9" y="277" width="179.3" height="15.0" fill="rgb(242,89,53)" rx="2" ry="2" />
<text  x="372.89" y="287.5" >std::thread::_Invoker&lt;s..</text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="856.4" y="405" width="1.3" height="15.0" fill="rgb(253,1,12)" rx="2" ry="2" />
<text  x="859.44" y="415.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (387 samples, 41.13%)</title><rect x="153.0" y="389" width="485.2" height="15.0" fill="rgb(231,192,21)" rx="2" ry="2" />
<text  x="155.95" y="399.5" >std::call_once&lt;void</text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.32%)</title><rect x="892.8" y="485" width="3.8" height="15.0" fill="rgb(220,150,13)" rx="2" ry="2" />
<text  x="895.81" y="495.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (3 samples, 0.32%)</title><rect x="193.1" y="181" width="3.7" height="15.0" fill="rgb(205,0,54)" rx="2" ry="2" />
<text  x="196.08" y="191.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="1045.8" y="389" width="5.0" height="15.0" fill="rgb(234,197,15)" rx="2" ry="2" />
<text  x="1048.79" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="369.9" y="181" width="1.2" height="15.0" fill="rgb(229,61,53)" rx="2" ry="2" />
<text  x="372.89" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (13 samples, 1.38%)</title><rect x="1010.7" y="453" width="16.3" height="15.0" fill="rgb(233,141,13)" rx="2" ry="2" />
<text  x="1013.68" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=16384) (1 samples, 0.11%)</title><rect x="87.7" y="421" width="1.3" height="15.0" fill="rgb(219,177,39)" rx="2" ry="2" />
<text  x="90.75" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="173.0" y="149" width="1.3" height="15.0" fill="rgb(225,40,48)" rx="2" ry="2" />
<text  x="176.02" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="924.2" y="437" width="5.0" height="15.0" fill="rgb(235,94,33)" rx="2" ry="2" />
<text  x="927.16" y="447.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;Page, (1 samples, 0.11%)</title><rect x="1128.6" y="389" width="1.2" height="15.0" fill="rgb(244,33,28)" rx="2" ry="2" />
<text  x="1131.55" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (2 samples, 0.21%)</title><rect x="213.1" y="341" width="2.6" height="15.0" fill="rgb(206,11,2)" rx="2" ry="2" />
<text  x="216.15" y="351.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (3 samples, 0.32%)</title><rect x="920.4" y="389" width="3.8" height="15.0" fill="rgb(239,35,27)" rx="2" ry="2" />
<text  x="923.39" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (89 samples, 9.46%)</title><rect x="258.3" y="261" width="111.6" height="15.0" fill="rgb(248,179,25)" rx="2" ry="2" />
<text  x="261.29" y="271.5" >std::thread::..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (16 samples, 1.70%)</title><rect x="258.3" y="197" width="20.1" height="15.0" fill="rgb(239,116,8)" rx="2" ry="2" />
<text  x="261.29" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.21%)</title><rect x="190.6" y="181" width="2.5" height="15.0" fill="rgb(212,49,30)" rx="2" ry="2" />
<text  x="193.57" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.11%)</title><rect x="213.1" y="53" width="1.3" height="15.0" fill="rgb(224,30,38)" rx="2" ry="2" />
<text  x="216.15" y="63.5" ></text>
</g>
<g >
<title>__find_specmb(format=&lt;optimized (1 samples, 0.11%)</title><rect x="858.9" y="389" width="1.3" height="15.0" fill="rgb(242,35,10)" rx="2" ry="2" />
<text  x="861.95" y="399.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fba0, (1 samples, 0.11%)</title><rect x="1132.3" y="421" width="1.3" height="15.0" fill="rgb(232,81,0)" rx="2" ry="2" />
<text  x="1135.32" y="431.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (10 samples, 1.06%)</title><rect x="11.3" y="501" width="12.5" height="15.0" fill="rgb(238,188,49)" rx="2" ry="2" />
<text  x="14.25" y="511.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="853.9" y="421" width="1.3" height="15.0" fill="rgb(228,19,26)" rx="2" ry="2" />
<text  x="856.93" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (46 samples, 4.89%)</title><rect x="92.8" y="421" width="57.6" height="15.0" fill="rgb(207,27,54)" rx="2" ry="2" />
<text  x="95.76" y="431.5" >MultiT..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="1169.9" y="469" width="3.8" height="15.0" fill="rgb(239,144,16)" rx="2" ry="2" />
<text  x="1172.94" y="479.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.11%)</title><rect x="644.5" y="373" width="1.3" height="15.0" fill="rgb(231,72,19)" rx="2" ry="2" />
<text  x="647.52" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="10.0" y="453" width="1.3" height="15.0" fill="rgb(227,207,23)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (16 samples, 1.70%)</title><rect x="193.1" y="229" width="20.0" height="15.0" fill="rgb(226,121,26)" rx="2" ry="2" />
<text  x="196.08" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (14 samples, 1.49%)</title><rect x="620.7" y="325" width="17.5" height="15.0" fill="rgb(245,136,44)" rx="2" ry="2" />
<text  x="623.69" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2222d580) (32 samples, 3.40%)</title><rect x="40.1" y="501" width="40.1" height="15.0" fill="rgb(241,35,30)" rx="2" ry="2" />
<text  x="43.10" y="511.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="897.8" y="453" width="1.3" height="15.0" fill="rgb(230,129,48)" rx="2" ry="2" />
<text  x="900.82" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf7b126030, (1 samples, 0.11%)</title><rect x="783.7" y="197" width="1.3" height="15.0" fill="rgb(222,147,9)" rx="2" ry="2" />
<text  x="786.71" y="207.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (1 samples, 0.11%)</title><rect x="1134.8" y="501" width="1.3" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="1137.82" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.32%)</title><rect x="319.7" y="117" width="3.8" height="15.0" fill="rgb(219,40,34)" rx="2" ry="2" />
<text  x="322.73" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="1147.4" y="453" width="1.2" height="15.0" fill="rgb(205,54,3)" rx="2" ry="2" />
<text  x="1150.36" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="87.7" y="517" width="1.3" height="15.0" fill="rgb(210,138,54)" rx="2" ry="2" />
<text  x="90.75" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef2311fdc0, (1 samples, 0.11%)</title><rect x="1181.2" y="245" width="1.3" height="15.0" fill="rgb(207,178,22)" rx="2" ry="2" />
<text  x="1184.22" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (34 samples, 3.61%)</title><rect x="215.7" y="309" width="42.6" height="15.0" fill="rgb(219,66,19)" rx="2" ry="2" />
<text  x="218.65" y="319.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (27 samples, 2.87%)</title><rect x="776.2" y="261" width="33.8" height="15.0" fill="rgb(242,184,13)" rx="2" ry="2" />
<text  x="779.18" y="271.5" >st..</text>
</g>
<g >
<title>__pthread_clockjoin_ex (1 samples, 0.11%)</title><rect x="726.0" y="341" width="1.3" height="15.0" fill="rgb(217,137,21)" rx="2" ry="2" />
<text  x="729.03" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="853.9" y="453" width="1.3" height="15.0" fill="rgb(228,214,8)" rx="2" ry="2" />
<text  x="856.93" y="463.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="1040.8" y="405" width="5.0" height="15.0" fill="rgb(207,80,17)" rx="2" ry="2" />
<text  x="1043.78" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="1040.8" y="437" width="5.0" height="15.0" fill="rgb(236,92,4)" rx="2" ry="2" />
<text  x="1043.78" y="447.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (44 samples, 4.68%)</title><rect x="28.8" y="517" width="55.2" height="15.0" fill="rgb(252,171,37)" rx="2" ry="2" />
<text  x="31.81" y="527.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="892.8" y="453" width="3.8" height="15.0" fill="rgb(216,152,31)" rx="2" ry="2" />
<text  x="895.81" y="463.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060daf8, (4 samples, 0.43%)</title><rect x="1035.8" y="373" width="5.0" height="15.0" fill="rgb(240,171,26)" rx="2" ry="2" />
<text  x="1038.76" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c5678) (1 samples, 0.11%)</title><rect x="193.1" y="133" width="1.2" height="15.0" fill="rgb(236,70,7)" rx="2" ry="2" />
<text  x="196.08" y="143.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="193.1" y="277" width="20.0" height="15.0" fill="rgb(207,72,49)" rx="2" ry="2" />
<text  x="196.08" y="287.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="964.3" y="293" width="1.2" height="15.0" fill="rgb(208,114,7)" rx="2" ry="2" />
<text  x="967.28" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (5 samples, 0.53%)</title><rect x="830.1" y="469" width="6.3" height="15.0" fill="rgb(230,192,41)" rx="2" ry="2" />
<text  x="833.11" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="253.3" y="133" width="5.0" height="15.0" fill="rgb(249,110,17)" rx="2" ry="2" />
<text  x="256.27" y="143.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="958.0" y="197" width="1.3" height="15.0" fill="rgb(239,134,40)" rx="2" ry="2" />
<text  x="961.01" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (10 samples, 1.06%)</title><rect x="1149.9" y="421" width="12.5" height="15.0" fill="rgb(217,88,30)" rx="2" ry="2" />
<text  x="1152.87" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="1034.5" y="485" width="1.3" height="15.0" fill="rgb(251,135,16)" rx="2" ry="2" />
<text  x="1037.51" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (1 samples, 0.11%)</title><rect x="150.4" y="261" width="1.3" height="15.0" fill="rgb(241,219,38)" rx="2" ry="2" />
<text  x="153.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="171.8" y="165" width="1.2" height="15.0" fill="rgb(215,21,4)" rx="2" ry="2" />
<text  x="174.76" y="175.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="851.4" y="421" width="1.3" height="15.0" fill="rgb(225,25,31)" rx="2" ry="2" />
<text  x="854.42" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="897.8" y="485" width="1.3" height="15.0" fill="rgb(229,24,29)" rx="2" ry="2" />
<text  x="900.82" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="1045.8" y="421" width="5.0" height="15.0" fill="rgb(252,163,10)" rx="2" ry="2" />
<text  x="1048.79" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (1 samples, 0.11%)</title><rect x="726.0" y="421" width="1.3" height="15.0" fill="rgb(247,80,22)" rx="2" ry="2" />
<text  x="729.03" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="846.4" y="453" width="1.3" height="15.0" fill="rgb(223,179,44)" rx="2" ry="2" />
<text  x="849.41" y="463.5" ></text>
</g>
<g >
<title>Page::getId (3 samples, 0.32%)</title><rect x="892.8" y="501" width="3.8" height="15.0" fill="rgb(216,11,12)" rx="2" ry="2" />
<text  x="895.81" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7ffd1852ff28, (1 samples, 0.11%)</title><rect x="905.3" y="421" width="1.3" height="15.0" fill="rgb(250,52,2)" rx="2" ry="2" />
<text  x="908.35" y="431.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2 samples, 0.21%)</title><rect x="374.9" y="165" width="2.5" height="15.0" fill="rgb(216,165,29)" rx="2" ry="2" />
<text  x="377.91" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.32%)</title><rect x="25.0" y="533" width="3.8" height="15.0" fill="rgb(213,190,3)" rx="2" ry="2" />
<text  x="28.05" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.11%)</title><rect x="890.3" y="453" width="1.3" height="15.0" fill="rgb(215,148,19)" rx="2" ry="2" />
<text  x="893.30" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (5 samples, 0.53%)</title><rect x="142.9" y="357" width="6.3" height="15.0" fill="rgb(217,80,14)" rx="2" ry="2" />
<text  x="145.92" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="841.4" y="453" width="1.2" height="15.0" fill="rgb(243,93,44)" rx="2" ry="2" />
<text  x="844.39" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="838.9" y="453" width="1.2" height="15.0" fill="rgb(223,87,43)" rx="2" ry="2" />
<text  x="841.88" y="463.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (9 samples, 0.96%)</title><rect x="643.3" y="501" width="11.2" height="15.0" fill="rgb(248,218,7)" rx="2" ry="2" />
<text  x="646.26" y="511.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;PageIdAndRank*,PageIdAndRank*, (1 samples, 0.11%)</title><rect x="1008.2" y="389" width="1.2" height="15.0" fill="rgb(246,199,19)" rx="2" ry="2" />
<text  x="1011.17" y="399.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (9 samples, 0.96%)</title><rect x="196.8" y="197" width="11.3" height="15.0" fill="rgb(243,160,32)" rx="2" ry="2" />
<text  x="199.84" y="207.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (34 samples, 3.61%)</title><rect x="215.7" y="261" width="42.6" height="15.0" fill="rgb(245,219,34)" rx="2" ry="2" />
<text  x="218.65" y="271.5" >std:..</text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="876.5" y="389" width="1.3" height="15.0" fill="rgb(213,52,2)" rx="2" ry="2" />
<text  x="879.50" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1169.9" y="373" width="1.3" height="15.0" fill="rgb(206,228,4)" rx="2" ry="2" />
<text  x="1172.94" y="383.5" ></text>
</g>
<g >
<title>std::mutex::lock (2 samples, 0.21%)</title><rect x="549.2" y="165" width="2.5" height="15.0" fill="rgb(246,60,50)" rx="2" ry="2" />
<text  x="552.21" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="171.8" y="117" width="1.2" height="15.0" fill="rgb(245,165,21)" rx="2" ry="2" />
<text  x="174.76" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1186.2" y="389" width="1.3" height="15.0" fill="rgb(217,217,22)" rx="2" ry="2" />
<text  x="1189.24" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0b5c5b30) (2 samples, 0.21%)</title><rect x="259.5" y="133" width="2.6" height="15.0" fill="rgb(222,42,18)" rx="2" ry="2" />
<text  x="262.54" y="143.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.11%)</title><rect x="249.5" y="101" width="1.3" height="15.0" fill="rgb(224,85,41)" rx="2" ry="2" />
<text  x="252.51" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="654.5" y="421" width="1.3" height="15.0" fill="rgb(233,32,44)" rx="2" ry="2" />
<text  x="657.55" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="421" width="1.2" height="15.0" fill="rgb(235,191,23)" rx="2" ry="2" />
<text  x="864.46" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.21%)</title><rect x="921.6" y="341" width="2.6" height="15.0" fill="rgb(244,50,15)" rx="2" ry="2" />
<text  x="924.65" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (27 samples, 2.87%)</title><rect x="776.2" y="245" width="33.8" height="15.0" fill="rgb(235,136,48)" rx="2" ry="2" />
<text  x="779.18" y="255.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1132.3" y="469" width="1.3" height="15.0" fill="rgb(236,7,14)" rx="2" ry="2" />
<text  x="1135.32" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (5 samples, 0.53%)</title><rect x="899.1" y="421" width="6.2" height="15.0" fill="rgb(231,105,7)" rx="2" ry="2" />
<text  x="902.08" y="431.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="27.6" y="421" width="1.2" height="15.0" fill="rgb(221,81,34)" rx="2" ry="2" />
<text  x="30.56" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef085b17c0) (2 samples, 0.21%)</title><rect x="551.7" y="149" width="2.5" height="15.0" fill="rgb(245,208,54)" rx="2" ry="2" />
<text  x="554.72" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (3 samples, 0.32%)</title><rect x="709.7" y="325" width="3.8" height="15.0" fill="rgb(237,161,20)" rx="2" ry="2" />
<text  x="712.72" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="1137.3" y="485" width="1.3" height="15.0" fill="rgb(219,18,54)" rx="2" ry="2" />
<text  x="1140.33" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="848.9" y="453" width="1.3" height="15.0" fill="rgb(234,176,24)" rx="2" ry="2" />
<text  x="851.92" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 1.06%)</title><rect x="1109.7" y="453" width="12.6" height="15.0" fill="rgb(227,22,17)" rx="2" ry="2" />
<text  x="1112.74" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf98000020) (1 samples, 0.11%)</title><rect x="825.1" y="261" width="1.2" height="15.0" fill="rgb(231,228,29)" rx="2" ry="2" />
<text  x="828.09" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1035) (1 samples, 0.11%)</title><rect x="837.6" y="469" width="1.3" height="15.0" fill="rgb(214,156,26)" rx="2" ry="2" />
<text  x="840.63" y="479.5" ></text>
</g>
<g >
<title>std::mutex::unlock (6 samples, 0.64%)</title><rect x="551.7" y="165" width="7.5" height="15.0" fill="rgb(248,225,36)" rx="2" ry="2" />
<text  x="554.72" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.53%)</title><rect x="136.7" y="357" width="6.2" height="15.0" fill="rgb(230,207,54)" rx="2" ry="2" />
<text  x="139.65" y="367.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=2000, (248 samples, 26.35%)</title><rect x="655.8" y="533" width="311.0" height="15.0" fill="rgb(227,50,22)" rx="2" ry="2" />
<text  x="658.80" y="543.5" >pageRankComputationWithNumNodes(num=2000,</text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="810.0" y="277" width="1.3" height="15.0" fill="rgb(254,210,35)" rx="2" ry="2" />
<text  x="813.04" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (9 samples, 0.96%)</title><rect x="609.4" y="101" width="11.3" height="15.0" fill="rgb(247,93,15)" rx="2" ry="2" />
<text  x="612.40" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="250.8" y="149" width="2.5" height="15.0" fill="rgb(250,225,16)" rx="2" ry="2" />
<text  x="253.77" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="151.7" y="293" width="1.3" height="15.0" fill="rgb(229,192,37)" rx="2" ry="2" />
<text  x="154.70" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1487) (1 samples, 0.11%)</title><rect x="845.2" y="469" width="1.2" height="15.0" fill="rgb(232,62,14)" rx="2" ry="2" />
<text  x="848.15" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1137.3" y="453" width="1.3" height="15.0" fill="rgb(221,45,16)" rx="2" ry="2" />
<text  x="1140.33" y="463.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="788.7" y="181" width="1.3" height="15.0" fill="rgb(234,212,11)" rx="2" ry="2" />
<text  x="791.72" y="191.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (3 samples, 0.32%)</title><rect x="371.1" y="181" width="3.8" height="15.0" fill="rgb(251,163,23)" rx="2" ry="2" />
<text  x="374.15" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.11%)</title><rect x="894.1" y="389" width="1.2" height="15.0" fill="rgb(252,113,34)" rx="2" ry="2" />
<text  x="897.06" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.74%)</title><rect x="999.4" y="453" width="8.8" height="15.0" fill="rgb(239,196,22)" rx="2" ry="2" />
<text  x="1002.39" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.11%)</title><rect x="1137.3" y="469" width="1.3" height="15.0" fill="rgb(231,146,20)" rx="2" ry="2" />
<text  x="1140.33" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.32%)</title><rect x="900.3" y="341" width="3.8" height="15.0" fill="rgb(233,41,32)" rx="2" ry="2" />
<text  x="903.33" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (27 samples, 2.87%)</title><rect x="776.2" y="341" width="33.8" height="15.0" fill="rgb(254,220,37)" rx="2" ry="2" />
<text  x="779.18" y="351.5" >st..</text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef0b5c5b30) (1 samples, 0.11%)</title><rect x="374.9" y="149" width="1.3" height="15.0" fill="rgb(212,125,0)" rx="2" ry="2" />
<text  x="377.91" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate(this=0x7ffd18530190, (2 samples, 0.21%)</title><rect x="1187.5" y="453" width="2.5" height="15.0" fill="rgb(224,150,53)" rx="2" ry="2" />
<text  x="1190.49" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (16 samples, 1.70%)</title><rect x="153.0" y="341" width="20.0" height="15.0" fill="rgb(223,44,49)" rx="2" ry="2" />
<text  x="155.95" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (143 samples, 15.20%)</title><rect x="369.9" y="341" width="179.3" height="15.0" fill="rgb(235,20,51)" rx="2" ry="2" />
<text  x="372.89" y="351.5" >std::__future_base::_St..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (3 samples, 0.32%)</title><rect x="28.8" y="437" width="3.8" height="15.0" fill="rgb(208,5,21)" rx="2" ry="2" />
<text  x="31.81" y="447.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef20b3db10) (4 samples, 0.43%)</title><rect x="1045.8" y="453" width="5.0" height="15.0" fill="rgb(250,5,0)" rx="2" ry="2" />
<text  x="1048.79" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="555.5" y="117" width="1.2" height="15.0" fill="rgb(239,27,53)" rx="2" ry="2" />
<text  x="558.48" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1094) (1 samples, 0.11%)</title><rect x="838.9" y="469" width="1.2" height="15.0" fill="rgb(246,161,30)" rx="2" ry="2" />
<text  x="841.88" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf998fb820, (1 samples, 0.11%)</title><rect x="807.5" y="197" width="1.3" height="15.0" fill="rgb(233,147,15)" rx="2" ry="2" />
<text  x="810.53" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (15 samples, 1.59%)</title><rect x="111.6" y="389" width="18.8" height="15.0" fill="rgb(251,145,39)" rx="2" ry="2" />
<text  x="114.57" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef0bb1c840) (1 samples, 0.11%)</title><rect x="554.2" y="149" width="1.3" height="15.0" fill="rgb(246,19,54)" rx="2" ry="2" />
<text  x="557.23" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="825.1" y="277" width="1.2" height="15.0" fill="rgb(248,108,15)" rx="2" ry="2" />
<text  x="828.09" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="555.5" y="133" width="1.2" height="15.0" fill="rgb(235,10,16)" rx="2" ry="2" />
<text  x="558.48" y="143.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef208144a0) (1 samples, 0.11%)</title><rect x="102.8" y="357" width="1.2" height="15.0" fill="rgb(236,99,3)" rx="2" ry="2" />
<text  x="105.79" y="367.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (2 samples, 0.21%)</title><rect x="1187.5" y="437" width="2.5" height="15.0" fill="rgb(253,114,21)" rx="2" ry="2" />
<text  x="1190.49" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="654.5" y="453" width="1.3" height="15.0" fill="rgb(247,212,30)" rx="2" ry="2" />
<text  x="657.55" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (3 samples, 0.32%)</title><rect x="80.2" y="485" width="3.8" height="15.0" fill="rgb(231,168,29)" rx="2" ry="2" />
<text  x="83.22" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="830.1" y="293" width="6.3" height="15.0" fill="rgb(212,141,28)" rx="2" ry="2" />
<text  x="833.11" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="243.2" y="165" width="1.3" height="15.0" fill="rgb(222,179,54)" rx="2" ry="2" />
<text  x="246.24" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1186.2" y="405" width="1.3" height="15.0" fill="rgb(254,29,4)" rx="2" ry="2" />
<text  x="1189.24" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1123.5" y="357" width="3.8" height="15.0" fill="rgb(234,60,53)" rx="2" ry="2" />
<text  x="1126.54" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.43%)</title><rect x="130.4" y="341" width="5.0" height="15.0" fill="rgb(206,35,0)" rx="2" ry="2" />
<text  x="133.38" y="351.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (23 samples, 2.44%)</title><rect x="742.3" y="389" width="28.9" height="15.0" fill="rgb(245,218,50)" rx="2" ry="2" />
<text  x="745.33" y="399.5" >__..</text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (57 samples, 6.06%)</title><rect x="549.2" y="293" width="71.5" height="15.0" fill="rgb(233,183,17)" rx="2" ry="2" />
<text  x="552.21" y="303.5" >std::__f..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="150.4" y="325" width="1.3" height="15.0" fill="rgb(206,192,46)" rx="2" ry="2" />
<text  x="153.45" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.21%)</title><rect x="551.7" y="133" width="2.5" height="15.0" fill="rgb(214,133,51)" rx="2" ry="2" />
<text  x="554.72" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (3 samples, 0.32%)</title><rect x="467.7" y="53" width="3.8" height="15.0" fill="rgb(235,207,23)" rx="2" ry="2" />
<text  x="470.70" y="63.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (23 samples, 2.44%)</title><rect x="929.2" y="421" width="28.8" height="15.0" fill="rgb(212,118,12)" rx="2" ry="2" />
<text  x="932.17" y="431.5" >st..</text>
</g>
<g >
<title>std::call_once&lt;void (3 samples, 0.32%)</title><rect x="80.2" y="453" width="3.8" height="15.0" fill="rgb(217,156,41)" rx="2" ry="2" />
<text  x="83.22" y="463.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="173.0" y="117" width="1.3" height="15.0" fill="rgb(207,91,8)" rx="2" ry="2" />
<text  x="176.02" y="127.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0832c5f0) (1 samples, 0.11%)</title><rect x="371.1" y="149" width="1.3" height="15.0" fill="rgb(206,22,42)" rx="2" ry="2" />
<text  x="374.15" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="156.7" y="133" width="1.3" height="15.0" fill="rgb(235,191,21)" rx="2" ry="2" />
<text  x="159.72" y="143.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.32%)</title><rect x="89.0" y="485" width="3.8" height="15.0" fill="rgb(222,44,37)" rx="2" ry="2" />
<text  x="92.00" y="495.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="965.5" y="293" width="1.3" height="15.0" fill="rgb(242,21,16)" rx="2" ry="2" />
<text  x="968.54" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="111.6" y="229" width="3.7" height="15.0" fill="rgb(244,223,51)" rx="2" ry="2" />
<text  x="114.57" y="239.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef208a5128, (34 samples, 3.61%)</title><rect x="215.7" y="357" width="42.6" height="15.0" fill="rgb(215,157,14)" rx="2" ry="2" />
<text  x="218.65" y="367.5" >__pt..</text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="838.9" y="437" width="1.2" height="15.0" fill="rgb(242,199,25)" rx="2" ry="2" />
<text  x="841.88" y="447.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.11%)</title><rect x="654.5" y="293" width="1.3" height="15.0" fill="rgb(209,33,29)" rx="2" ry="2" />
<text  x="657.55" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="173.0" y="277" width="20.1" height="15.0" fill="rgb(248,108,39)" rx="2" ry="2" />
<text  x="176.02" y="287.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="875.2" y="389" width="1.3" height="15.0" fill="rgb(206,89,51)" rx="2" ry="2" />
<text  x="878.25" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.11%)</title><rect x="91.5" y="277" width="1.3" height="15.0" fill="rgb(207,81,5)" rx="2" ry="2" />
<text  x="94.51" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="110.3" y="325" width="1.3" height="15.0" fill="rgb(222,116,11)" rx="2" ry="2" />
<text  x="113.32" y="335.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="837.6" y="405" width="1.3" height="15.0" fill="rgb(215,217,29)" rx="2" ry="2" />
<text  x="840.63" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1173.7" y="357" width="2.5" height="15.0" fill="rgb(219,145,7)" rx="2" ry="2" />
<text  x="1176.70" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="1035.8" y="421" width="5.0" height="15.0" fill="rgb(240,135,37)" rx="2" ry="2" />
<text  x="1038.76" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="1169.9" y="485" width="3.8" height="15.0" fill="rgb(220,116,11)" rx="2" ry="2" />
<text  x="1172.94" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="373" width="3.8" height="15.0" fill="rgb(220,183,12)" rx="2" ry="2" />
<text  x="1007.41" y="383.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="842.6" y="437" width="1.3" height="15.0" fill="rgb(233,112,31)" rx="2" ry="2" />
<text  x="845.65" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (3 samples, 0.32%)</title><rect x="1128.6" y="485" width="3.7" height="15.0" fill="rgb(229,29,48)" rx="2" ry="2" />
<text  x="1131.55" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef208a5110) (4 samples, 0.43%)</title><rect x="1040.8" y="453" width="5.0" height="15.0" fill="rgb(227,183,6)" rx="2" ry="2" />
<text  x="1043.78" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef209d5e48, (1 samples, 0.11%)</title><rect x="817.6" y="293" width="1.2" height="15.0" fill="rgb(241,147,20)" rx="2" ry="2" />
<text  x="820.57" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (10 samples, 1.06%)</title><rect x="245.7" y="181" width="12.6" height="15.0" fill="rgb(233,6,13)" rx="2" ry="2" />
<text  x="248.75" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.21%)</title><rect x="208.1" y="101" width="2.5" height="15.0" fill="rgb(254,225,42)" rx="2" ry="2" />
<text  x="211.13" y="111.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="790.0" y="181" width="1.2" height="15.0" fill="rgb(249,173,30)" rx="2" ry="2" />
<text  x="792.98" y="191.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.21%)</title><rect x="190.6" y="149" width="2.5" height="15.0" fill="rgb(215,17,10)" rx="2" ry="2" />
<text  x="193.57" y="159.5" ></text>
</g>
<g >
<title>PageId::~PageId (2 samples, 0.21%)</title><rect x="1171.2" y="373" width="2.5" height="15.0" fill="rgb(212,160,36)" rx="2" ry="2" />
<text  x="1174.19" y="383.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="194.3" y="117" width="1.3" height="15.0" fill="rgb(221,45,21)" rx="2" ry="2" />
<text  x="197.34" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (3 samples, 0.32%)</title><rect x="80.2" y="469" width="3.8" height="15.0" fill="rgb(254,62,36)" rx="2" ry="2" />
<text  x="83.22" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="153.0" y="213" width="20.0" height="15.0" fill="rgb(240,47,18)" rx="2" ry="2" />
<text  x="155.95" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="129.1" y="245" width="1.3" height="15.0" fill="rgb(221,43,16)" rx="2" ry="2" />
<text  x="132.13" y="255.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal(sf=sf@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="853.9" y="405" width="1.3" height="15.0" fill="rgb(205,33,10)" rx="2" ry="2" />
<text  x="856.93" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (9 samples, 0.96%)</title><rect x="1173.7" y="453" width="11.3" height="15.0" fill="rgb(212,13,26)" rx="2" ry="2" />
<text  x="1176.70" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (57 samples, 6.06%)</title><rect x="549.2" y="261" width="71.5" height="15.0" fill="rgb(206,71,23)" rx="2" ry="2" />
<text  x="552.21" y="271.5" >std::thr..</text>
</g>
<g >
<title>Page::~Page (8 samples, 0.85%)</title><rect x="896.6" y="501" width="10.0" height="15.0" fill="rgb(212,160,13)" rx="2" ry="2" />
<text  x="899.57" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="866.5" y="405" width="6.2" height="15.0" fill="rgb(243,224,15)" rx="2" ry="2" />
<text  x="869.47" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="1183.7" y="309" width="1.3" height="15.0" fill="rgb(216,91,2)" rx="2" ry="2" />
<text  x="1186.73" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf8be6c970, (1 samples, 0.11%)</title><rect x="793.7" y="197" width="1.3" height="15.0" fill="rgb(234,227,16)" rx="2" ry="2" />
<text  x="796.74" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.32%)</title><rect x="247.0" y="133" width="3.8" height="15.0" fill="rgb(234,151,38)" rx="2" ry="2" />
<text  x="250.00" y="143.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="175.5" y="149" width="1.3" height="15.0" fill="rgb(225,150,14)" rx="2" ry="2" />
<text  x="178.53" y="159.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="218.2" y="117" width="1.2" height="15.0" fill="rgb(237,46,17)" rx="2" ry="2" />
<text  x="221.16" y="127.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffd1852fe90) (2 samples, 0.21%)</title><rect x="996.9" y="485" width="2.5" height="15.0" fill="rgb(227,221,4)" rx="2" ry="2" />
<text  x="999.89" y="495.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (387 samples, 41.13%)</title><rect x="153.0" y="469" width="485.2" height="15.0" fill="rgb(230,5,1)" rx="2" ry="2" />
<text  x="155.95" y="479.5" >std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_..</text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="820.1" y="245" width="1.2" height="15.0" fill="rgb(225,217,48)" rx="2" ry="2" />
<text  x="823.07" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="639.5" y="389" width="1.3" height="15.0" fill="rgb(225,59,35)" rx="2" ry="2" />
<text  x="642.50" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="193.1" y="261" width="20.0" height="15.0" fill="rgb(230,109,27)" rx="2" ry="2" />
<text  x="196.08" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="830.1" y="309" width="6.3" height="15.0" fill="rgb(209,32,54)" rx="2" ry="2" />
<text  x="833.11" y="319.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (2 samples, 0.21%)</title><rect x="638.2" y="517" width="2.6" height="15.0" fill="rgb(235,86,12)" rx="2" ry="2" />
<text  x="641.25" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (5 samples, 0.53%)</title><rect x="136.7" y="309" width="6.2" height="15.0" fill="rgb(226,0,53)" rx="2" ry="2" />
<text  x="139.65" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="168.0" y="165" width="1.3" height="15.0" fill="rgb(231,30,24)" rx="2" ry="2" />
<text  x="171.00" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1705b180, (1 samples, 0.11%)</title><rect x="1186.2" y="341" width="1.3" height="15.0" fill="rgb(245,61,54)" rx="2" ry="2" />
<text  x="1189.24" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="91.5" y="325" width="1.3" height="15.0" fill="rgb(232,55,11)" rx="2" ry="2" />
<text  x="94.51" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf88000020) (1 samples, 0.11%)</title><rect x="817.6" y="261" width="1.2" height="15.0" fill="rgb(236,139,53)" rx="2" ry="2" />
<text  x="820.57" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="193.1" y="245" width="20.0" height="15.0" fill="rgb(222,177,32)" rx="2" ry="2" />
<text  x="196.08" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (2 samples, 0.21%)</title><rect x="213.1" y="245" width="2.6" height="15.0" fill="rgb(220,69,1)" rx="2" ry="2" />
<text  x="216.15" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="963.0" y="293" width="1.3" height="15.0" fill="rgb(213,140,41)" rx="2" ry="2" />
<text  x="966.03" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1fa87820, (1 samples, 0.11%)</title><rect x="959.3" y="213" width="1.2" height="15.0" fill="rgb(225,37,9)" rx="2" ry="2" />
<text  x="962.27" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="149.2" y="309" width="1.2" height="15.0" fill="rgb(231,5,33)" rx="2" ry="2" />
<text  x="152.19" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (14 samples, 1.49%)</title><rect x="620.7" y="229" width="17.5" height="15.0" fill="rgb(207,16,25)" rx="2" ry="2" />
<text  x="623.69" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="173.0" y="133" width="1.3" height="15.0" fill="rgb(209,217,31)" rx="2" ry="2" />
<text  x="176.02" y="143.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (1 samples, 0.11%)</title><rect x="638.2" y="485" width="1.3" height="15.0" fill="rgb(234,132,29)" rx="2" ry="2" />
<text  x="641.25" y="495.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.11%)</title><rect x="639.5" y="485" width="1.3" height="15.0" fill="rgb(234,188,22)" rx="2" ry="2" />
<text  x="642.50" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (89 samples, 9.46%)</title><rect x="258.3" y="309" width="111.6" height="15.0" fill="rgb(230,75,31)" rx="2" ry="2" />
<text  x="261.29" y="319.5" >std::_Functio..</text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="905.3" y="405" width="1.3" height="15.0" fill="rgb(243,82,52)" rx="2" ry="2" />
<text  x="908.35" y="415.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (8 samples, 0.85%)</title><rect x="699.7" y="453" width="10.0" height="15.0" fill="rgb(234,91,18)" rx="2" ry="2" />
<text  x="702.69" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="1027.0" y="389" width="1.2" height="15.0" fill="rgb(249,160,34)" rx="2" ry="2" />
<text  x="1029.98" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (17 samples, 1.81%)</title><rect x="343.6" y="101" width="21.3" height="15.0" fill="rgb(210,100,34)" rx="2" ry="2" />
<text  x="346.56" y="111.5" >s..</text>
</g>
<g >
<title>std::thread::join()() (43 samples, 4.57%)</title><rect x="1050.8" y="357" width="53.9" height="15.0" fill="rgb(237,15,20)" rx="2" ry="2" />
<text  x="1053.81" y="367.5" >std::..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (57 samples, 6.06%)</title><rect x="549.2" y="341" width="71.5" height="15.0" fill="rgb(252,80,38)" rx="2" ry="2" />
<text  x="552.21" y="351.5" >std::__f..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::~EdgeInfo (41 samples, 4.36%)</title><rect x="776.2" y="373" width="51.4" height="15.0" fill="rgb(228,165,36)" rx="2" ry="2" />
<text  x="779.18" y="383.5" >Multi..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="833.9" y="229" width="1.2" height="15.0" fill="rgb(218,63,25)" rx="2" ry="2" />
<text  x="836.87" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.43%)</title><rect x="907.9" y="437" width="5.0" height="15.0" fill="rgb(229,25,52)" rx="2" ry="2" />
<text  x="910.85" y="447.5" ></text>
</g>
<g >
<title>Page::~Page (1 samples, 0.11%)</title><rect x="639.5" y="501" width="1.3" height="15.0" fill="rgb(231,91,27)" rx="2" ry="2" />
<text  x="642.50" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="906.6" y="485" width="6.3" height="15.0" fill="rgb(248,30,18)" rx="2" ry="2" />
<text  x="909.60" y="495.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="841.4" y="437" width="1.2" height="15.0" fill="rgb(244,210,28)" rx="2" ry="2" />
<text  x="844.39" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.11%)</title><rect x="644.5" y="341" width="1.3" height="15.0" fill="rgb(212,158,23)" rx="2" ry="2" />
<text  x="647.52" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="173.0" y="245" width="20.1" height="15.0" fill="rgb(245,138,53)" rx="2" ry="2" />
<text  x="176.02" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1886e420, (1 samples, 0.11%)</title><rect x="1180.0" y="245" width="1.2" height="15.0" fill="rgb(216,185,51)" rx="2" ry="2" />
<text  x="1182.97" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.21%)</title><rect x="599.4" y="69" width="2.5" height="15.0" fill="rgb(246,191,11)" rx="2" ry="2" />
<text  x="602.37" y="79.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="87.7" y="437" width="1.3" height="15.0" fill="rgb(212,71,53)" rx="2" ry="2" />
<text  x="90.75" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef221aa7c0) (1 samples, 0.11%)</title><rect x="106.6" y="341" width="1.2" height="15.0" fill="rgb(223,225,28)" rx="2" ry="2" />
<text  x="109.56" y="351.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.21%)</title><rect x="85.2" y="517" width="2.5" height="15.0" fill="rgb(221,92,29)" rx="2" ry="2" />
<text  x="88.24" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.64%)</title><rect x="1010.7" y="389" width="7.5" height="15.0" fill="rgb(245,154,53)" rx="2" ry="2" />
<text  x="1013.68" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="450.1" y="181" width="5.1" height="15.0" fill="rgb(230,67,11)" rx="2" ry="2" />
<text  x="453.15" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.21%)</title><rect x="588.1" y="117" width="2.5" height="15.0" fill="rgb(215,158,52)" rx="2" ry="2" />
<text  x="591.09" y="127.5" ></text>
</g>
<g >
<title>std::thread::join()() (2 samples, 0.21%)</title><rect x="996.9" y="469" width="2.5" height="15.0" fill="rgb(235,142,12)" rx="2" ry="2" />
<text  x="999.89" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="243.2" y="133" width="1.3" height="15.0" fill="rgb(245,38,25)" rx="2" ry="2" />
<text  x="246.24" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="642.0" y="453" width="1.3" height="15.0" fill="rgb(222,2,4)" rx="2" ry="2" />
<text  x="645.01" y="463.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (8 samples, 0.85%)</title><rect x="732.3" y="405" width="10.0" height="15.0" fill="rgb(250,33,44)" rx="2" ry="2" />
<text  x="735.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="455.2" y="117" width="1.2" height="15.0" fill="rgb(230,55,51)" rx="2" ry="2" />
<text  x="458.16" y="127.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (137 samples, 14.56%)</title><rect x="655.8" y="517" width="171.8" height="15.0" fill="rgb(220,166,34)" rx="2" ry="2" />
<text  x="658.80" y="527.5" >MultiThreadedPageRankC..</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="216.9" y="149" width="1.3" height="15.0" fill="rgb(221,180,22)" rx="2" ry="2" />
<text  x="219.91" y="159.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="149.2" y="357" width="1.2" height="15.0" fill="rgb(232,167,3)" rx="2" ry="2" />
<text  x="152.19" y="367.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.11%)</title><rect x="1133.6" y="405" width="1.2" height="15.0" fill="rgb(217,158,33)" rx="2" ry="2" />
<text  x="1136.57" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="1185.0" y="405" width="1.2" height="15.0" fill="rgb(252,151,23)" rx="2" ry="2" />
<text  x="1187.98" y="415.5" ></text>
</g>
<g >
<title>std::mutex::unlock (6 samples, 0.64%)</title><rect x="270.8" y="165" width="7.6" height="15.0" fill="rgb(209,46,36)" rx="2" ry="2" />
<text  x="273.83" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (31 samples, 3.29%)</title><rect x="919.1" y="485" width="38.9" height="15.0" fill="rgb(211,69,17)" rx="2" ry="2" />
<text  x="922.14" y="495.5" >std..</text>
</g>
<g >
<title>mprotect() (1 samples, 0.11%)</title><rect x="132.9" y="229" width="1.2" height="15.0" fill="rgb(237,148,36)" rx="2" ry="2" />
<text  x="135.89" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef1082dcc0, (1 samples, 0.11%)</title><rect x="1173.7" y="325" width="1.3" height="15.0" fill="rgb(223,37,24)" rx="2" ry="2" />
<text  x="1176.70" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.11%)</title><rect x="1142.3" y="405" width="1.3" height="15.0" fill="rgb(213,1,16)" rx="2" ry="2" />
<text  x="1145.35" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.11%)</title><rect x="1128.6" y="469" width="1.2" height="15.0" fill="rgb(236,92,15)" rx="2" ry="2" />
<text  x="1131.55" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (14 samples, 1.49%)</title><rect x="620.7" y="213" width="17.5" height="15.0" fill="rgb(236,221,11)" rx="2" ry="2" />
<text  x="623.69" y="223.5" ></text>
</g>
<g >
<title>IO_validate_vtable(vtable=0x7fcf9e5fa1a0 (1 samples, 0.11%)</title><rect x="840.1" y="389" width="1.3" height="15.0" fill="rgb(222,76,38)" rx="2" ry="2" />
<text  x="843.14" y="399.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1186.2" y="325" width="1.3" height="15.0" fill="rgb(243,81,46)" rx="2" ry="2" />
<text  x="1189.24" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef208a5110) (4 samples, 0.43%)</title><rect x="727.3" y="453" width="5.0" height="15.0" fill="rgb(232,211,22)" rx="2" ry="2" />
<text  x="730.28" y="463.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.32%)</title><rect x="1123.5" y="373" width="3.8" height="15.0" fill="rgb(218,197,17)" rx="2" ry="2" />
<text  x="1126.54" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=1624) (1 samples, 0.11%)</title><rect x="846.4" y="469" width="1.3" height="15.0" fill="rgb(234,161,17)" rx="2" ry="2" />
<text  x="849.41" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="889.0" y="357" width="1.3" height="15.0" fill="rgb(211,44,29)" rx="2" ry="2" />
<text  x="892.04" y="367.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0bb1c8b0) (1 samples, 0.11%)</title><rect x="373.7" y="149" width="1.2" height="15.0" fill="rgb(242,87,33)" rx="2" ry="2" />
<text  x="376.66" y="159.5" ></text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x55ef221eb980, (1 samples, 0.11%)</title><rect x="1121.0" y="357" width="1.3" height="15.0" fill="rgb(222,223,51)" rx="2" ry="2" />
<text  x="1124.03" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="916.6" y="309" width="2.5" height="15.0" fill="rgb(224,37,35)" rx="2" ry="2" />
<text  x="919.63" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="155.5" y="117" width="1.2" height="15.0" fill="rgb(231,169,36)" rx="2" ry="2" />
<text  x="158.46" y="127.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.43%)</title><rect x="1045.8" y="341" width="5.0" height="15.0" fill="rgb(247,23,9)" rx="2" ry="2" />
<text  x="1048.79" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="639.5" y="453" width="1.3" height="15.0" fill="rgb(236,2,20)" rx="2" ry="2" />
<text  x="642.50" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (9 samples, 0.96%)</title><rect x="1010.7" y="437" width="11.3" height="15.0" fill="rgb(208,141,38)" rx="2" ry="2" />
<text  x="1013.68" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="277.1" y="117" width="1.3" height="15.0" fill="rgb(228,210,26)" rx="2" ry="2" />
<text  x="280.10" y="127.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (143 samples, 15.20%)</title><rect x="369.9" y="229" width="179.3" height="15.0" fill="rgb(227,114,6)" rx="2" ry="2" />
<text  x="372.89" y="239.5" >std::__invoke_impl&lt;std:..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageIdAndRank*&gt; (1 samples, 0.11%)</title><rect x="1186.2" y="469" width="1.3" height="15.0" fill="rgb(216,23,12)" rx="2" ry="2" />
<text  x="1189.24" y="479.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (6 samples, 0.64%)</title><rect x="270.8" y="181" width="7.6" height="15.0" fill="rgb(246,164,47)" rx="2" ry="2" />
<text  x="273.83" y="191.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="792.5" y="181" width="1.2" height="15.0" fill="rgb(222,16,4)" rx="2" ry="2" />
<text  x="795.49" y="191.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c5720) (1 samples, 0.11%)</title><rect x="558.0" y="149" width="1.2" height="15.0" fill="rgb(223,87,43)" rx="2" ry="2" />
<text  x="560.99" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.21%)</title><rect x="588.1" y="101" width="2.5" height="15.0" fill="rgb(248,192,19)" rx="2" ry="2" />
<text  x="591.09" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (34 samples, 3.61%)</title><rect x="215.7" y="229" width="42.6" height="15.0" fill="rgb(251,198,21)" rx="2" ry="2" />
<text  x="218.65" y="239.5" >std:..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (27 samples, 2.87%)</title><rect x="776.2" y="293" width="33.8" height="15.0" fill="rgb(224,139,22)" rx="2" ry="2" />
<text  x="779.18" y="303.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (3 samples, 0.32%)</title><rect x="130.4" y="325" width="3.7" height="15.0" fill="rgb(208,141,3)" rx="2" ry="2" />
<text  x="133.38" y="335.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.11%)</title><rect x="132.9" y="245" width="1.2" height="15.0" fill="rgb(225,10,38)" rx="2" ry="2" />
<text  x="135.89" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852fef0, (2 samples, 0.21%)</title><rect x="1139.8" y="421" width="2.5" height="15.0" fill="rgb(229,226,29)" rx="2" ry="2" />
<text  x="1142.84" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="150.4" y="293" width="1.3" height="15.0" fill="rgb(226,225,48)" rx="2" ry="2" />
<text  x="153.45" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="189.3" y="133" width="1.3" height="15.0" fill="rgb(243,162,2)" rx="2" ry="2" />
<text  x="192.32" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf88000020, (1 samples, 0.11%)</title><rect x="817.6" y="277" width="1.2" height="15.0" fill="rgb(237,36,31)" rx="2" ry="2" />
<text  x="820.57" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf84ddb950) (1 samples, 0.11%)</title><rect x="782.5" y="181" width="1.2" height="15.0" fill="rgb(217,2,38)" rx="2" ry="2" />
<text  x="785.45" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="153.0" y="309" width="20.0" height="15.0" fill="rgb(230,2,32)" rx="2" ry="2" />
<text  x="155.95" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="277.1" y="133" width="1.3" height="15.0" fill="rgb(220,12,29)" rx="2" ry="2" />
<text  x="280.10" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (14 samples, 1.49%)</title><rect x="1109.7" y="485" width="17.6" height="15.0" fill="rgb(234,78,17)" rx="2" ry="2" />
<text  x="1112.74" y="495.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (14 samples, 1.49%)</title><rect x="1109.7" y="501" width="17.6" height="15.0" fill="rgb(240,208,27)" rx="2" ry="2" />
<text  x="1112.74" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="915.4" y="421" width="1.2" height="15.0" fill="rgb(237,152,21)" rx="2" ry="2" />
<text  x="918.38" y="431.5" ></text>
</g>
<g >
<title>PageId::PageId (7 samples, 0.74%)</title><rect x="999.4" y="469" width="8.8" height="15.0" fill="rgb(242,81,1)" rx="2" ry="2" />
<text  x="1002.39" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="85.2" y="469" width="2.5" height="15.0" fill="rgb(253,127,9)" rx="2" ry="2" />
<text  x="88.24" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.21%)</title><rect x="1124.8" y="309" width="2.5" height="15.0" fill="rgb(228,138,18)" rx="2" ry="2" />
<text  x="1127.79" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.11%)</title><rect x="1147.4" y="421" width="1.2" height="15.0" fill="rgb(216,24,33)" rx="2" ry="2" />
<text  x="1150.36" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf99b21520, (1 samples, 0.11%)</title><rect x="808.8" y="197" width="1.2" height="15.0" fill="rgb(242,203,19)" rx="2" ry="2" />
<text  x="811.79" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (4 samples, 0.43%)</title><rect x="1035.8" y="437" width="5.0" height="15.0" fill="rgb(238,194,44)" rx="2" ry="2" />
<text  x="1038.76" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="964.3" y="277" width="1.2" height="15.0" fill="rgb(242,115,0)" rx="2" ry="2" />
<text  x="967.28" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="243.2" y="181" width="1.3" height="15.0" fill="rgb(214,22,47)" rx="2" ry="2" />
<text  x="246.24" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (2 samples, 0.21%)</title><rect x="1187.5" y="469" width="2.5" height="15.0" fill="rgb(254,159,54)" rx="2" ry="2" />
<text  x="1190.49" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.96%)</title><rect x="879.0" y="421" width="11.3" height="15.0" fill="rgb(239,35,7)" rx="2" ry="2" />
<text  x="882.01" y="431.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="127.9" y="229" width="1.2" height="15.0" fill="rgb(229,119,51)" rx="2" ry="2" />
<text  x="130.87" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.11%)</title><rect x="905.3" y="453" width="1.3" height="15.0" fill="rgb(222,87,7)" rx="2" ry="2" />
<text  x="908.35" y="463.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (438 samples, 46.55%)</title><rect x="89.0" y="533" width="549.2" height="15.0" fill="rgb(240,24,14)" rx="2" ry="2" />
<text  x="92.00" y="543.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="843.9" y="421" width="1.3" height="15.0" fill="rgb(238,102,40)" rx="2" ry="2" />
<text  x="846.90" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="915.4" y="453" width="1.2" height="15.0" fill="rgb(249,116,23)" rx="2" ry="2" />
<text  x="918.38" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="958.0" y="261" width="5.0" height="15.0" fill="rgb(224,209,45)" rx="2" ry="2" />
<text  x="961.01" y="271.5" ></text>
</g>
<g >
<title>PageId::~PageId (5 samples, 0.53%)</title><rect x="899.1" y="405" width="6.2" height="15.0" fill="rgb(252,48,42)" rx="2" ry="2" />
<text  x="902.08" y="415.5" ></text>
</g>
<g >
<title>IO_validate_vtable(vtable=0x7fcf9e5fa1a0 (1 samples, 0.11%)</title><rect x="850.2" y="389" width="1.2" height="15.0" fill="rgb(254,199,37)" rx="2" ry="2" />
<text  x="853.17" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef0bafab50) (1 samples, 0.11%)</title><rect x="92.8" y="341" width="1.2" height="15.0" fill="rgb(250,50,7)" rx="2" ry="2" />
<text  x="95.76" y="351.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.11%)</title><rect x="213.1" y="85" width="1.3" height="15.0" fill="rgb(207,131,8)" rx="2" ry="2" />
<text  x="216.15" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="866.5" y="309" width="1.2" height="15.0" fill="rgb(228,177,38)" rx="2" ry="2" />
<text  x="869.47" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="175.5" y="117" width="1.3" height="15.0" fill="rgb(209,148,47)" rx="2" ry="2" />
<text  x="178.53" y="127.5" ></text>
</g>
<g >
<title>std::thread::join()() (3 samples, 0.32%)</title><rect x="80.2" y="405" width="3.8" height="15.0" fill="rgb(248,216,48)" rx="2" ry="2" />
<text  x="83.22" y="415.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.11%)</title><rect x="151.7" y="309" width="1.3" height="15.0" fill="rgb(233,205,13)" rx="2" ry="2" />
<text  x="154.70" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (14 samples, 1.49%)</title><rect x="620.7" y="341" width="17.5" height="15.0" fill="rgb(247,33,47)" rx="2" ry="2" />
<text  x="623.69" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="1123.5" y="389" width="3.8" height="15.0" fill="rgb(218,42,39)" rx="2" ry="2" />
<text  x="1126.54" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.64%)</title><rect x="713.5" y="437" width="7.5" height="15.0" fill="rgb(225,169,44)" rx="2" ry="2" />
<text  x="716.49" y="447.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="638.2" y="421" width="1.3" height="15.0" fill="rgb(231,16,19)" rx="2" ry="2" />
<text  x="641.25" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (59 samples, 6.27%)</title><rect x="1035.8" y="501" width="73.9" height="15.0" fill="rgb(250,120,5)" rx="2" ry="2" />
<text  x="1038.76" y="511.5" >MultiThr..</text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.11%)</title><rect x="915.4" y="437" width="1.2" height="15.0" fill="rgb(208,90,54)" rx="2" ry="2" />
<text  x="918.38" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="1123.5" y="309" width="1.3" height="15.0" fill="rgb(235,38,14)" rx="2" ry="2" />
<text  x="1126.54" y="319.5" ></text>
</g>
<g >
<title>std::mutex::lock (10 samples, 1.06%)</title><rect x="258.3" y="165" width="12.5" height="15.0" fill="rgb(236,225,27)" rx="2" ry="2" />
<text  x="261.29" y="175.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (14 samples, 1.49%)</title><rect x="861.5" y="469" width="17.5" height="15.0" fill="rgb(233,35,22)" rx="2" ry="2" />
<text  x="864.46" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef14a91a20, (1 samples, 0.11%)</title><rect x="900.3" y="325" width="1.3" height="15.0" fill="rgb(212,105,41)" rx="2" ry="2" />
<text  x="903.33" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="654.5" y="469" width="1.3" height="15.0" fill="rgb(230,186,6)" rx="2" ry="2" />
<text  x="657.55" y="479.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (3 samples, 0.32%)</title><rect x="862.7" y="373" width="3.8" height="15.0" fill="rgb(241,94,34)" rx="2" ry="2" />
<text  x="865.71" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (17 samples, 1.81%)</title><rect x="343.6" y="117" width="21.3" height="15.0" fill="rgb(252,187,26)" rx="2" ry="2" />
<text  x="346.56" y="127.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="892.8" y="469" width="3.8" height="15.0" fill="rgb(229,127,28)" rx="2" ry="2" />
<text  x="895.81" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="316.0" y="165" width="3.7" height="15.0" fill="rgb(219,175,35)" rx="2" ry="2" />
<text  x="318.97" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (23 samples, 2.44%)</title><rect x="929.2" y="405" width="28.8" height="15.0" fill="rgb(243,31,32)" rx="2" ry="2" />
<text  x="932.17" y="415.5" >st..</text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="837.6" y="421" width="1.3" height="15.0" fill="rgb(239,33,17)" rx="2" ry="2" />
<text  x="840.63" y="431.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (3 samples, 0.32%)</title><rect x="907.9" y="405" width="3.7" height="15.0" fill="rgb(229,2,52)" rx="2" ry="2" />
<text  x="910.85" y="415.5" ></text>
</g>
<g >
<title>std::thread::join()() (6 samples, 0.64%)</title><rect x="32.6" y="405" width="7.5" height="15.0" fill="rgb(214,202,8)" rx="2" ry="2" />
<text  x="35.57" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="556.7" y="133" width="1.3" height="15.0" fill="rgb(239,96,13)" rx="2" ry="2" />
<text  x="559.74" y="143.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2060dad0) (4 samples, 0.43%)</title><rect x="1035.8" y="453" width="5.0" height="15.0" fill="rgb(236,19,34)" rx="2" ry="2" />
<text  x="1038.76" y="463.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (34 samples, 3.61%)</title><rect x="215.7" y="213" width="42.6" height="15.0" fill="rgb(236,100,27)" rx="2" ry="2" />
<text  x="218.65" y="223.5" >Mult..</text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="848.9" y="437" width="1.3" height="15.0" fill="rgb(214,212,18)" rx="2" ry="2" />
<text  x="851.92" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (3 samples, 0.32%)</title><rect x="920.4" y="357" width="3.8" height="15.0" fill="rgb(214,121,24)" rx="2" ry="2" />
<text  x="923.39" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="10.0" y="485" width="1.3" height="15.0" fill="rgb(226,32,33)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=500000, (165 samples, 17.53%)</title><rect x="966.8" y="533" width="206.9" height="15.0" fill="rgb(238,104,14)" rx="2" ry="2" />
<text  x="969.79" y="543.5" >pageRankComputationWithNumN..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.21%)</title><rect x="1173.7" y="341" width="2.5" height="15.0" fill="rgb(209,38,35)" rx="2" ry="2" />
<text  x="1176.70" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (7 samples, 0.74%)</title><rect x="958.0" y="501" width="8.8" height="15.0" fill="rgb(254,129,52)" rx="2" ry="2" />
<text  x="961.01" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=307) (1 samples, 0.11%)</title><rect x="852.7" y="469" width="1.2" height="15.0" fill="rgb(233,161,17)" rx="2" ry="2" />
<text  x="855.68" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="892.8" y="421" width="1.3" height="15.0" fill="rgb(214,54,19)" rx="2" ry="2" />
<text  x="895.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.74%)</title><rect x="958.0" y="453" width="8.8" height="15.0" fill="rgb(238,206,52)" rx="2" ry="2" />
<text  x="961.01" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (5 samples, 0.53%)</title><rect x="324.8" y="117" width="6.2" height="15.0" fill="rgb(206,199,50)" rx="2" ry="2" />
<text  x="327.75" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (1 samples, 0.11%)</title><rect x="1169.9" y="405" width="1.3" height="15.0" fill="rgb(216,93,54)" rx="2" ry="2" />
<text  x="1172.94" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (3 samples, 0.32%)</title><rect x="89.0" y="437" width="3.8" height="15.0" fill="rgb(242,126,50)" rx="2" ry="2" />
<text  x="92.00" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf7941fe70, (1 samples, 0.11%)</title><rect x="782.5" y="197" width="1.2" height="15.0" fill="rgb(247,152,30)" rx="2" ry="2" />
<text  x="785.45" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="891.6" y="373" width="1.2" height="15.0" fill="rgb(241,64,54)" rx="2" ry="2" />
<text  x="894.55" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="642.0" y="421" width="1.3" height="15.0" fill="rgb(220,42,13)" rx="2" ry="2" />
<text  x="645.01" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.43%)</title><rect x="1177.5" y="293" width="5.0" height="15.0" fill="rgb(205,182,31)" rx="2" ry="2" />
<text  x="1180.46" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (41 samples, 4.36%)</title><rect x="776.2" y="485" width="51.4" height="15.0" fill="rgb(214,150,1)" rx="2" ry="2" />
<text  x="779.18" y="495.5" >std::..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.53%)</title><rect x="595.6" y="149" width="6.3" height="15.0" fill="rgb(230,138,18)" rx="2" ry="2" />
<text  x="598.61" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.21%)</title><rect x="588.1" y="165" width="2.5" height="15.0" fill="rgb(247,118,31)" rx="2" ry="2" />
<text  x="591.09" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2222d580) (43 samples, 4.57%)</title><rect x="1050.8" y="453" width="53.9" height="15.0" fill="rgb(234,99,2)" rx="2" ry="2" />
<text  x="1053.81" y="463.5" >std::..</text>
</g>
<g >
<title>std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="1171.2" y="389" width="2.5" height="15.0" fill="rgb(245,149,38)" rx="2" ry="2" />
<text  x="1174.19" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="633.2" y="165" width="1.3" height="15.0" fill="rgb(246,210,44)" rx="2" ry="2" />
<text  x="636.23" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1123.5" y="325" width="3.8" height="15.0" fill="rgb(206,95,10)" rx="2" ry="2" />
<text  x="1126.54" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf98000020) (1 samples, 0.11%)</title><rect x="823.8" y="261" width="1.3" height="15.0" fill="rgb(211,210,43)" rx="2" ry="2" />
<text  x="826.84" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (5 samples, 0.53%)</title><rect x="830.1" y="389" width="6.3" height="15.0" fill="rgb(232,217,44)" rx="2" ry="2" />
<text  x="833.11" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="654.5" y="485" width="1.3" height="15.0" fill="rgb(239,43,44)" rx="2" ry="2" />
<text  x="657.55" y="495.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="194.3" y="149" width="1.3" height="15.0" fill="rgb(206,38,31)" rx="2" ry="2" />
<text  x="197.34" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (41 samples, 4.36%)</title><rect x="776.2" y="437" width="51.4" height="15.0" fill="rgb(252,86,7)" rx="2" ry="2" />
<text  x="779.18" y="447.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf815fd0d0, (1 samples, 0.11%)</title><rect x="786.2" y="197" width="1.3" height="15.0" fill="rgb(216,216,2)" rx="2" ry="2" />
<text  x="789.22" y="207.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (3 samples, 0.32%)</title><rect x="915.4" y="501" width="3.7" height="15.0" fill="rgb(243,226,14)" rx="2" ry="2" />
<text  x="918.38" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="654.5" y="373" width="1.3" height="15.0" fill="rgb(232,207,32)" rx="2" ry="2" />
<text  x="657.55" y="383.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="1119.8" y="357" width="1.2" height="15.0" fill="rgb(218,109,24)" rx="2" ry="2" />
<text  x="1122.78" y="367.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (12 samples, 1.28%)</title><rect x="640.8" y="517" width="15.0" height="15.0" fill="rgb(211,179,9)" rx="2" ry="2" />
<text  x="643.75" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="554.2" y="133" width="1.3" height="15.0" fill="rgb(213,101,41)" rx="2" ry="2" />
<text  x="557.23" y="143.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (89 samples, 9.46%)</title><rect x="258.3" y="341" width="111.6" height="15.0" fill="rgb(207,118,15)" rx="2" ry="2" />
<text  x="261.29" y="351.5" >std::__future..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="421" width="3.8" height="15.0" fill="rgb(223,41,15)" rx="2" ry="2" />
<text  x="1007.41" y="431.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (43 samples, 4.57%)</title><rect x="912.9" y="517" width="53.9" height="15.0" fill="rgb(220,46,32)" rx="2" ry="2" />
<text  x="915.87" y="527.5" >Singl..</text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.21%)</title><rect x="268.3" y="117" width="2.5" height="15.0" fill="rgb(219,121,54)" rx="2" ry="2" />
<text  x="271.32" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (89 samples, 9.46%)</title><rect x="258.3" y="293" width="111.6" height="15.0" fill="rgb(240,41,19)" rx="2" ry="2" />
<text  x="261.29" y="303.5" >std::__future..</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c5640) (1 samples, 0.11%)</title><rect x="153.0" y="149" width="1.2" height="15.0" fill="rgb(243,181,22)" rx="2" ry="2" />
<text  x="155.95" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (2 samples, 0.21%)</title><rect x="1187.5" y="485" width="2.5" height="15.0" fill="rgb(210,111,17)" rx="2" ry="2" />
<text  x="1190.49" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.11%)</title><rect x="644.5" y="357" width="1.3" height="15.0" fill="rgb(238,45,34)" rx="2" ry="2" />
<text  x="647.52" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.32%)</title><rect x="709.7" y="421" width="3.8" height="15.0" fill="rgb(221,172,53)" rx="2" ry="2" />
<text  x="712.72" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.21%)</title><rect x="1171.2" y="405" width="2.5" height="15.0" fill="rgb(228,34,0)" rx="2" ry="2" />
<text  x="1174.19" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c5720) (2 samples, 0.21%)</title><rect x="268.3" y="149" width="2.5" height="15.0" fill="rgb(241,94,1)" rx="2" ry="2" />
<text  x="271.32" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef207e3ce0) (1 samples, 0.11%)</title><rect x="100.3" y="341" width="1.2" height="15.0" fill="rgb(218,228,45)" rx="2" ry="2" />
<text  x="103.29" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.59%)</title><rect x="111.6" y="325" width="18.8" height="15.0" fill="rgb(224,73,43)" rx="2" ry="2" />
<text  x="114.57" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="880.3" y="293" width="1.2" height="15.0" fill="rgb(246,36,32)" rx="2" ry="2" />
<text  x="883.27" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (1 samples, 0.11%)</title><rect x="638.2" y="389" width="1.3" height="15.0" fill="rgb(220,132,10)" rx="2" ry="2" />
<text  x="641.25" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (57 samples, 6.06%)</title><rect x="549.2" y="325" width="71.5" height="15.0" fill="rgb(250,132,7)" rx="2" ry="2" />
<text  x="552.21" y="335.5" >std::fun..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="249.5" y="37" width="1.3" height="15.0" fill="rgb(252,62,34)" rx="2" ry="2" />
<text  x="252.51" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="880.3" y="341" width="1.2" height="15.0" fill="rgb(225,194,0)" rx="2" ry="2" />
<text  x="883.27" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 1.06%)</title><rect x="136.7" y="373" width="12.5" height="15.0" fill="rgb(244,194,29)" rx="2" ry="2" />
<text  x="139.65" y="383.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="193.1" y="197" width="3.7" height="15.0" fill="rgb(252,78,31)" rx="2" ry="2" />
<text  x="196.08" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (5 samples, 0.53%)</title><rect x="1176.2" y="389" width="6.3" height="15.0" fill="rgb(237,60,54)" rx="2" ry="2" />
<text  x="1179.21" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (2 samples, 0.21%)</title><rect x="551.7" y="117" width="2.5" height="15.0" fill="rgb(230,69,24)" rx="2" ry="2" />
<text  x="554.72" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="23.8" y="485" width="1.2" height="15.0" fill="rgb(240,5,33)" rx="2" ry="2" />
<text  x="26.79" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=&lt;optimized (1 samples, 0.11%)</title><rect x="724.8" y="405" width="1.2" height="15.0" fill="rgb(245,16,24)" rx="2" ry="2" />
<text  x="727.77" y="415.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2 samples, 0.21%)</title><rect x="215.7" y="181" width="2.5" height="15.0" fill="rgb(224,91,6)" rx="2" ry="2" />
<text  x="218.65" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="111.6" y="261" width="3.7" height="15.0" fill="rgb(207,46,7)" rx="2" ry="2" />
<text  x="114.57" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (13 samples, 1.38%)</title><rect x="1010.7" y="469" width="16.3" height="15.0" fill="rgb(245,203,44)" rx="2" ry="2" />
<text  x="1013.68" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="891.6" y="325" width="1.2" height="15.0" fill="rgb(208,139,10)" rx="2" ry="2" />
<text  x="894.55" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="244.5" y="181" width="1.2" height="15.0" fill="rgb(223,86,27)" rx="2" ry="2" />
<text  x="247.50" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="654.5" y="309" width="1.3" height="15.0" fill="rgb(231,6,45)" rx="2" ry="2" />
<text  x="657.55" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="586.8" y="165" width="1.3" height="15.0" fill="rgb(251,154,47)" rx="2" ry="2" />
<text  x="589.83" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (13 samples, 1.38%)</title><rect x="709.7" y="469" width="16.3" height="15.0" fill="rgb(207,163,37)" rx="2" ry="2" />
<text  x="712.72" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.32%)</title><rect x="25.0" y="501" width="3.8" height="15.0" fill="rgb(213,221,40)" rx="2" ry="2" />
<text  x="28.05" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (41 samples, 4.36%)</title><rect x="776.2" y="453" width="51.4" height="15.0" fill="rgb(241,70,32)" rx="2" ry="2" />
<text  x="779.18" y="463.5" >std::..</text>
</g>
<g >
<title>Network::addPage (5 samples, 0.53%)</title><rect x="830.1" y="501" width="6.3" height="15.0" fill="rgb(232,101,34)" rx="2" ry="2" />
<text  x="833.11" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef23b9bd68, (1 samples, 0.11%)</title><rect x="826.3" y="293" width="1.3" height="15.0" fill="rgb(215,54,21)" rx="2" ry="2" />
<text  x="829.34" y="303.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="885.3" y="325" width="1.2" height="15.0" fill="rgb(247,214,9)" rx="2" ry="2" />
<text  x="888.28" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.32%)</title><rect x="189.3" y="197" width="3.8" height="15.0" fill="rgb(206,218,23)" rx="2" ry="2" />
<text  x="192.32" y="207.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.11%)</title><rect x="10.0" y="533" width="1.3" height="15.0" fill="rgb(236,59,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="727.3" y="421" width="5.0" height="15.0" fill="rgb(224,118,48)" rx="2" ry="2" />
<text  x="730.28" y="431.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="558.0" y="117" width="1.2" height="15.0" fill="rgb(226,65,41)" rx="2" ry="2" />
<text  x="560.99" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd1852ffa0, (3 samples, 0.32%)</title><rect x="862.7" y="389" width="3.8" height="15.0" fill="rgb(214,175,44)" rx="2" ry="2" />
<text  x="865.71" y="399.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.11%)</title><rect x="822.6" y="245" width="1.2" height="15.0" fill="rgb(220,221,53)" rx="2" ry="2" />
<text  x="825.58" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (1 samples, 0.11%)</title><rect x="1185.0" y="453" width="1.2" height="15.0" fill="rgb(250,42,6)" rx="2" ry="2" />
<text  x="1187.98" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.43%)</title><rect x="590.6" y="181" width="5.0" height="15.0" fill="rgb(225,143,24)" rx="2" ry="2" />
<text  x="593.60" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.11%)</title><rect x="1128.6" y="309" width="1.2" height="15.0" fill="rgb(238,5,32)" rx="2" ry="2" />
<text  x="1131.55" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="1182.5" y="309" width="1.2" height="15.0" fill="rgb(230,141,13)" rx="2" ry="2" />
<text  x="1185.48" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.53%)</title><rect x="906.6" y="469" width="6.3" height="15.0" fill="rgb(227,73,36)" rx="2" ry="2" />
<text  x="909.60" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.11%)</title><rect x="135.4" y="341" width="1.3" height="15.0" fill="rgb(221,52,8)" rx="2" ry="2" />
<text  x="138.40" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.32%)</title><rect x="721.0" y="405" width="3.8" height="15.0" fill="rgb(254,223,33)" rx="2" ry="2" />
<text  x="724.01" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="709.7" y="437" width="3.8" height="15.0" fill="rgb(217,124,35)" rx="2" ry="2" />
<text  x="712.72" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (44 samples, 4.68%)</title><rect x="28.8" y="549" width="55.2" height="15.0" fill="rgb(251,141,13)" rx="2" ry="2" />
<text  x="31.81" y="559.5" >Multi..</text>
</g>
<g >
<title>std::vector&lt;PageId, (9 samples, 0.96%)</title><rect x="879.0" y="485" width="11.3" height="15.0" fill="rgb(236,50,32)" rx="2" ry="2" />
<text  x="882.01" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="558.0" y="133" width="1.2" height="15.0" fill="rgb(245,130,25)" rx="2" ry="2" />
<text  x="560.99" y="143.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (10 samples, 1.06%)</title><rect x="258.3" y="181" width="12.5" height="15.0" fill="rgb(224,168,28)" rx="2" ry="2" />
<text  x="261.29" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.43%)</title><rect x="919.1" y="421" width="5.1" height="15.0" fill="rgb(248,4,19)" rx="2" ry="2" />
<text  x="922.14" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="376.2" y="133" width="1.2" height="15.0" fill="rgb(219,197,24)" rx="2" ry="2" />
<text  x="379.16" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.11%)</title><rect x="87.7" y="469" width="1.3" height="15.0" fill="rgb(205,136,0)" rx="2" ry="2" />
<text  x="90.75" y="479.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (32 samples, 3.40%)</title><rect x="40.1" y="453" width="40.1" height="15.0" fill="rgb(226,28,25)" rx="2" ry="2" />
<text  x="43.10" y="463.5" >std..</text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ef247c56e8) (1 samples, 0.11%)</title><rect x="376.2" y="149" width="1.2" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" />
<text  x="379.16" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fcf9e5f8b80 (2 samples, 0.21%)</title><rect x="831.4" y="229" width="2.5" height="15.0" fill="rgb(254,145,37)" rx="2" ry="2" />
<text  x="834.36" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="842.6" y="453" width="1.3" height="15.0" fill="rgb(209,218,25)" rx="2" ry="2" />
<text  x="845.65" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf98000020, (1 samples, 0.11%)</title><rect x="823.8" y="277" width="1.3" height="15.0" fill="rgb(254,138,52)" rx="2" ry="2" />
<text  x="826.84" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.53%)</title><rect x="136.7" y="341" width="6.2" height="15.0" fill="rgb(233,1,5)" rx="2" ry="2" />
<text  x="139.65" y="351.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2222d5a8, (23 samples, 2.44%)</title><rect x="742.3" y="373" width="28.9" height="15.0" fill="rgb(224,6,0)" rx="2" ry="2" />
<text  x="745.33" y="383.5" >__..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ef20abcd38, (1 samples, 0.11%)</title><rect x="821.3" y="293" width="1.3" height="15.0" fill="rgb(225,59,13)" rx="2" ry="2" />
<text  x="824.33" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.21%)</title><rect x="190.6" y="117" width="2.5" height="15.0" fill="rgb(219,120,30)" rx="2" ry="2" />
<text  x="193.57" y="127.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef20b3db38, (6 samples, 0.64%)</title><rect x="32.6" y="421" width="7.5" height="15.0" fill="rgb(206,211,51)" rx="2" ry="2" />
<text  x="35.57" y="431.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="840.1" y="437" width="1.3" height="15.0" fill="rgb(212,48,48)" rx="2" ry="2" />
<text  x="843.14" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="1004.4" y="325" width="2.5" height="15.0" fill="rgb(211,57,17)" rx="2" ry="2" />
<text  x="1007.41" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.11%)</title><rect x="826.3" y="261" width="1.3" height="15.0" fill="rgb(219,223,4)" rx="2" ry="2" />
<text  x="829.34" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (2 samples, 0.21%)</title><rect x="213.1" y="309" width="2.6" height="15.0" fill="rgb(250,143,4)" rx="2" ry="2" />
<text  x="216.15" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.32%)</title><rect x="709.7" y="309" width="3.8" height="15.0" fill="rgb(241,199,42)" rx="2" ry="2" />
<text  x="712.72" y="319.5" ></text>
</g>
<g >
<title>std::thread::join()() (8 samples, 0.85%)</title><rect x="699.7" y="469" width="10.0" height="15.0" fill="rgb(238,9,18)" rx="2" ry="2" />
<text  x="702.69" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.21%)</title><rect x="1182.5" y="357" width="2.5" height="15.0" fill="rgb(241,123,8)" rx="2" ry="2" />
<text  x="1185.48" y="367.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (6 samples, 0.64%)</title><rect x="32.6" y="437" width="7.5" height="15.0" fill="rgb(211,145,46)" rx="2" ry="2" />
<text  x="35.57" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.21%)</title><rect x="190.6" y="165" width="2.5" height="15.0" fill="rgb(228,1,20)" rx="2" ry="2" />
<text  x="193.57" y="175.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf74000020) (1 samples, 0.11%)</title><rect x="812.6" y="261" width="1.2" height="15.0" fill="rgb(253,81,1)" rx="2" ry="2" />
<text  x="815.55" y="271.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef247c56b0) (1 samples, 0.11%)</title><rect x="215.7" y="149" width="1.2" height="15.0" fill="rgb(210,164,42)" rx="2" ry="2" />
<text  x="218.65" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (23 samples, 2.44%)</title><rect x="742.3" y="437" width="28.9" height="15.0" fill="rgb(212,217,37)" rx="2" ry="2" />
<text  x="745.33" y="447.5" >st..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="1169.9" y="437" width="1.3" height="15.0" fill="rgb(230,114,39)" rx="2" ry="2" />
<text  x="1172.94" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (4 samples, 0.43%)</title><rect x="958.0" y="357" width="5.0" height="15.0" fill="rgb(253,110,16)" rx="2" ry="2" />
<text  x="961.01" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (34 samples, 3.61%)</title><rect x="215.7" y="293" width="42.6" height="15.0" fill="rgb(234,109,37)" rx="2" ry="2" />
<text  x="218.65" y="303.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.53%)</title><rect x="648.3" y="453" width="6.2" height="15.0" fill="rgb(218,167,53)" rx="2" ry="2" />
<text  x="651.28" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="896.6" y="453" width="1.2" height="15.0" fill="rgb(220,9,40)" rx="2" ry="2" />
<text  x="899.57" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.11%)</title><rect x="637.0" y="181" width="1.2" height="15.0" fill="rgb(205,92,20)" rx="2" ry="2" />
<text  x="639.99" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (6 samples, 0.64%)</title><rect x="369.9" y="197" width="7.5" height="15.0" fill="rgb(216,170,11)" rx="2" ry="2" />
<text  x="372.89" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.70%)</title><rect x="173.0" y="309" width="20.1" height="15.0" fill="rgb(241,55,33)" rx="2" ry="2" />
<text  x="176.02" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.32%)</title><rect x="586.8" y="181" width="3.8" height="15.0" fill="rgb(250,169,8)" rx="2" ry="2" />
<text  x="589.83" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf92f66140) (1 samples, 0.11%)</title><rect x="797.5" y="181" width="1.3" height="15.0" fill="rgb(226,160,46)" rx="2" ry="2" />
<text  x="800.50" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.11%)</title><rect x="213.1" y="133" width="1.3" height="15.0" fill="rgb(233,33,9)" rx="2" ry="2" />
<text  x="216.15" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="866.5" y="389" width="1.2" height="15.0" fill="rgb(242,105,15)" rx="2" ry="2" />
<text  x="869.47" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page, (1 samples, 0.11%)</title><rect x="1185.0" y="469" width="1.2" height="15.0" fill="rgb(210,30,14)" rx="2" ry="2" />
<text  x="1187.98" y="479.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="156.7" y="117" width="1.3" height="15.0" fill="rgb(230,29,27)" rx="2" ry="2" />
<text  x="159.72" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="866.5" y="341" width="1.2" height="15.0" fill="rgb(227,74,18)" rx="2" ry="2" />
<text  x="869.47" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.70%)</title><rect x="153.0" y="277" width="20.0" height="15.0" fill="rgb(230,15,20)" rx="2" ry="2" />
<text  x="155.95" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (9 samples, 0.96%)</title><rect x="609.4" y="117" width="11.3" height="15.0" fill="rgb(230,128,0)" rx="2" ry="2" />
<text  x="612.40" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="149.2" y="341" width="1.2" height="15.0" fill="rgb(220,219,18)" rx="2" ry="2" />
<text  x="152.19" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.32%)</title><rect x="467.7" y="37" width="3.8" height="15.0" fill="rgb(239,99,4)" rx="2" ry="2" />
<text  x="470.70" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.11%)</title><rect x="1008.2" y="485" width="1.2" height="15.0" fill="rgb(218,71,33)" rx="2" ry="2" />
<text  x="1011.17" y="495.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fcf9e5f8b80 (1 samples, 0.11%)</title><rect x="1177.5" y="229" width="1.2" height="15.0" fill="rgb(238,188,0)" rx="2" ry="2" />
<text  x="1180.46" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=59) (1 samples, 0.11%)</title><rect x="857.7" y="469" width="1.2" height="15.0" fill="rgb(244,119,7)" rx="2" ry="2" />
<text  x="860.69" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (48 samples, 5.10%)</title><rect x="92.8" y="485" width="60.2" height="15.0" fill="rgb(247,1,16)" rx="2" ry="2" />
<text  x="95.76" y="495.5" >std::t..</text>
</g>
<g >
<title>Page::generateId (1 samples, 0.11%)</title><rect x="91.5" y="405" width="1.3" height="15.0" fill="rgb(239,143,27)" rx="2" ry="2" />
<text  x="94.51" y="415.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (4 samples, 0.43%)</title><rect x="153.0" y="181" width="5.0" height="15.0" fill="rgb(231,36,49)" rx="2" ry="2" />
<text  x="155.95" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ef15f1d220, (1 samples, 0.11%)</title><rect x="1177.5" y="245" width="1.2" height="15.0" fill="rgb(223,50,41)" rx="2" ry="2" />
<text  x="1180.46" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf696ea980, (1 samples, 0.11%)</title><rect x="778.7" y="197" width="1.2" height="15.0" fill="rgb(251,179,18)" rx="2" ry="2" />
<text  x="781.69" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (4 samples, 0.43%)</title><rect x="771.2" y="421" width="5.0" height="15.0" fill="rgb(216,77,3)" rx="2" ry="2" />
<text  x="774.17" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (4 samples, 0.43%)</title><rect x="130.4" y="357" width="5.0" height="15.0" fill="rgb(219,47,17)" rx="2" ry="2" />
<text  x="133.38" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1133.6" y="469" width="1.2" height="15.0" fill="rgb(205,55,29)" rx="2" ry="2" />
<text  x="1136.57" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ef2060dad0) (3 samples, 0.32%)</title><rect x="28.8" y="501" width="3.8" height="15.0" fill="rgb(223,92,29)" rx="2" ry="2" />
<text  x="31.81" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (5 samples, 0.53%)</title><rect x="872.7" y="421" width="6.3" height="15.0" fill="rgb(239,173,1)" rx="2" ry="2" />
<text  x="875.74" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.11%)</title><rect x="245.7" y="117" width="1.3" height="15.0" fill="rgb(224,63,0)" rx="2" ry="2" />
<text  x="248.75" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="1134.8" y="437" width="1.3" height="15.0" fill="rgb(213,103,31)" rx="2" ry="2" />
<text  x="1137.82" y="447.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (1 samples, 0.11%)</title><rect x="1137.3" y="501" width="1.3" height="15.0" fill="rgb(227,204,16)" rx="2" ry="2" />
<text  x="1140.33" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.53%)</title><rect x="324.8" y="133" width="6.2" height="15.0" fill="rgb(220,189,23)" rx="2" ry="2" />
<text  x="327.75" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (3 samples, 0.32%)</title><rect x="1004.4" y="341" width="3.8" height="15.0" fill="rgb(253,34,27)" rx="2" ry="2" />
<text  x="1007.41" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (128 samples, 13.60%)</title><rect x="966.8" y="517" width="160.5" height="15.0" fill="rgb(234,163,6)" rx="2" ry="2" />
<text  x="969.79" y="527.5" >MultiThreadedPageRan..</text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65536) (1 samples, 0.11%)</title><rect x="890.3" y="389" width="1.3" height="15.0" fill="rgb(239,159,16)" rx="2" ry="2" />
<text  x="893.30" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="272.1" y="117" width="1.2" height="15.0" fill="rgb(233,126,45)" rx="2" ry="2" />
<text  x="275.08" y="127.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (2 samples, 0.21%)</title><rect x="996.9" y="453" width="2.5" height="15.0" fill="rgb(231,11,27)" rx="2" ry="2" />
<text  x="999.89" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf9e5f8b80 (5 samples, 0.53%)</title><rect x="1116.0" y="373" width="6.3" height="15.0" fill="rgb(214,8,26)" rx="2" ry="2" />
<text  x="1119.01" y="383.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.11%)</title><rect x="1128.6" y="341" width="1.2" height="15.0" fill="rgb(218,97,31)" rx="2" ry="2" />
<text  x="1131.55" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.32%)</title><rect x="25.0" y="517" width="3.8" height="15.0" fill="rgb(207,159,46)" rx="2" ry="2" />
<text  x="28.05" y="527.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (14 samples, 1.49%)</title><rect x="620.7" y="277" width="17.5" height="15.0" fill="rgb(219,44,22)" rx="2" ry="2" />
<text  x="623.69" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (8 samples, 0.85%)</title><rect x="732.3" y="421" width="10.0" height="15.0" fill="rgb(251,13,26)" rx="2" ry="2" />
<text  x="735.30" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.11%)</title><rect x="642.0" y="389" width="1.3" height="15.0" fill="rgb(217,227,30)" rx="2" ry="2" />
<text  x="645.01" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf90662d60, (1 samples, 0.11%)</title><rect x="798.8" y="197" width="1.2" height="15.0" fill="rgb(249,35,11)" rx="2" ry="2" />
<text  x="801.76" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="218.2" y="133" width="1.2" height="15.0" fill="rgb(245,63,33)" rx="2" ry="2" />
<text  x="221.16" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ef247c5640) (1 samples, 0.11%)</title><rect x="153.0" y="133" width="1.2" height="15.0" fill="rgb(210,92,33)" rx="2" ry="2" />
<text  x="155.95" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (19 samples, 2.02%)</title><rect x="343.6" y="165" width="23.8" height="15.0" fill="rgb(219,189,42)" rx="2" ry="2" />
<text  x="346.56" y="175.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.11%)</title><rect x="135.4" y="261" width="1.3" height="15.0" fill="rgb(243,129,44)" rx="2" ry="2" />
<text  x="138.40" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.32%)</title><rect x="721.0" y="389" width="3.8" height="15.0" fill="rgb(240,1,15)" rx="2" ry="2" />
<text  x="724.01" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="84.0" y="485" width="1.2" height="15.0" fill="rgb(235,18,46)" rx="2" ry="2" />
<text  x="86.99" y="495.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="842.6" y="405" width="1.3" height="15.0" fill="rgb(242,92,37)" rx="2" ry="2" />
<text  x="845.65" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="319.7" y="133" width="3.8" height="15.0" fill="rgb(254,206,12)" rx="2" ry="2" />
<text  x="322.73" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (15 samples, 1.59%)</title><rect x="111.6" y="373" width="18.8" height="15.0" fill="rgb(224,58,15)" rx="2" ry="2" />
<text  x="114.57" y="383.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;PageId*, (1 samples, 0.11%)</title><rect x="135.4" y="325" width="1.3" height="15.0" fill="rgb(230,215,20)" rx="2" ry="2" />
<text  x="138.40" y="335.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.11%)</title><rect x="1180.0" y="229" width="1.2" height="15.0" fill="rgb(218,180,54)" rx="2" ry="2" />
<text  x="1182.97" y="239.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7ffd1852fd30 (1 samples, 0.11%)</title><rect x="848.9" y="421" width="1.3" height="15.0" fill="rgb(227,169,52)" rx="2" ry="2" />
<text  x="851.92" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (50 samples, 5.31%)</title><rect x="377.4" y="197" width="62.7" height="15.0" fill="rgb(254,147,38)" rx="2" ry="2" />
<text  x="380.42" y="207.5" >MultiT..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf6c000020) (1 samples, 0.11%)</title><rect x="811.3" y="261" width="1.3" height="15.0" fill="rgb(243,39,47)" rx="2" ry="2" />
<text  x="814.30" y="271.5" ></text>
</g>
<g >
<title>PageId::operator== (3 samples, 0.32%)</title><rect x="920.4" y="373" width="3.8" height="15.0" fill="rgb(211,17,50)" rx="2" ry="2" />
<text  x="923.39" y="383.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (22 samples, 2.34%)</title><rect x="559.2" y="197" width="27.6" height="15.0" fill="rgb(243,114,39)" rx="2" ry="2" />
<text  x="562.25" y="207.5" >M..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (1 samples, 0.11%)</title><rect x="726.0" y="437" width="1.3" height="15.0" fill="rgb(252,144,46)" rx="2" ry="2" />
<text  x="729.03" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.21%)</title><rect x="1182.5" y="373" width="2.5" height="15.0" fill="rgb(250,99,53)" rx="2" ry="2" />
<text  x="1185.48" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.21%)</title><rect x="643.3" y="405" width="2.5" height="15.0" fill="rgb(234,128,25)" rx="2" ry="2" />
<text  x="646.26" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="892.8" y="389" width="1.3" height="15.0" fill="rgb(209,196,44)" rx="2" ry="2" />
<text  x="895.81" y="399.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (4 samples, 0.43%)</title><rect x="1040.8" y="389" width="5.0" height="15.0" fill="rgb(226,14,28)" rx="2" ry="2" />
<text  x="1043.78" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="441.4" y="165" width="1.2" height="15.0" fill="rgb(216,105,24)" rx="2" ry="2" />
<text  x="444.37" y="175.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (4 samples, 0.43%)</title><rect x="771.2" y="405" width="5.0" height="15.0" fill="rgb(241,139,16)" rx="2" ry="2" />
<text  x="774.17" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="216.9" y="117" width="1.3" height="15.0" fill="rgb(251,125,53)" rx="2" ry="2" />
<text  x="219.91" y="127.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="556.7" y="117" width="1.3" height="15.0" fill="rgb(232,144,39)" rx="2" ry="2" />
<text  x="559.74" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.59%)</title><rect x="111.6" y="309" width="18.8" height="15.0" fill="rgb(239,177,12)" rx="2" ry="2" />
<text  x="114.57" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="405" width="1.2" height="15.0" fill="rgb(216,207,54)" rx="2" ry="2" />
<text  x="864.46" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="862.7" y="421" width="3.8" height="15.0" fill="rgb(220,60,38)" rx="2" ry="2" />
<text  x="865.71" y="431.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (3 samples, 0.32%)</title><rect x="28.8" y="453" width="3.8" height="15.0" fill="rgb(250,138,17)" rx="2" ry="2" />
<text  x="31.81" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.11%)</title><rect x="861.5" y="341" width="1.2" height="15.0" fill="rgb(208,160,41)" rx="2" ry="2" />
<text  x="864.46" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="869.0" y="357" width="1.2" height="15.0" fill="rgb(231,118,8)" rx="2" ry="2" />
<text  x="871.98" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.11%)</title><rect x="323.5" y="181" width="1.3" height="15.0" fill="rgb(230,214,29)" rx="2" ry="2" />
<text  x="326.50" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.21%)</title><rect x="916.6" y="357" width="2.5" height="15.0" fill="rgb(218,25,33)" rx="2" ry="2" />
<text  x="919.63" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="1138.6" y="421" width="1.2" height="15.0" fill="rgb(208,26,16)" rx="2" ry="2" />
<text  x="1141.59" y="431.5" ></text>
</g>
<g >
<title>vsnprintf(__ap=0x7ffd1852fd50, (1 samples, 0.11%)</title><rect x="843.9" y="437" width="1.3" height="15.0" fill="rgb(226,50,30)" rx="2" ry="2" />
<text  x="846.90" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.32%)</title><rect x="1004.4" y="437" width="3.8" height="15.0" fill="rgb(222,133,26)" rx="2" ry="2" />
<text  x="1007.41" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.43%)</title><rect x="721.0" y="453" width="5.0" height="15.0" fill="rgb(209,185,12)" rx="2" ry="2" />
<text  x="724.01" y="463.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ef2060dae8, (16 samples, 1.70%)</title><rect x="193.1" y="357" width="20.0" height="15.0" fill="rgb(215,32,19)" rx="2" ry="2" />
<text  x="196.08" y="367.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (19 samples, 2.02%)</title><rect x="1146.1" y="501" width="23.8" height="15.0" fill="rgb(244,6,6)" rx="2" ry="2" />
<text  x="1149.11" y="511.5" >S..</text>
</g>
<g >
<title>Network::addPage (3 samples, 0.32%)</title><rect x="1128.6" y="501" width="3.7" height="15.0" fill="rgb(205,93,9)" rx="2" ry="2" />
<text  x="1131.55" y="511.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.11%)</title><rect x="129.1" y="229" width="1.3" height="15.0" fill="rgb(221,93,7)" rx="2" ry="2" />
<text  x="132.13" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fcf98000020) (1 samples, 0.11%)</title><rect x="818.8" y="261" width="1.3" height="15.0" fill="rgb(211,183,20)" rx="2" ry="2" />
<text  x="821.82" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fcf973da0f0, (1 samples, 0.11%)</title><rect x="803.8" y="197" width="1.2" height="15.0" fill="rgb(232,90,41)" rx="2" ry="2" />
<text  x="806.77" y="207.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (3 samples, 0.32%)</title><rect x="85.2" y="549" width="3.8" height="15.0" fill="rgb(218,36,18)" rx="2" ry="2" />
<text  x="88.24" y="559.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.11%)</title><rect x="871.5" y="341" width="1.2" height="15.0" fill="rgb(220,18,23)" rx="2" ry="2" />
<text  x="874.49" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fcf91a8aec0) (1 samples, 0.11%)</title><rect x="793.7" y="181" width="1.3" height="15.0" fill="rgb(243,95,19)" rx="2" ry="2" />
<text  x="796.74" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (3 samples, 0.32%)</title><rect x="963.0" y="325" width="3.8" height="15.0" fill="rgb(213,196,16)" rx="2" ry="2" />
<text  x="966.03" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (9 samples, 0.96%)</title><rect x="609.4" y="149" width="11.3" height="15.0" fill="rgb(218,183,35)" rx="2" ry="2" />
<text  x="612.40" y="159.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(decr=1, (1 samples, 0.11%)</title><rect x="374.9" y="117" width="1.3" height="15.0" fill="rgb(228,162,37)" rx="2" ry="2" />
<text  x="377.91" y="127.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7ffd1852fbb0, (1 samples, 0.11%)</title><rect x="845.2" y="405" width="1.2" height="15.0" fill="rgb(206,17,14)" rx="2" ry="2" />
<text  x="848.15" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (16 samples, 1.70%)</title><rect x="193.1" y="341" width="20.0" height="15.0" fill="rgb(219,136,7)" rx="2" ry="2" />
<text  x="196.08" y="351.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (1 samples, 0.11%)</title><rect x="91.5" y="389" width="1.3" height="15.0" fill="rgb(230,98,28)" rx="2" ry="2" />
<text  x="94.51" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd1852feb0, (3 samples, 0.32%)</title><rect x="1023.2" y="421" width="3.8" height="15.0" fill="rgb(225,226,35)" rx="2" ry="2" />
<text  x="1026.22" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (2 samples, 0.21%)</title><rect x="213.1" y="277" width="2.6" height="15.0" fill="rgb(225,121,41)" rx="2" ry="2" />
<text  x="216.15" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="111.6" y="197" width="2.5" height="15.0" fill="rgb(240,46,19)" rx="2" ry="2" />
<text  x="114.57" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=2) (1 samples, 0.11%)</title><rect x="848.9" y="469" width="1.3" height="15.0" fill="rgb(231,210,0)" rx="2" ry="2" />
<text  x="851.92" y="479.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ef0bb1c840) (2 samples, 0.21%)</title><rect x="549.2" y="149" width="2.5" height="15.0" fill="rgb(227,221,43)" rx="2" ry="2" />
<text  x="552.21" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (23 samples, 2.44%)</title><rect x="742.3" y="421" width="28.9" height="15.0" fill="rgb(232,85,51)" rx="2" ry="2" />
<text  x="745.33" y="431.5" >st..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (9 samples, 0.96%)</title><rect x="643.3" y="469" width="11.2" height="15.0" fill="rgb(248,123,45)" rx="2" ry="2" />
<text  x="646.26" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.21%)</title><rect x="1173.7" y="389" width="2.5" height="15.0" fill="rgb(247,110,8)" rx="2" ry="2" />
<text  x="1176.70" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.11%)</title><rect x="635.7" y="165" width="1.3" height="15.0" fill="rgb(207,161,37)" rx="2" ry="2" />
<text  x="638.74" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.11%)</title><rect x="170.5" y="165" width="1.3" height="15.0" fill="rgb(240,61,8)" rx="2" ry="2" />
<text  x="173.51" y="175.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (59 samples, 6.27%)</title><rect x="1035.8" y="485" width="73.9" height="15.0" fill="rgb(233,44,1)" rx="2" ry="2" />
<text  x="1038.76" y="495.5" >std::fut..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (3 samples, 0.32%)</title><rect x="28.8" y="469" width="3.8" height="15.0" fill="rgb(236,78,18)" rx="2" ry="2" />
<text  x="31.81" y="479.5" ></text>
</g>
</g>
</svg>
