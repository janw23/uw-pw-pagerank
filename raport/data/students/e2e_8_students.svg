<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="970.5" y="213" width="8.2" height="15.0" fill="rgb(221,86,46)" rx="2" ry="2" />
<text  x="973.47" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f3958797ef0, (1 samples, 0.23%)</title><rect x="1184.5" y="165" width="2.8" height="15.0" fill="rgb(206,154,34)" rx="2" ry="2" />
<text  x="1187.51" y="175.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (3 samples, 0.70%)</title><rect x="1170.8" y="373" width="8.2" height="15.0" fill="rgb(237,15,23)" rx="2" ry="2" />
<text  x="1173.79" y="383.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="962.2" y="181" width="8.3" height="15.0" fill="rgb(212,1,35)" rx="2" ry="2" />
<text  x="965.23" y="191.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3958000b90) (5 samples, 1.16%)</title><rect x="904.6" y="293" width="13.7" height="15.0" fill="rgb(211,229,5)" rx="2" ry="2" />
<text  x="907.60" y="303.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3948000b90) (4 samples, 0.93%)</title><rect x="836.0" y="325" width="11.0" height="15.0" fill="rgb(210,182,12)" rx="2" ry="2" />
<text  x="839.00" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="469" width="2.8" height="15.0" fill="rgb(212,6,38)" rx="2" ry="2" />
<text  x="1028.35" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f39506a83e0, (1 samples, 0.23%)</title><rect x="1179.0" y="165" width="2.8" height="15.0" fill="rgb(219,221,7)" rx="2" ry="2" />
<text  x="1182.02" y="175.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1011.6" y="245" width="8.3" height="15.0" fill="rgb(215,148,51)" rx="2" ry="2" />
<text  x="1014.63" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="1179.0" y="229" width="8.3" height="15.0" fill="rgb(229,95,39)" rx="2" ry="2" />
<text  x="1182.02" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="954.0" y="197" width="8.2" height="15.0" fill="rgb(249,18,18)" rx="2" ry="2" />
<text  x="957.00" y="207.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="970.5" y="181" width="8.2" height="15.0" fill="rgb(213,122,42)" rx="2" ry="2" />
<text  x="973.47" y="191.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f3940000b90) (2 samples, 0.47%)</title><rect x="805.8" y="309" width="5.5" height="15.0" fill="rgb(210,40,27)" rx="2" ry="2" />
<text  x="808.81" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.70%)</title><rect x="995.2" y="69" width="8.2" height="15.0" fill="rgb(238,161,54)" rx="2" ry="2" />
<text  x="998.16" y="79.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3944000b90) (7 samples, 1.63%)</title><rect x="355.8" y="325" width="19.2" height="15.0" fill="rgb(241,28,8)" rx="2" ry="2" />
<text  x="358.77" y="335.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1170.8" y="453" width="8.2" height="15.0" fill="rgb(216,120,50)" rx="2" ry="2" />
<text  x="1173.79" y="463.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (6 samples, 1.40%)</title><rect x="855.2" y="277" width="16.5" height="15.0" fill="rgb(223,216,42)" rx="2" ry="2" />
<text  x="858.21" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.70%)</title><rect x="962.2" y="133" width="8.3" height="15.0" fill="rgb(243,11,31)" rx="2" ry="2" />
<text  x="965.23" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f395c000020, (2 samples, 0.47%)</title><rect x="918.3" y="277" width="5.5" height="15.0" fill="rgb(207,105,32)" rx="2" ry="2" />
<text  x="921.33" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.47%)</title><rect x="956.7" y="101" width="5.5" height="15.0" fill="rgb(225,22,49)" rx="2" ry="2" />
<text  x="959.74" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="970.5" y="149" width="8.2" height="15.0" fill="rgb(232,204,38)" rx="2" ry="2" />
<text  x="973.47" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_read (14 samples, 3.26%)</title><rect x="276.2" y="245" width="38.4" height="15.0" fill="rgb(249,223,45)" rx="2" ry="2" />
<text  x="279.19" y="255.5" >__G..</text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.70%)</title><rect x="962.2" y="117" width="8.3" height="15.0" fill="rgb(242,49,6)" rx="2" ry="2" />
<text  x="965.23" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (5 samples, 1.16%)</title><rect x="937.5" y="309" width="13.8" height="15.0" fill="rgb(245,135,30)" rx="2" ry="2" />
<text  x="940.53" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.93%)</title><rect x="937.5" y="277" width="11.0" height="15.0" fill="rgb(236,7,21)" rx="2" ry="2" />
<text  x="940.53" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.70%)</title><rect x="970.5" y="69" width="8.2" height="15.0" fill="rgb(235,182,22)" rx="2" ry="2" />
<text  x="973.47" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="373" width="2.7" height="15.0" fill="rgb(206,144,7)" rx="2" ry="2" />
<text  x="1025.60" y="383.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.23%)</title><rect x="929.3" y="341" width="2.7" height="15.0" fill="rgb(241,133,29)" rx="2" ry="2" />
<text  x="932.30" y="351.5" ></text>
</g>
<g >
<title>main(argc=&lt;optimized (61 samples, 14.19%)</title><rect x="1019.9" y="517" width="167.4" height="15.0" fill="rgb(244,220,42)" rx="2" ry="2" />
<text  x="1022.86" y="527.5" >main(argc=&lt;optimized</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.47%)</title><rect x="956.7" y="133" width="5.5" height="15.0" fill="rgb(213,93,17)" rx="2" ry="2" />
<text  x="959.74" y="143.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="962.2" y="309" width="8.3" height="15.0" fill="rgb(251,178,22)" rx="2" ry="2" />
<text  x="965.23" y="319.5" ></text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3940000b90, (19 samples, 4.42%)</title><rect x="73.1" y="325" width="52.2" height="15.0" fill="rgb(222,164,53)" rx="2" ry="2" />
<text  x="76.12" y="335.5" >__GI_..</text>
</g>
<g >
<title>_int_free (1 samples, 0.23%)</title><rect x="1187.3" y="213" width="2.7" height="15.0" fill="rgb(226,58,28)" rx="2" ry="2" />
<text  x="1190.26" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f394834afc0) (1 samples, 0.23%)</title><rect x="1179.0" y="149" width="2.8" height="15.0" fill="rgb(228,117,53)" rx="2" ry="2" />
<text  x="1182.02" y="159.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (336 samples, 78.14%)</title><rect x="10.0" y="421" width="922.0" height="15.0" fill="rgb(230,2,23)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >std::__invoke&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (2 samples, 0.47%)</title><rect x="956.7" y="165" width="5.5" height="15.0" fill="rgb(219,228,41)" rx="2" ry="2" />
<text  x="959.74" y="175.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3948000b90) (4 samples, 0.93%)</title><rect x="402.4" y="325" width="11.0" height="15.0" fill="rgb(246,141,0)" rx="2" ry="2" />
<text  x="405.42" y="335.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (24 samples, 5.58%)</title><rect x="954.0" y="341" width="65.9" height="15.0" fill="rgb(234,170,38)" rx="2" ry="2" />
<text  x="957.00" y="351.5" >__gthre..</text>
</g>
<g >
<title>_int_free(av=0x7f3948000020, (2 samples, 0.47%)</title><rect x="836.0" y="277" width="5.5" height="15.0" fill="rgb(236,85,45)" rx="2" ry="2" />
<text  x="839.00" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="962.2" y="245" width="8.3" height="15.0" fill="rgb(243,106,16)" rx="2" ry="2" />
<text  x="965.23" y="255.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f394c000b90, (18 samples, 4.19%)</title><rect x="479.3" y="325" width="49.4" height="15.0" fill="rgb(210,59,47)" rx="2" ry="2" />
<text  x="482.26" y="335.5" >_IO_..</text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (1 samples, 0.23%)</title><rect x="833.3" y="309" width="2.7" height="15.0" fill="rgb(239,58,39)" rx="2" ry="2" />
<text  x="836.26" y="319.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f394c000b90, (3 samples, 0.70%)</title><rect x="847.0" y="293" width="8.2" height="15.0" fill="rgb(251,143,51)" rx="2" ry="2" />
<text  x="849.98" y="303.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.23%)</title><rect x="932.0" y="341" width="2.8" height="15.0" fill="rgb(246,147,37)" rx="2" ry="2" />
<text  x="935.05" y="351.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f395c000b90, (14 samples, 3.26%)</title><rect x="276.2" y="309" width="38.4" height="15.0" fill="rgb(253,5,17)" rx="2" ry="2" />
<text  x="279.19" y="319.5" >__G..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.23%)</title><rect x="934.8" y="245" width="2.7" height="15.0" fill="rgb(237,144,47)" rx="2" ry="2" />
<text  x="937.79" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="986.9" y="133" width="2.8" height="15.0" fill="rgb(237,28,24)" rx="2" ry="2" />
<text  x="989.93" y="143.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3958000b90, (4 samples, 0.93%)</title><rect x="196.6" y="309" width="11.0" height="15.0" fill="rgb(246,138,24)" rx="2" ry="2" />
<text  x="199.60" y="319.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.23%)</title><rect x="932.0" y="357" width="2.8" height="15.0" fill="rgb(208,202,20)" rx="2" ry="2" />
<text  x="935.05" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_read (4 samples, 0.93%)</title><rect x="196.6" y="261" width="11.0" height="15.0" fill="rgb(235,190,9)" rx="2" ry="2" />
<text  x="199.60" y="271.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3948000b20 (27 samples, 6.28%)</title><rect x="402.4" y="341" width="74.1" height="15.0" fill="rgb(244,216,25)" rx="2" ry="2" />
<text  x="405.42" y="351.5" >_IO_new_..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (3 samples, 0.70%)</title><rect x="1170.8" y="357" width="8.2" height="15.0" fill="rgb(251,185,44)" rx="2" ry="2" />
<text  x="1173.79" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.23%)</title><rect x="1011.6" y="85" width="2.8" height="15.0" fill="rgb(236,143,2)" rx="2" ry="2" />
<text  x="1014.63" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="978.7" y="149" width="8.2" height="15.0" fill="rgb(216,148,10)" rx="2" ry="2" />
<text  x="981.70" y="159.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="827.8" y="261" width="5.5" height="15.0" fill="rgb(242,83,4)" rx="2" ry="2" />
<text  x="830.77" y="271.5" ></text>
</g>
<g >
<title>__libc_fork() (1 samples, 0.23%)</title><rect x="654.9" y="309" width="2.7" height="15.0" fill="rgb(236,148,20)" rx="2" ry="2" />
<text  x="657.88" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (24 samples, 5.58%)</title><rect x="954.0" y="373" width="65.9" height="15.0" fill="rgb(238,195,5)" rx="2" ry="2" />
<text  x="957.00" y="383.5" >std::__..</text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="954.0" y="261" width="8.2" height="15.0" fill="rgb(227,33,10)" rx="2" ry="2" />
<text  x="957.00" y="271.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1170.8" y="437" width="8.2" height="15.0" fill="rgb(239,43,5)" rx="2" ry="2" />
<text  x="1173.79" y="447.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3962236cf0 (19 samples, 4.42%)</title><rect x="73.1" y="341" width="52.2" height="15.0" fill="rgb(216,117,48)" rx="2" ry="2" />
<text  x="76.12" y="351.5" >_IO_f..</text>
</g>
<g >
<title>__lll_lock_wait_private (3 samples, 0.70%)</title><rect x="314.6" y="293" width="8.2" height="15.0" fill="rgb(250,189,31)" rx="2" ry="2" />
<text  x="317.60" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="882.7" y="261" width="5.4" height="15.0" fill="rgb(237,11,44)" rx="2" ry="2" />
<text  x="885.65" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (6 samples, 1.40%)</title><rect x="855.2" y="309" width="16.5" height="15.0" fill="rgb(221,13,48)" rx="2" ry="2" />
<text  x="858.21" y="319.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3958000b20 (31 samples, 7.21%)</title><rect x="657.6" y="341" width="85.1" height="15.0" fill="rgb(233,182,38)" rx="2" ry="2" />
<text  x="660.63" y="351.5" >_IO_new_po..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="1179.0" y="197" width="8.3" height="15.0" fill="rgb(220,174,3)" rx="2" ry="2" />
<text  x="1182.02" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.23%)</title><rect x="1008.9" y="69" width="2.7" height="15.0" fill="rgb(233,27,51)" rx="2" ry="2" />
<text  x="1011.88" y="79.5" ></text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3940000b90) (3 samples, 0.70%)</title><rect x="314.6" y="309" width="8.2" height="15.0" fill="rgb(221,183,23)" rx="2" ry="2" />
<text  x="317.60" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (6 samples, 1.40%)</title><rect x="811.3" y="277" width="16.5" height="15.0" fill="rgb(224,211,18)" rx="2" ry="2" />
<text  x="814.30" y="287.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fea88, (3 samples, 0.70%)</title><rect x="978.7" y="325" width="8.2" height="15.0" fill="rgb(217,206,42)" rx="2" ry="2" />
<text  x="981.70" y="335.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fe8f8, (3 samples, 0.70%)</title><rect x="962.2" y="325" width="8.3" height="15.0" fill="rgb(218,134,2)" rx="2" ry="2" />
<text  x="965.23" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.47%)</title><rect x="981.4" y="101" width="5.5" height="15.0" fill="rgb(207,177,33)" rx="2" ry="2" />
<text  x="984.44" y="111.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (11 samples, 2.56%)</title><rect x="545.1" y="293" width="30.2" height="15.0" fill="rgb(214,157,6)" rx="2" ry="2" />
<text  x="548.12" y="303.5" >__..</text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="954.0" y="213" width="8.2" height="15.0" fill="rgb(244,171,23)" rx="2" ry="2" />
<text  x="957.00" y="223.5" ></text>
</g>
<g >
<title>__libc_fork (3 samples, 0.70%)</title><rect x="646.7" y="309" width="8.2" height="15.0" fill="rgb(216,163,34)" rx="2" ry="2" />
<text  x="649.65" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="995.2" y="293" width="8.2" height="15.0" fill="rgb(234,79,7)" rx="2" ry="2" />
<text  x="998.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (6 samples, 1.40%)</title><rect x="937.5" y="357" width="16.5" height="15.0" fill="rgb(240,28,29)" rx="2" ry="2" />
<text  x="940.53" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="954.0" y="277" width="8.2" height="15.0" fill="rgb(237,218,26)" rx="2" ry="2" />
<text  x="957.00" y="287.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f3948000b90) (2 samples, 0.47%)</title><rect x="836.0" y="309" width="5.5" height="15.0" fill="rgb(211,179,6)" rx="2" ry="2" />
<text  x="839.00" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="929.3" y="293" width="2.7" height="15.0" fill="rgb(254,169,4)" rx="2" ry="2" />
<text  x="932.30" y="303.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3944000b90, (10 samples, 2.33%)</title><rect x="375.0" y="325" width="27.4" height="15.0" fill="rgb(232,81,43)" rx="2" ry="2" />
<text  x="377.98" y="335.5" >_..</text>
</g>
<g >
<title>arch_fork (8 samples, 1.86%)</title><rect x="575.3" y="293" width="22.0" height="15.0" fill="rgb(241,129,45)" rx="2" ry="2" />
<text  x="578.30" y="303.5" >a..</text>
</g>
<g >
<title>std::thread::join()() (3 samples, 0.70%)</title><rect x="1170.8" y="325" width="8.2" height="15.0" fill="rgb(225,204,8)" rx="2" ry="2" />
<text  x="1173.79" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.23%)</title><rect x="1168.0" y="405" width="2.8" height="15.0" fill="rgb(220,216,22)" rx="2" ry="2" />
<text  x="1171.05" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (8 samples, 1.86%)</title><rect x="380.5" y="277" width="21.9" height="15.0" fill="rgb(220,176,9)" rx="2" ry="2" />
<text  x="383.47" y="287.5" >_..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.47%)</title><rect x="1014.4" y="85" width="5.5" height="15.0" fill="rgb(214,126,22)" rx="2" ry="2" />
<text  x="1017.37" y="95.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3940000b90, (19 samples, 4.42%)</title><rect x="73.1" y="309" width="52.2" height="15.0" fill="rgb(248,212,39)" rx="2" ry="2" />
<text  x="76.12" y="319.5" >__GI_..</text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3950000b20 (25 samples, 5.81%)</title><rect x="528.7" y="341" width="68.6" height="15.0" fill="rgb(240,155,48)" rx="2" ry="2" />
<text  x="531.65" y="351.5" >_IO_new..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (24 samples, 5.58%)</title><rect x="954.0" y="405" width="65.9" height="15.0" fill="rgb(254,179,4)" rx="2" ry="2" />
<text  x="957.00" y="415.5" >std::__..</text>
</g>
<g >
<title>mprotect() (1 samples, 0.23%)</title><rect x="940.3" y="197" width="2.7" height="15.0" fill="rgb(214,56,50)" rx="2" ry="2" />
<text  x="943.28" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.70%)</title><rect x="962.2" y="69" width="8.3" height="15.0" fill="rgb(219,82,37)" rx="2" ry="2" />
<text  x="965.23" y="79.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.47%)</title><rect x="989.7" y="117" width="5.5" height="15.0" fill="rgb(243,122,20)" rx="2" ry="2" />
<text  x="992.67" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="995.2" y="309" width="8.2" height="15.0" fill="rgb(250,177,3)" rx="2" ry="2" />
<text  x="998.16" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="978.7" y="213" width="8.2" height="15.0" fill="rgb(245,12,34)" rx="2" ry="2" />
<text  x="981.70" y="223.5" ></text>
</g>
<g >
<title>arch_fork (2 samples, 0.47%)</title><rect x="523.2" y="293" width="5.5" height="15.0" fill="rgb(215,21,38)" rx="2" ry="2" />
<text  x="526.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.23%)</title><rect x="1187.3" y="389" width="2.7" height="15.0" fill="rgb(239,181,25)" rx="2" ry="2" />
<text  x="1190.26" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="978.7" y="117" width="2.7" height="15.0" fill="rgb(237,229,38)" rx="2" ry="2" />
<text  x="981.70" y="127.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.47%)</title><rect x="1014.4" y="69" width="5.5" height="15.0" fill="rgb(244,39,51)" rx="2" ry="2" />
<text  x="1017.37" y="79.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="1003.4" y="293" width="8.2" height="15.0" fill="rgb(248,40,3)" rx="2" ry="2" />
<text  x="1006.40" y="303.5" ></text>
</g>
<g >
<title>__libc_fork (7 samples, 1.63%)</title><rect x="457.3" y="309" width="19.2" height="15.0" fill="rgb(252,4,6)" rx="2" ry="2" />
<text  x="460.30" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="899.1" y="261" width="5.5" height="15.0" fill="rgb(240,217,43)" rx="2" ry="2" />
<text  x="902.12" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="995.2" y="101" width="8.2" height="15.0" fill="rgb(218,186,54)" rx="2" ry="2" />
<text  x="998.16" y="111.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="954.0" y="309" width="8.2" height="15.0" fill="rgb(209,185,34)" rx="2" ry="2" />
<text  x="957.00" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="1011.6" y="309" width="8.3" height="15.0" fill="rgb(251,70,17)" rx="2" ry="2" />
<text  x="1014.63" y="319.5" ></text>
</g>
<g >
<title>__libc_fork() (15 samples, 3.49%)</title><rect x="668.6" y="309" width="41.2" height="15.0" fill="rgb(253,133,10)" rx="2" ry="2" />
<text  x="671.60" y="319.5" >__l..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (50 samples, 11.63%)</title><rect x="1050.0" y="485" width="137.3" height="15.0" fill="rgb(212,56,23)" rx="2" ry="2" />
<text  x="1053.05" y="495.5" >MultiThreadedPage..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55b6663fe840) (3 samples, 0.70%)</title><rect x="1170.8" y="421" width="8.2" height="15.0" fill="rgb(245,157,38)" rx="2" ry="2" />
<text  x="1173.79" y="431.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.23%)</title><rect x="122.5" y="229" width="2.8" height="15.0" fill="rgb(246,186,52)" rx="2" ry="2" />
<text  x="125.51" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (8 samples, 1.86%)</title><rect x="932.0" y="453" width="22.0" height="15.0" fill="rgb(253,137,50)" rx="2" ry="2" />
<text  x="935.05" y="463.5" >s..</text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3958000b90) (4 samples, 0.93%)</title><rect x="657.6" y="325" width="11.0" height="15.0" fill="rgb(241,73,12)" rx="2" ry="2" />
<text  x="660.63" y="335.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="995.2" y="213" width="8.2" height="15.0" fill="rgb(226,223,12)" rx="2" ry="2" />
<text  x="998.16" y="223.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="962.2" y="261" width="8.3" height="15.0" fill="rgb(209,175,35)" rx="2" ry="2" />
<text  x="965.23" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(this=&lt;optimized (334 samples, 77.67%)</title><rect x="12.7" y="357" width="916.6" height="15.0" fill="rgb(223,117,23)" rx="2" ry="2" />
<text  x="15.74" y="367.5" >Sha256IdGenerator::generateId(this=&lt;optimized</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.47%)</title><rect x="981.4" y="69" width="5.5" height="15.0" fill="rgb(210,12,16)" rx="2" ry="2" />
<text  x="984.44" y="79.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=64, (1 samples, 0.23%)</title><rect x="1022.6" y="357" width="2.7" height="15.0" fill="rgb(213,154,14)" rx="2" ry="2" />
<text  x="1025.60" y="367.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="970.5" y="229" width="8.2" height="15.0" fill="rgb(223,128,40)" rx="2" ry="2" />
<text  x="973.47" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_read (10 samples, 2.33%)</title><rect x="248.7" y="261" width="27.5" height="15.0" fill="rgb(238,136,34)" rx="2" ry="2" />
<text  x="251.74" y="271.5" >_..</text>
</g>
<g >
<title>std::vector&lt;PageId, (6 samples, 1.40%)</title><rect x="937.5" y="341" width="16.5" height="15.0" fill="rgb(218,3,47)" rx="2" ry="2" />
<text  x="940.53" y="351.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f3944000b90) (2 samples, 0.47%)</title><rect x="827.8" y="309" width="5.5" height="15.0" fill="rgb(244,89,23)" rx="2" ry="2" />
<text  x="830.77" y="319.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f3958000b90, (2 samples, 0.47%)</title><rect x="899.1" y="293" width="5.5" height="15.0" fill="rgb(223,7,41)" rx="2" ry="2" />
<text  x="902.12" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="995.2" y="165" width="8.2" height="15.0" fill="rgb(226,207,30)" rx="2" ry="2" />
<text  x="998.16" y="175.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="377.7" y="277" width="2.8" height="15.0" fill="rgb(247,41,51)" rx="2" ry="2" />
<text  x="380.72" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="453" width="2.8" height="15.0" fill="rgb(219,30,37)" rx="2" ry="2" />
<text  x="1028.35" y="463.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f394c000b90) (13 samples, 3.02%)</title><rect x="125.3" y="277" width="35.6" height="15.0" fill="rgb(214,119,2)" rx="2" ry="2" />
<text  x="128.26" y="287.5" >_IO..</text>
</g>
<g >
<title>__lll_lock_wait_private (6 samples, 1.40%)</title><rect x="597.3" y="293" width="16.4" height="15.0" fill="rgb(250,81,39)" rx="2" ry="2" />
<text  x="600.26" y="303.5" ></text>
</g>
<g >
<title>PageId::operator= (1 samples, 0.23%)</title><rect x="10.0" y="357" width="2.7" height="15.0" fill="rgb(226,149,40)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>arch_fork (4 samples, 0.93%)</title><rect x="792.1" y="293" width="11.0" height="15.0" fill="rgb(232,67,51)" rx="2" ry="2" />
<text  x="795.09" y="303.5" ></text>
</g>
<g >
<title>arch_fork (7 samples, 1.63%)</title><rect x="457.3" y="293" width="19.2" height="15.0" fill="rgb(246,198,54)" rx="2" ry="2" />
<text  x="460.30" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="325" width="2.7" height="15.0" fill="rgb(209,5,41)" rx="2" ry="2" />
<text  x="1190.26" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (3 samples, 0.70%)</title><rect x="1179.0" y="469" width="8.3" height="15.0" fill="rgb(235,88,47)" rx="2" ry="2" />
<text  x="1182.02" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="1011.6" y="133" width="2.8" height="15.0" fill="rgb(249,158,46)" rx="2" ry="2" />
<text  x="1014.63" y="143.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (9 samples, 2.09%)</title><rect x="322.8" y="277" width="24.7" height="15.0" fill="rgb(246,51,39)" rx="2" ry="2" />
<text  x="325.84" y="287.5" >_..</text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.23%)</title><rect x="934.8" y="165" width="2.7" height="15.0" fill="rgb(230,27,4)" rx="2" ry="2" />
<text  x="937.79" y="175.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663feec8, (3 samples, 0.70%)</title><rect x="1003.4" y="325" width="8.2" height="15.0" fill="rgb(243,73,53)" rx="2" ry="2" />
<text  x="1006.40" y="335.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fecf8, (3 samples, 0.70%)</title><rect x="995.2" y="325" width="8.2" height="15.0" fill="rgb(228,17,24)" rx="2" ry="2" />
<text  x="998.16" y="335.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (16 samples, 3.72%)</title><rect x="413.4" y="277" width="43.9" height="15.0" fill="rgb(254,107,4)" rx="2" ry="2" />
<text  x="416.40" y="287.5" >__ll..</text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3950000b90, (13 samples, 3.02%)</title><rect x="160.9" y="325" width="35.7" height="15.0" fill="rgb(208,50,31)" rx="2" ry="2" />
<text  x="163.93" y="335.5" >__G..</text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3958000b90) (4 samples, 0.93%)</title><rect x="657.6" y="309" width="11.0" height="15.0" fill="rgb(231,36,10)" rx="2" ry="2" />
<text  x="660.63" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.23%)</title><rect x="951.3" y="309" width="2.7" height="15.0" fill="rgb(213,85,5)" rx="2" ry="2" />
<text  x="954.26" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.23%)</title><rect x="934.8" y="357" width="2.7" height="15.0" fill="rgb(250,119,37)" rx="2" ry="2" />
<text  x="937.79" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds (42 samples, 9.77%)</title><rect x="1050.0" y="469" width="115.3" height="15.0" fill="rgb(247,170,39)" rx="2" ry="2" />
<text  x="1053.05" y="479.5" >MultiThreadedP..</text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f395c000b90) (3 samples, 0.70%)</title><rect x="742.7" y="309" width="8.2" height="15.0" fill="rgb(222,203,1)" rx="2" ry="2" />
<text  x="745.70" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::stdio_sync_filebuf&lt;char,std::char_traits&lt;char&gt; (3 samples, 0.70%)</title><rect x="1041.8" y="453" width="8.2" height="15.0" fill="rgb(249,216,41)" rx="2" ry="2" />
<text  x="1044.81" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (8 samples, 1.86%)</title><rect x="932.0" y="421" width="22.0" height="15.0" fill="rgb(247,97,20)" rx="2" ry="2" />
<text  x="935.05" y="431.5" >s..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="1011.6" y="149" width="8.3" height="15.0" fill="rgb(214,207,22)" rx="2" ry="2" />
<text  x="1014.63" y="159.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3944000b20 (17 samples, 3.95%)</title><rect x="355.8" y="341" width="46.6" height="15.0" fill="rgb(250,37,39)" rx="2" ry="2" />
<text  x="358.77" y="351.5" >_IO_..</text>
</g>
<g >
<title>mprotect() (1 samples, 0.23%)</title><rect x="945.8" y="197" width="2.7" height="15.0" fill="rgb(246,69,23)" rx="2" ry="2" />
<text  x="948.77" y="207.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (24 samples, 5.58%)</title><rect x="954.0" y="453" width="65.9" height="15.0" fill="rgb(238,94,49)" rx="2" ry="2" />
<text  x="957.00" y="463.5" >std::th..</text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.23%)</title><rect x="929.3" y="261" width="2.7" height="15.0" fill="rgb(213,164,30)" rx="2" ry="2" />
<text  x="932.30" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f3944000020, (2 samples, 0.47%)</title><rect x="827.8" y="277" width="5.5" height="15.0" fill="rgb(214,19,0)" rx="2" ry="2" />
<text  x="830.77" y="287.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f3940000020, (2 samples, 0.47%)</title><rect x="805.8" y="277" width="5.5" height="15.0" fill="rgb(205,2,45)" rx="2" ry="2" />
<text  x="808.81" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.47%)</title><rect x="956.7" y="85" width="5.5" height="15.0" fill="rgb(205,172,44)" rx="2" ry="2" />
<text  x="959.74" y="95.5" ></text>
</g>
<g >
<title>std::thread::join()() (42 samples, 9.77%)</title><rect x="1050.0" y="437" width="115.3" height="15.0" fill="rgb(227,170,25)" rx="2" ry="2" />
<text  x="1053.05" y="447.5" >std::thread::j..</text>
</g>
<g >
<title>__lll_lock_wait_private (5 samples, 1.16%)</title><rect x="528.7" y="293" width="13.7" height="15.0" fill="rgb(205,37,38)" rx="2" ry="2" />
<text  x="531.65" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="978.7" y="261" width="8.2" height="15.0" fill="rgb(233,174,17)" rx="2" ry="2" />
<text  x="981.70" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f39543dde10, (1 samples, 0.23%)</title><rect x="1181.8" y="165" width="2.7" height="15.0" fill="rgb(221,88,40)" rx="2" ry="2" />
<text  x="1184.77" y="175.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (4 samples, 0.93%)</title><rect x="904.6" y="277" width="11.0" height="15.0" fill="rgb(208,169,49)" rx="2" ry="2" />
<text  x="907.60" y="287.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f394c000b20 (19 samples, 4.42%)</title><rect x="476.5" y="341" width="52.2" height="15.0" fill="rgb(221,162,4)" rx="2" ry="2" />
<text  x="479.51" y="351.5" >_IO_n..</text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="833.3" y="277" width="2.7" height="15.0" fill="rgb(252,22,9)" rx="2" ry="2" />
<text  x="836.26" y="287.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (2 samples, 0.47%)</title><rect x="1165.3" y="469" width="5.5" height="15.0" fill="rgb(240,188,27)" rx="2" ry="2" />
<text  x="1168.30" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.70%)</title><rect x="970.5" y="85" width="8.2" height="15.0" fill="rgb(249,79,45)" rx="2" ry="2" />
<text  x="973.47" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="978.7" y="133" width="2.7" height="15.0" fill="rgb(230,167,17)" rx="2" ry="2" />
<text  x="981.70" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f3958000020, (2 samples, 0.47%)</title><rect x="899.1" y="277" width="5.5" height="15.0" fill="rgb(220,4,29)" rx="2" ry="2" />
<text  x="902.12" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="948.5" y="261" width="2.8" height="15.0" fill="rgb(248,35,35)" rx="2" ry="2" />
<text  x="951.51" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f395c000b90) (2 samples, 0.47%)</title><rect x="923.8" y="293" width="5.5" height="15.0" fill="rgb(217,59,5)" rx="2" ry="2" />
<text  x="926.81" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.23%)</title><rect x="1022.6" y="485" width="2.7" height="15.0" fill="rgb(236,60,34)" rx="2" ry="2" />
<text  x="1025.60" y="495.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f39653fea00 (2 samples, 0.47%)</title><rect x="1044.6" y="421" width="5.4" height="15.0" fill="rgb(205,101,42)" rx="2" ry="2" />
<text  x="1047.56" y="431.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3954000b90) (6 samples, 1.40%)</title><rect x="597.3" y="325" width="16.4" height="15.0" fill="rgb(222,56,45)" rx="2" ry="2" />
<text  x="600.26" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.47%)</title><rect x="956.7" y="69" width="5.5" height="15.0" fill="rgb(207,89,17)" rx="2" ry="2" />
<text  x="959.74" y="79.5" ></text>
</g>
<g >
<title>__GI___libc_read (17 samples, 3.95%)</title><rect x="73.1" y="245" width="46.7" height="15.0" fill="rgb(213,67,30)" rx="2" ry="2" />
<text  x="76.12" y="255.5" >__GI..</text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3948000b90, (11 samples, 2.56%)</title><rect x="246.0" y="325" width="30.2" height="15.0" fill="rgb(208,111,24)" rx="2" ry="2" />
<text  x="249.00" y="335.5" >__..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="995.2" y="245" width="8.2" height="15.0" fill="rgb(248,18,44)" rx="2" ry="2" />
<text  x="998.16" y="255.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (2 samples, 0.47%)</title><rect x="923.8" y="309" width="5.5" height="15.0" fill="rgb(229,180,6)" rx="2" ry="2" />
<text  x="926.81" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,Network (336 samples, 78.14%)</title><rect x="10.0" y="389" width="922.0" height="15.0" fill="rgb(251,19,4)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,Network</text>
</g>
<g >
<title>_int_free(av=0x7f394c000020, (3 samples, 0.70%)</title><rect x="847.0" y="277" width="8.2" height="15.0" fill="rgb(217,129,35)" rx="2" ry="2" />
<text  x="849.98" y="287.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3963238cf0 (13 samples, 3.02%)</title><rect x="160.9" y="341" width="35.7" height="15.0" fill="rgb(247,136,35)" rx="2" ry="2" />
<text  x="163.93" y="351.5" >_IO..</text>
</g>
<g >
<title>main (1 samples, 0.23%)</title><rect x="1187.3" y="517" width="2.7" height="15.0" fill="rgb(252,15,37)" rx="2" ry="2" />
<text  x="1190.26" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (1 samples, 0.23%)</title><rect x="1187.3" y="469" width="2.7" height="15.0" fill="rgb(230,80,16)" rx="2" ry="2" />
<text  x="1190.26" y="479.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f394c000b90) (3 samples, 0.70%)</title><rect x="847.0" y="309" width="8.2" height="15.0" fill="rgb(252,199,7)" rx="2" ry="2" />
<text  x="849.98" y="319.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="954.0" y="229" width="8.2" height="15.0" fill="rgb(211,124,49)" rx="2" ry="2" />
<text  x="957.00" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=bytes@entry=4096) (1 samples, 0.23%)</title><rect x="12.7" y="229" width="2.8" height="15.0" fill="rgb(217,116,0)" rx="2" ry="2" />
<text  x="15.74" y="239.5" ></text>
</g>
<g >
<title>__malloc_fork_lock_parent() (1 samples, 0.23%)</title><rect x="377.7" y="293" width="2.8" height="15.0" fill="rgb(249,45,27)" rx="2" ry="2" />
<text  x="380.72" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="375.0" y="277" width="2.7" height="15.0" fill="rgb(233,148,16)" rx="2" ry="2" />
<text  x="377.98" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="986.9" y="245" width="8.3" height="15.0" fill="rgb(237,49,9)" rx="2" ry="2" />
<text  x="989.93" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_read (14 samples, 3.26%)</title><rect x="207.6" y="261" width="38.4" height="15.0" fill="rgb(243,6,3)" rx="2" ry="2" />
<text  x="210.58" y="271.5" >__G..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="978.7" y="293" width="8.2" height="15.0" fill="rgb(226,97,32)" rx="2" ry="2" />
<text  x="981.70" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="970.5" y="309" width="8.2" height="15.0" fill="rgb(249,64,2)" rx="2" ry="2" />
<text  x="973.47" y="319.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.47%)</title><rect x="956.7" y="117" width="5.5" height="15.0" fill="rgb(240,225,1)" rx="2" ry="2" />
<text  x="959.74" y="127.5" ></text>
</g>
<g >
<title>__libc_fork() (9 samples, 2.09%)</title><rect x="322.8" y="309" width="24.7" height="15.0" fill="rgb(223,182,12)" rx="2" ry="2" />
<text  x="325.84" y="319.5" >_..</text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.23%)</title><rect x="934.8" y="229" width="2.7" height="15.0" fill="rgb(216,91,13)" rx="2" ry="2" />
<text  x="937.79" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (8 samples, 1.86%)</title><rect x="932.0" y="437" width="22.0" height="15.0" fill="rgb(214,200,45)" rx="2" ry="2" />
<text  x="935.05" y="447.5" >s..</text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1003.4" y="261" width="8.2" height="15.0" fill="rgb(233,24,53)" rx="2" ry="2" />
<text  x="1006.40" y="271.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.23%)</title><rect x="1184.5" y="149" width="2.8" height="15.0" fill="rgb(218,126,3)" rx="2" ry="2" />
<text  x="1187.51" y="159.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3954000b20 (21 samples, 4.88%)</title><rect x="597.3" y="341" width="57.6" height="15.0" fill="rgb(248,192,30)" rx="2" ry="2" />
<text  x="600.26" y="351.5" >_IO_ne..</text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="803.1" y="277" width="2.7" height="15.0" fill="rgb(222,170,46)" rx="2" ry="2" />
<text  x="806.07" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="934.8" y="293" width="2.7" height="15.0" fill="rgb(205,29,13)" rx="2" ry="2" />
<text  x="937.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="1179.0" y="213" width="8.3" height="15.0" fill="rgb(205,162,22)" rx="2" ry="2" />
<text  x="1182.02" y="223.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.47%)</title><rect x="981.4" y="117" width="5.5" height="15.0" fill="rgb(225,149,47)" rx="2" ry="2" />
<text  x="984.44" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=4096) (3 samples, 0.70%)</title><rect x="937.5" y="261" width="8.3" height="15.0" fill="rgb(214,133,2)" rx="2" ry="2" />
<text  x="940.53" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="929.3" y="309" width="2.7" height="15.0" fill="rgb(239,49,52)" rx="2" ry="2" />
<text  x="932.30" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (8 samples, 1.86%)</title><rect x="932.0" y="389" width="22.0" height="15.0" fill="rgb(239,168,23)" rx="2" ry="2" />
<text  x="935.05" y="399.5" >M..</text>
</g>
<g >
<title>__GI___libc_read(nbytes=4096, (2 samples, 0.47%)</title><rect x="119.8" y="245" width="5.5" height="15.0" fill="rgb(208,194,49)" rx="2" ry="2" />
<text  x="122.77" y="255.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3948000b90, (23 samples, 5.35%)</title><rect x="413.4" y="325" width="63.1" height="15.0" fill="rgb(213,167,5)" rx="2" ry="2" />
<text  x="416.40" y="335.5" >_IO_ne..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="970.5" y="245" width="8.2" height="15.0" fill="rgb(219,86,14)" rx="2" ry="2" />
<text  x="973.47" y="255.5" ></text>
</g>
<g >
<title>all (430 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(207,44,54)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3954000b90) (6 samples, 1.40%)</title><rect x="597.3" y="309" width="16.4" height="15.0" fill="rgb(234,137,25)" rx="2" ry="2" />
<text  x="600.26" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_read (13 samples, 3.02%)</title><rect x="125.3" y="261" width="35.6" height="15.0" fill="rgb(217,107,32)" rx="2" ry="2" />
<text  x="128.26" y="271.5" >__G..</text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="1011.6" y="277" width="8.3" height="15.0" fill="rgb(226,221,51)" rx="2" ry="2" />
<text  x="1014.63" y="287.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3954000b90) (6 samples, 1.40%)</title><rect x="882.7" y="341" width="16.4" height="15.0" fill="rgb(216,175,36)" rx="2" ry="2" />
<text  x="885.65" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (24 samples, 5.58%)</title><rect x="954.0" y="437" width="65.9" height="15.0" fill="rgb(230,86,35)" rx="2" ry="2" />
<text  x="957.00" y="447.5" >std::th..</text>
</g>
<g >
<title>sysmalloc (1 samples, 0.23%)</title><rect x="945.8" y="229" width="2.7" height="15.0" fill="rgb(221,69,15)" rx="2" ry="2" />
<text  x="948.77" y="239.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3950000b90) (4 samples, 0.93%)</title><rect x="871.7" y="325" width="11.0" height="15.0" fill="rgb(227,16,31)" rx="2" ry="2" />
<text  x="874.67" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_doallocbuf(fp=fp@entry=0x7f3948000b90) (1 samples, 0.23%)</title><rect x="246.0" y="261" width="2.7" height="15.0" fill="rgb(221,4,2)" rx="2" ry="2" />
<text  x="249.00" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.70%)</title><rect x="1179.0" y="373" width="8.3" height="15.0" fill="rgb(242,228,38)" rx="2" ry="2" />
<text  x="1182.02" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_read (13 samples, 3.02%)</title><rect x="160.9" y="245" width="35.7" height="15.0" fill="rgb(227,95,19)" rx="2" ry="2" />
<text  x="163.93" y="255.5" >__G..</text>
</g>
<g >
<title>__lll_lock_wait_private (7 samples, 1.63%)</title><rect x="355.8" y="293" width="19.2" height="15.0" fill="rgb(205,67,53)" rx="2" ry="2" />
<text  x="358.77" y="303.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3958000b90, (27 samples, 6.28%)</title><rect x="668.6" y="325" width="74.1" height="15.0" fill="rgb(224,222,7)" rx="2" ry="2" />
<text  x="671.60" y="335.5" >_IO_new_..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="1011.6" y="165" width="8.3" height="15.0" fill="rgb(221,143,46)" rx="2" ry="2" />
<text  x="1014.63" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.70%)</title><rect x="1179.0" y="405" width="8.3" height="15.0" fill="rgb(249,147,54)" rx="2" ry="2" />
<text  x="1182.02" y="415.5" ></text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f394c000b90, (13 samples, 3.02%)</title><rect x="125.3" y="325" width="35.6" height="15.0" fill="rgb(246,162,47)" rx="2" ry="2" />
<text  x="128.26" y="335.5" >__G..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fe868, (3 samples, 0.70%)</title><rect x="1170.8" y="341" width="8.2" height="15.0" fill="rgb(216,148,13)" rx="2" ry="2" />
<text  x="1173.79" y="351.5" ></text>
</g>
<g >
<title>arch_fork (3 samples, 0.70%)</title><rect x="646.7" y="293" width="8.2" height="15.0" fill="rgb(208,4,54)" rx="2" ry="2" />
<text  x="649.65" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f394c000b90) (13 samples, 3.02%)</title><rect x="125.3" y="293" width="35.6" height="15.0" fill="rgb(226,71,40)" rx="2" ry="2" />
<text  x="128.26" y="303.5" >__G..</text>
</g>
<g >
<title>__libc_fork() (12 samples, 2.79%)</title><rect x="613.7" y="309" width="33.0" height="15.0" fill="rgb(246,227,54)" rx="2" ry="2" />
<text  x="616.72" y="319.5" >__..</text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3954000b90, (14 samples, 3.26%)</title><rect x="207.6" y="309" width="38.4" height="15.0" fill="rgb(227,88,40)" rx="2" ry="2" />
<text  x="210.58" y="319.5" >__G..</text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3954000b90, (1 samples, 0.23%)</title><rect x="654.9" y="325" width="2.7" height="15.0" fill="rgb(244,219,52)" rx="2" ry="2" />
<text  x="657.88" y="335.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f396523ccf0 (14 samples, 3.26%)</title><rect x="276.2" y="341" width="38.4" height="15.0" fill="rgb(205,213,43)" rx="2" ry="2" />
<text  x="279.19" y="351.5" >_IO..</text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (6 samples, 1.40%)</title><rect x="811.3" y="309" width="16.5" height="15.0" fill="rgb(243,210,45)" rx="2" ry="2" />
<text  x="814.30" y="319.5" ></text>
</g>
<g >
<title>__libc_fork() (1 samples, 0.23%)</title><rect x="803.1" y="309" width="2.7" height="15.0" fill="rgb(216,91,37)" rx="2" ry="2" />
<text  x="806.07" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="962.2" y="293" width="8.3" height="15.0" fill="rgb(209,202,48)" rx="2" ry="2" />
<text  x="965.23" y="303.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55b6663b0ae0) (1 samples, 0.23%)</title><rect x="932.0" y="325" width="2.8" height="15.0" fill="rgb(236,145,26)" rx="2" ry="2" />
<text  x="935.05" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3944000b90, (22 samples, 5.12%)</title><rect x="12.7" y="325" width="60.4" height="15.0" fill="rgb(248,40,48)" rx="2" ry="2" />
<text  x="15.74" y="335.5" >__GI__..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="357" width="2.7" height="15.0" fill="rgb(205,213,32)" rx="2" ry="2" />
<text  x="1190.26" y="367.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663feb28, (3 samples, 0.70%)</title><rect x="986.9" y="325" width="8.3" height="15.0" fill="rgb(214,185,41)" rx="2" ry="2" />
<text  x="989.93" y="335.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f3954000b90) (2 samples, 0.47%)</title><rect x="882.7" y="309" width="5.4" height="15.0" fill="rgb(248,228,31)" rx="2" ry="2" />
<text  x="885.65" y="319.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f3954000020, (1 samples, 0.23%)</title><rect x="940.3" y="245" width="2.7" height="15.0" fill="rgb(213,45,23)" rx="2" ry="2" />
<text  x="943.28" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_read (21 samples, 4.88%)</title><rect x="15.5" y="261" width="57.6" height="15.0" fill="rgb(245,12,50)" rx="2" ry="2" />
<text  x="18.49" y="271.5" >__GI__..</text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f3958000b90) (2 samples, 0.47%)</title><rect x="899.1" y="309" width="5.5" height="15.0" fill="rgb(234,169,34)" rx="2" ry="2" />
<text  x="902.12" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="841.5" y="277" width="5.5" height="15.0" fill="rgb(219,139,54)" rx="2" ry="2" />
<text  x="844.49" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3958000b90, (4 samples, 0.93%)</title><rect x="196.6" y="325" width="11.0" height="15.0" fill="rgb(222,131,49)" rx="2" ry="2" />
<text  x="199.60" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="453" width="2.7" height="15.0" fill="rgb(248,201,23)" rx="2" ry="2" />
<text  x="1190.26" y="463.5" ></text>
</g>
<g >
<title>arch_fork (12 samples, 2.79%)</title><rect x="709.8" y="293" width="32.9" height="15.0" fill="rgb(211,38,38)" rx="2" ry="2" />
<text  x="712.77" y="303.5" >ar..</text>
</g>
<g >
<title>std::basic_istream&lt;char,std::char_traits&lt;char&gt; (1 samples, 0.23%)</title><rect x="1019.9" y="485" width="2.7" height="15.0" fill="rgb(216,90,0)" rx="2" ry="2" />
<text  x="1022.86" y="495.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3940000b90) (8 samples, 1.86%)</title><rect x="805.8" y="325" width="22.0" height="15.0" fill="rgb(239,58,48)" rx="2" ry="2" />
<text  x="808.81" y="335.5" >_..</text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3948000b90) (4 samples, 0.93%)</title><rect x="402.4" y="309" width="11.0" height="15.0" fill="rgb(212,182,26)" rx="2" ry="2" />
<text  x="405.42" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_read (19 samples, 4.42%)</title><rect x="73.1" y="261" width="52.2" height="15.0" fill="rgb(221,185,50)" rx="2" ry="2" />
<text  x="76.12" y="271.5" >__GI_..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1003.4" y="245" width="8.2" height="15.0" fill="rgb(224,82,30)" rx="2" ry="2" />
<text  x="1006.40" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (4 samples, 0.93%)</title><rect x="871.7" y="277" width="11.0" height="15.0" fill="rgb(247,13,33)" rx="2" ry="2" />
<text  x="874.67" y="287.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char,std::char_traits&lt;char&gt; (8 samples, 1.86%)</title><rect x="1028.1" y="469" width="21.9" height="15.0" fill="rgb(211,112,21)" rx="2" ry="2" />
<text  x="1031.09" y="479.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.70%)</title><rect x="1179.0" y="181" width="8.3" height="15.0" fill="rgb(230,172,10)" rx="2" ry="2" />
<text  x="1182.02" y="191.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3940000b90) (8 samples, 1.86%)</title><rect x="805.8" y="341" width="22.0" height="15.0" fill="rgb(252,80,21)" rx="2" ry="2" />
<text  x="808.81" y="351.5" >_..</text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.70%)</title><rect x="970.5" y="117" width="8.2" height="15.0" fill="rgb(247,159,35)" rx="2" ry="2" />
<text  x="973.47" y="127.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="978.7" y="181" width="8.2" height="15.0" fill="rgb(238,229,10)" rx="2" ry="2" />
<text  x="981.70" y="191.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (1 samples, 0.23%)</title><rect x="803.1" y="293" width="2.7" height="15.0" fill="rgb(243,132,50)" rx="2" ry="2" />
<text  x="806.07" y="303.5" ></text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.23%)</title><rect x="1165.3" y="437" width="2.7" height="15.0" fill="rgb(240,127,17)" rx="2" ry="2" />
<text  x="1168.30" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="995.2" y="229" width="8.2" height="15.0" fill="rgb(211,136,20)" rx="2" ry="2" />
<text  x="998.16" y="239.5" ></text>
</g>
<g >
<title>Page::generateId (336 samples, 78.14%)</title><rect x="10.0" y="373" width="922.0" height="15.0" fill="rgb(237,216,37)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >Page::generateId</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="962.2" y="229" width="8.3" height="15.0" fill="rgb(246,53,6)" rx="2" ry="2" />
<text  x="965.23" y="239.5" ></text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3950000b90) (5 samples, 1.16%)</title><rect x="528.7" y="309" width="13.7" height="15.0" fill="rgb(237,67,27)" rx="2" ry="2" />
<text  x="531.65" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.47%)</title><rect x="1003.4" y="133" width="5.5" height="15.0" fill="rgb(230,178,37)" rx="2" ry="2" />
<text  x="1006.40" y="143.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f394c000b90) (6 samples, 1.40%)</title><rect x="855.2" y="293" width="16.5" height="15.0" fill="rgb(234,188,43)" rx="2" ry="2" />
<text  x="858.21" y="303.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (15 samples, 3.49%)</title><rect x="668.6" y="293" width="41.2" height="15.0" fill="rgb(238,91,47)" rx="2" ry="2" />
<text  x="671.60" y="303.5" >__r..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="1003.4" y="149" width="8.2" height="15.0" fill="rgb(210,16,54)" rx="2" ry="2" />
<text  x="1006.40" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="951.3" y="277" width="2.7" height="15.0" fill="rgb(247,173,34)" rx="2" ry="2" />
<text  x="954.26" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="918.3" y="261" width="5.5" height="15.0" fill="rgb(240,92,16)" rx="2" ry="2" />
<text  x="921.33" y="271.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (16 samples, 3.72%)</title><rect x="479.3" y="293" width="43.9" height="15.0" fill="rgb(212,35,28)" rx="2" ry="2" />
<text  x="482.26" y="303.5" >__ru..</text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (16 samples, 3.72%)</title><rect x="413.4" y="293" width="43.9" height="15.0" fill="rgb(249,194,40)" rx="2" ry="2" />
<text  x="416.40" y="303.5" >__ru..</text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3954000b90) (14 samples, 3.26%)</title><rect x="207.6" y="277" width="38.4" height="15.0" fill="rgb(212,183,34)" rx="2" ry="2" />
<text  x="210.58" y="287.5" >_IO..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId (1 samples, 0.23%)</title><rect x="929.3" y="357" width="2.7" height="15.0" fill="rgb(235,169,35)" rx="2" ry="2" />
<text  x="932.30" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f394c000020, (1 samples, 0.23%)</title><rect x="934.8" y="197" width="2.7" height="15.0" fill="rgb(221,29,38)" rx="2" ry="2" />
<text  x="937.79" y="207.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1011.6" y="229" width="8.3" height="15.0" fill="rgb(216,68,5)" rx="2" ry="2" />
<text  x="1014.63" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="934.8" y="277" width="2.7" height="15.0" fill="rgb(211,60,40)" rx="2" ry="2" />
<text  x="937.79" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f395c000b90) (14 samples, 3.26%)</title><rect x="276.2" y="293" width="38.4" height="15.0" fill="rgb(219,58,11)" rx="2" ry="2" />
<text  x="279.19" y="303.5" >__G..</text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f395c000b90, (14 samples, 3.26%)</title><rect x="276.2" y="325" width="38.4" height="15.0" fill="rgb(216,105,13)" rx="2" ry="2" />
<text  x="279.19" y="335.5" >__G..</text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="962.2" y="213" width="8.3" height="15.0" fill="rgb(229,100,11)" rx="2" ry="2" />
<text  x="965.23" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (4 samples, 0.93%)</title><rect x="888.1" y="277" width="11.0" height="15.0" fill="rgb(205,75,1)" rx="2" ry="2" />
<text  x="891.14" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="962.2" y="101" width="8.3" height="15.0" fill="rgb(229,68,49)" rx="2" ry="2" />
<text  x="965.23" y="111.5" ></text>
</g>
<g >
<title>__libc_fork (4 samples, 0.93%)</title><rect x="792.1" y="309" width="11.0" height="15.0" fill="rgb(237,78,51)" rx="2" ry="2" />
<text  x="795.09" y="319.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (12 samples, 2.79%)</title><rect x="613.7" y="293" width="33.0" height="15.0" fill="rgb(237,211,10)" rx="2" ry="2" />
<text  x="616.72" y="303.5" >__..</text>
</g>
<g >
<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (24 samples, 5.58%)</title><rect x="954.0" y="421" width="65.9" height="15.0" fill="rgb(211,45,4)" rx="2" ry="2" />
<text  x="957.00" y="431.5" >std::__..</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.23%)</title><rect x="1011.6" y="69" width="2.8" height="15.0" fill="rgb(213,181,3)" rx="2" ry="2" />
<text  x="1014.63" y="79.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (3 samples, 0.70%)</title><rect x="1179.0" y="261" width="8.3" height="15.0" fill="rgb(237,129,1)" rx="2" ry="2" />
<text  x="1182.02" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.23%)</title><rect x="934.8" y="341" width="2.7" height="15.0" fill="rgb(249,28,13)" rx="2" ry="2" />
<text  x="937.79" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.23%)</title><rect x="951.3" y="325" width="2.7" height="15.0" fill="rgb(225,148,14)" rx="2" ry="2" />
<text  x="954.26" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3954000b90) (14 samples, 3.26%)</title><rect x="207.6" y="293" width="38.4" height="15.0" fill="rgb(228,99,42)" rx="2" ry="2" />
<text  x="210.58" y="303.5" >__G..</text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3940000b90, (12 samples, 2.79%)</title><rect x="322.8" y="325" width="33.0" height="15.0" fill="rgb(220,100,37)" rx="2" ry="2" />
<text  x="325.84" y="335.5" >_I..</text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="970.5" y="197" width="8.2" height="15.0" fill="rgb(235,111,26)" rx="2" ry="2" />
<text  x="973.47" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (3 samples, 0.70%)</title><rect x="1179.0" y="293" width="8.3" height="15.0" fill="rgb(210,143,50)" rx="2" ry="2" />
<text  x="1182.02" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::~EdgeInfo (3 samples, 0.70%)</title><rect x="1179.0" y="341" width="8.3" height="15.0" fill="rgb(252,110,37)" rx="2" ry="2" />
<text  x="1182.02" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::PageInfo::getLinkValue(iteration=&lt;optimized (1 samples, 0.23%)</title><rect x="954.0" y="165" width="2.7" height="15.0" fill="rgb(207,130,6)" rx="2" ry="2" />
<text  x="957.00" y="175.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3948000b90, (11 samples, 2.56%)</title><rect x="246.0" y="309" width="30.2" height="15.0" fill="rgb(217,160,15)" rx="2" ry="2" />
<text  x="249.00" y="319.5" >__..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (3 samples, 0.70%)</title><rect x="1179.0" y="309" width="8.3" height="15.0" fill="rgb(245,10,36)" rx="2" ry="2" />
<text  x="1182.02" y="319.5" ></text>
</g>
<g >
<title>__libc_fork() (10 samples, 2.33%)</title><rect x="375.0" y="309" width="27.4" height="15.0" fill="rgb(222,62,34)" rx="2" ry="2" />
<text  x="377.98" y="319.5" >_..</text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.70%)</title><rect x="1179.0" y="325" width="8.3" height="15.0" fill="rgb(206,61,30)" rx="2" ry="2" />
<text  x="1182.02" y="335.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3948000b90) (4 samples, 0.93%)</title><rect x="836.0" y="341" width="11.0" height="15.0" fill="rgb(222,43,41)" rx="2" ry="2" />
<text  x="839.00" y="351.5" ></text>
</g>
<g >
<title>__libc_fork (12 samples, 2.79%)</title><rect x="709.8" y="309" width="32.9" height="15.0" fill="rgb(250,137,3)" rx="2" ry="2" />
<text  x="712.77" y="319.5" >__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.23%)</title><rect x="10.0" y="325" width="2.7" height="15.0" fill="rgb(208,11,36)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.23%)</title><rect x="1008.9" y="85" width="2.7" height="15.0" fill="rgb(214,107,44)" rx="2" ry="2" />
<text  x="1011.88" y="95.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1003.4" y="229" width="8.2" height="15.0" fill="rgb(253,172,53)" rx="2" ry="2" />
<text  x="1006.40" y="239.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3940000b20 (15 samples, 3.49%)</title><rect x="314.6" y="341" width="41.2" height="15.0" fill="rgb(250,211,12)" rx="2" ry="2" />
<text  x="317.60" y="351.5" >_IO..</text>
</g>
<g >
<title>std::getline&lt;char,std::char_traits&lt;char&gt;, (8 samples, 1.86%)</title><rect x="1028.1" y="485" width="21.9" height="15.0" fill="rgb(211,50,9)" rx="2" ry="2" />
<text  x="1031.09" y="495.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="1168.0" y="421" width="2.8" height="15.0" fill="rgb(230,41,2)" rx="2" ry="2" />
<text  x="1171.05" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (8 samples, 1.86%)</title><rect x="932.0" y="405" width="22.0" height="15.0" fill="rgb(211,33,40)" rx="2" ry="2" />
<text  x="935.05" y="415.5" >s..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="962.2" y="149" width="8.3" height="15.0" fill="rgb(252,116,45)" rx="2" ry="2" />
<text  x="965.23" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="341" width="2.7" height="15.0" fill="rgb(241,216,33)" rx="2" ry="2" />
<text  x="1190.26" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="389" width="2.7" height="15.0" fill="rgb(217,141,21)" rx="2" ry="2" />
<text  x="1025.60" y="399.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fe858, (3 samples, 0.70%)</title><rect x="954.0" y="325" width="8.2" height="15.0" fill="rgb(227,2,1)" rx="2" ry="2" />
<text  x="957.00" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=bytes@entry=4096) (1 samples, 0.23%)</title><rect x="246.0" y="229" width="2.7" height="15.0" fill="rgb(229,161,39)" rx="2" ry="2" />
<text  x="249.00" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.23%)</title><rect x="1011.6" y="101" width="2.8" height="15.0" fill="rgb(223,98,13)" rx="2" ry="2" />
<text  x="1014.63" y="111.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="962.2" y="277" width="8.3" height="15.0" fill="rgb(220,7,2)" rx="2" ry="2" />
<text  x="965.23" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="986.9" y="149" width="8.3" height="15.0" fill="rgb(253,177,37)" rx="2" ry="2" />
<text  x="989.93" y="159.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.70%)</title><rect x="970.5" y="101" width="8.2" height="15.0" fill="rgb(222,181,27)" rx="2" ry="2" />
<text  x="973.47" y="111.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (4 samples, 0.93%)</title><rect x="402.4" y="293" width="11.0" height="15.0" fill="rgb(252,150,5)" rx="2" ry="2" />
<text  x="405.42" y="303.5" ></text>
</g>
<g >
<title>_IO_ungetc (2 samples, 0.47%)</title><rect x="1030.8" y="453" width="5.5" height="15.0" fill="rgb(236,47,13)" rx="2" ry="2" />
<text  x="1033.84" y="463.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="954.0" y="181" width="8.2" height="15.0" fill="rgb(212,17,7)" rx="2" ry="2" />
<text  x="957.00" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.47%)</title><rect x="989.7" y="69" width="5.5" height="15.0" fill="rgb(217,211,47)" rx="2" ry="2" />
<text  x="992.67" y="79.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139884427962112, (1 samples, 0.23%)</title><rect x="1165.3" y="421" width="2.7" height="15.0" fill="rgb(251,48,31)" rx="2" ry="2" />
<text  x="1168.30" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="995.2" y="261" width="8.2" height="15.0" fill="rgb(247,116,15)" rx="2" ry="2" />
<text  x="998.16" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.70%)</title><rect x="1179.0" y="389" width="8.3" height="15.0" fill="rgb(228,164,54)" rx="2" ry="2" />
<text  x="1182.02" y="399.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.23%)</title><rect x="934.8" y="149" width="2.7" height="15.0" fill="rgb(217,43,2)" rx="2" ry="2" />
<text  x="937.79" y="159.5" ></text>
</g>
<g >
<title>StdinGenerator::generateNetworkOfSize (10 samples, 2.33%)</title><rect x="1022.6" y="501" width="27.4" height="15.0" fill="rgb(225,107,15)" rx="2" ry="2" />
<text  x="1025.60" y="511.5" >S..</text>
</g>
<g >
<title>__GI__IO_sputbackc(fp=0x7f39653fea00 (1 samples, 0.23%)</title><rect x="1039.1" y="453" width="2.7" height="15.0" fill="rgb(249,80,29)" rx="2" ry="2" />
<text  x="1042.07" y="463.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3961a35cf0 (22 samples, 5.12%)</title><rect x="12.7" y="341" width="60.4" height="15.0" fill="rgb(253,129,23)" rx="2" ry="2" />
<text  x="15.74" y="351.5" >_IO_fg..</text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="421" width="2.7" height="15.0" fill="rgb(224,180,27)" rx="2" ry="2" />
<text  x="1190.26" y="431.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f395c000b90) (4 samples, 0.93%)</title><rect x="918.3" y="341" width="11.0" height="15.0" fill="rgb(235,2,21)" rx="2" ry="2" />
<text  x="921.33" y="351.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3944000b90) (1 samples, 0.23%)</title><rect x="833.3" y="293" width="2.7" height="15.0" fill="rgb(218,40,13)" rx="2" ry="2" />
<text  x="836.26" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 0.70%)</title><rect x="995.2" y="149" width="8.2" height="15.0" fill="rgb(230,136,5)" rx="2" ry="2" />
<text  x="998.16" y="159.5" ></text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f3944000b90) (7 samples, 1.63%)</title><rect x="355.8" y="309" width="19.2" height="15.0" fill="rgb(209,120,15)" rx="2" ry="2" />
<text  x="358.77" y="319.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3958000b90) (7 samples, 1.63%)</title><rect x="899.1" y="341" width="19.2" height="15.0" fill="rgb(223,125,44)" rx="2" ry="2" />
<text  x="902.12" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=&lt;optimized (1 samples, 0.23%)</title><rect x="948.5" y="293" width="2.8" height="15.0" fill="rgb(241,87,46)" rx="2" ry="2" />
<text  x="951.51" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.70%)</title><rect x="995.2" y="85" width="8.2" height="15.0" fill="rgb(223,125,15)" rx="2" ry="2" />
<text  x="998.16" y="95.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="970.5" y="293" width="8.2" height="15.0" fill="rgb(247,183,9)" rx="2" ry="2" />
<text  x="973.47" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3954000b90) (4 samples, 0.93%)</title><rect x="888.1" y="293" width="11.0" height="15.0" fill="rgb(235,159,9)" rx="2" ry="2" />
<text  x="891.14" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="437" width="2.7" height="15.0" fill="rgb(245,198,32)" rx="2" ry="2" />
<text  x="1025.60" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffe5f9ab000) (42 samples, 9.77%)</title><rect x="1050.0" y="453" width="115.3" height="15.0" fill="rgb(223,110,5)" rx="2" ry="2" />
<text  x="1053.05" y="463.5" >MultiThreadedP..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="421" width="2.7" height="15.0" fill="rgb(232,25,31)" rx="2" ry="2" />
<text  x="1025.60" y="431.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="12.7" y="213" width="2.8" height="15.0" fill="rgb(215,74,49)" rx="2" ry="2" />
<text  x="15.74" y="223.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3948000b90) (11 samples, 2.56%)</title><rect x="246.0" y="277" width="30.2" height="15.0" fill="rgb(245,61,23)" rx="2" ry="2" />
<text  x="249.00" y="287.5" >_I..</text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (4 samples, 0.93%)</title><rect x="888.1" y="309" width="11.0" height="15.0" fill="rgb(233,83,51)" rx="2" ry="2" />
<text  x="891.14" y="319.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="986.9" y="229" width="8.3" height="15.0" fill="rgb(212,225,5)" rx="2" ry="2" />
<text  x="989.93" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (336 samples, 78.14%)</title><rect x="10.0" y="437" width="922.0" height="15.0" fill="rgb(206,149,36)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,</text>
</g>
<g >
<title>__GI___libc_read (10 samples, 2.33%)</title><rect x="248.7" y="245" width="27.5" height="15.0" fill="rgb(213,126,24)" rx="2" ry="2" />
<text  x="251.74" y="255.5" >_..</text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.23%)</title><rect x="1011.6" y="37" width="2.8" height="15.0" fill="rgb(215,90,41)" rx="2" ry="2" />
<text  x="1014.63" y="47.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffe5f9ab000) (1 samples, 0.23%)</title><rect x="1165.3" y="453" width="2.7" height="15.0" fill="rgb(244,176,37)" rx="2" ry="2" />
<text  x="1168.30" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="469" width="2.7" height="15.0" fill="rgb(211,15,17)" rx="2" ry="2" />
<text  x="1025.60" y="479.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3958000b90) (4 samples, 0.93%)</title><rect x="196.6" y="293" width="11.0" height="15.0" fill="rgb(217,91,34)" rx="2" ry="2" />
<text  x="199.60" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_doallocbuf(fp=fp@entry=0x7f3944000b90) (1 samples, 0.23%)</title><rect x="12.7" y="261" width="2.8" height="15.0" fill="rgb(241,202,13)" rx="2" ry="2" />
<text  x="15.74" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b6627c3290, (1 samples, 0.23%)</title><rect x="1187.3" y="229" width="2.7" height="15.0" fill="rgb(208,69,25)" rx="2" ry="2" />
<text  x="1190.26" y="239.5" ></text>
</g>
<g >
<title>__libc_fork() (16 samples, 3.72%)</title><rect x="413.4" y="309" width="43.9" height="15.0" fill="rgb(249,0,17)" rx="2" ry="2" />
<text  x="416.40" y="319.5" >__li..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1003.4" y="181" width="8.2" height="15.0" fill="rgb(248,110,45)" rx="2" ry="2" />
<text  x="1006.40" y="191.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f3958000020, (1 samples, 0.23%)</title><rect x="943.0" y="245" width="2.8" height="15.0" fill="rgb(236,177,40)" rx="2" ry="2" />
<text  x="946.02" y="255.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663ff098, (3 samples, 0.70%)</title><rect x="1011.6" y="325" width="8.3" height="15.0" fill="rgb(232,67,29)" rx="2" ry="2" />
<text  x="1014.63" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="962.2" y="165" width="8.3" height="15.0" fill="rgb(212,47,32)" rx="2" ry="2" />
<text  x="965.23" y="175.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.47%)</title><rect x="1014.4" y="101" width="5.5" height="15.0" fill="rgb(214,176,34)" rx="2" ry="2" />
<text  x="1017.37" y="111.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3950000b90) (4 samples, 0.93%)</title><rect x="871.7" y="341" width="11.0" height="15.0" fill="rgb(232,150,19)" rx="2" ry="2" />
<text  x="874.67" y="351.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.23%)</title><rect x="937.5" y="197" width="2.8" height="15.0" fill="rgb(214,11,36)" rx="2" ry="2" />
<text  x="940.53" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="485" width="2.8" height="15.0" fill="rgb(216,166,38)" rx="2" ry="2" />
<text  x="1028.35" y="495.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3958000b90) (7 samples, 1.63%)</title><rect x="899.1" y="325" width="19.2" height="15.0" fill="rgb(228,81,44)" rx="2" ry="2" />
<text  x="902.12" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_read (4 samples, 0.93%)</title><rect x="196.6" y="245" width="11.0" height="15.0" fill="rgb(221,68,2)" rx="2" ry="2" />
<text  x="199.60" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.23%)</title><rect x="978.7" y="85" width="2.7" height="15.0" fill="rgb(207,51,27)" rx="2" ry="2" />
<text  x="981.70" y="95.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3962a37cf0 (13 samples, 3.02%)</title><rect x="125.3" y="341" width="35.6" height="15.0" fill="rgb(232,147,42)" rx="2" ry="2" />
<text  x="128.26" y="351.5" >_IO..</text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.23%)</title><rect x="1011.6" y="53" width="2.8" height="15.0" fill="rgb(208,93,25)" rx="2" ry="2" />
<text  x="1014.63" y="63.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1003.4" y="197" width="8.2" height="15.0" fill="rgb(220,158,16)" rx="2" ry="2" />
<text  x="1006.40" y="207.5" ></text>
</g>
<g >
<title>__libc_fork (3 samples, 0.70%)</title><rect x="347.5" y="309" width="8.3" height="15.0" fill="rgb(253,136,19)" rx="2" ry="2" />
<text  x="350.53" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1011.6" y="213" width="8.3" height="15.0" fill="rgb(224,194,8)" rx="2" ry="2" />
<text  x="1014.63" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (1 samples, 0.23%)</title><rect x="1168.0" y="453" width="2.8" height="15.0" fill="rgb(238,71,27)" rx="2" ry="2" />
<text  x="1171.05" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (3 samples, 0.70%)</title><rect x="1179.0" y="277" width="8.3" height="15.0" fill="rgb(233,149,10)" rx="2" ry="2" />
<text  x="1182.02" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f3948000b90, (2 samples, 0.47%)</title><rect x="836.0" y="293" width="5.5" height="15.0" fill="rgb(220,88,31)" rx="2" ry="2" />
<text  x="839.00" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="389" width="2.8" height="15.0" fill="rgb(224,159,7)" rx="2" ry="2" />
<text  x="1028.35" y="399.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55b6663fe998, (3 samples, 0.70%)</title><rect x="970.5" y="325" width="8.2" height="15.0" fill="rgb(212,24,44)" rx="2" ry="2" />
<text  x="973.47" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="954.0" y="293" width="8.2" height="15.0" fill="rgb(248,222,45)" rx="2" ry="2" />
<text  x="957.00" y="303.5" ></text>
</g>
<g >
<title>__libc_fork() (16 samples, 3.72%)</title><rect x="479.3" y="309" width="43.9" height="15.0" fill="rgb(250,73,47)" rx="2" ry="2" />
<text  x="482.26" y="319.5" >__li..</text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139884461532928, (3 samples, 0.70%)</title><rect x="1170.8" y="309" width="8.2" height="15.0" fill="rgb(252,40,48)" rx="2" ry="2" />
<text  x="1173.79" y="319.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (24 samples, 5.58%)</title><rect x="954.0" y="469" width="65.9" height="15.0" fill="rgb(251,9,2)" rx="2" ry="2" />
<text  x="957.00" y="479.5" >std::th..</text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.23%)</title><rect x="940.3" y="213" width="2.7" height="15.0" fill="rgb(214,10,18)" rx="2" ry="2" />
<text  x="943.28" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="978.7" y="197" width="8.2" height="15.0" fill="rgb(205,161,50)" rx="2" ry="2" />
<text  x="981.70" y="207.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (1 samples, 0.23%)</title><rect x="654.9" y="293" width="2.7" height="15.0" fill="rgb(242,141,13)" rx="2" ry="2" />
<text  x="657.88" y="303.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3950000b90, (20 samples, 4.65%)</title><rect x="542.4" y="325" width="54.9" height="15.0" fill="rgb(246,170,46)" rx="2" ry="2" />
<text  x="545.37" y="335.5" >_IO_n..</text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="986.9" y="261" width="8.3" height="15.0" fill="rgb(241,98,22)" rx="2" ry="2" />
<text  x="989.93" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1011.6" y="197" width="8.3" height="15.0" fill="rgb(207,0,20)" rx="2" ry="2" />
<text  x="1014.63" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="373" width="2.8" height="15.0" fill="rgb(218,25,47)" rx="2" ry="2" />
<text  x="1028.35" y="383.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f3944000b90, (2 samples, 0.47%)</title><rect x="827.8" y="293" width="5.5" height="15.0" fill="rgb(226,147,25)" rx="2" ry="2" />
<text  x="830.77" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="654.9" y="277" width="2.7" height="15.0" fill="rgb(229,219,7)" rx="2" ry="2" />
<text  x="657.88" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3950000b90, (13 samples, 3.02%)</title><rect x="160.9" y="309" width="35.7" height="15.0" fill="rgb(213,109,9)" rx="2" ry="2" />
<text  x="163.93" y="319.5" >__G..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.70%)</title><rect x="1179.0" y="421" width="8.3" height="15.0" fill="rgb(227,159,28)" rx="2" ry="2" />
<text  x="1182.02" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="986.9" y="309" width="8.3" height="15.0" fill="rgb(208,12,17)" rx="2" ry="2" />
<text  x="989.93" y="319.5" ></text>
</g>
<g >
<title>??() (368 samples, 85.58%)</title><rect x="10.0" y="485" width="1009.9" height="15.0" fill="rgb(205,166,32)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >??()</text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.23%)</title><rect x="951.3" y="293" width="2.7" height="15.0" fill="rgb(208,49,12)" rx="2" ry="2" />
<text  x="954.26" y="303.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f3944000b90) (3 samples, 0.70%)</title><rect x="827.8" y="341" width="8.2" height="15.0" fill="rgb(236,196,10)" rx="2" ry="2" />
<text  x="830.77" y="351.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f395c000b90) (3 samples, 0.70%)</title><rect x="742.7" y="325" width="8.2" height="15.0" fill="rgb(205,215,47)" rx="2" ry="2" />
<text  x="745.70" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (3 samples, 0.70%)</title><rect x="1170.8" y="389" width="8.2" height="15.0" fill="rgb(208,206,9)" rx="2" ry="2" />
<text  x="1173.79" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.70%)</title><rect x="1179.0" y="437" width="8.3" height="15.0" fill="rgb(211,226,17)" rx="2" ry="2" />
<text  x="1182.02" y="447.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f394c000b90, (13 samples, 3.02%)</title><rect x="125.3" y="309" width="35.6" height="15.0" fill="rgb(233,4,5)" rx="2" ry="2" />
<text  x="128.26" y="319.5" >__G..</text>
</g>
<g >
<title>arch_fork (3 samples, 0.70%)</title><rect x="347.5" y="293" width="8.3" height="15.0" fill="rgb(240,139,15)" rx="2" ry="2" />
<text  x="350.53" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_read (14 samples, 3.26%)</title><rect x="276.2" y="261" width="38.4" height="15.0" fill="rgb(214,167,13)" rx="2" ry="2" />
<text  x="279.19" y="271.5" >__G..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="978.7" y="309" width="8.2" height="15.0" fill="rgb(206,183,12)" rx="2" ry="2" />
<text  x="981.70" y="319.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (2 samples, 0.47%)</title><rect x="841.5" y="309" width="5.5" height="15.0" fill="rgb(252,87,51)" rx="2" ry="2" />
<text  x="844.49" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (4 samples, 0.93%)</title><rect x="657.6" y="293" width="11.0" height="15.0" fill="rgb(237,153,27)" rx="2" ry="2" />
<text  x="660.63" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.70%)</title><rect x="995.2" y="133" width="8.2" height="15.0" fill="rgb(244,196,23)" rx="2" ry="2" />
<text  x="998.16" y="143.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (368 samples, 85.58%)</title><rect x="10.0" y="501" width="1009.9" height="15.0" fill="rgb(235,25,1)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (8 samples, 1.86%)</title><rect x="932.0" y="469" width="22.0" height="15.0" fill="rgb(212,164,25)" rx="2" ry="2" />
<text  x="935.05" y="479.5" >s..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="1003.4" y="165" width="8.2" height="15.0" fill="rgb(218,111,25)" rx="2" ry="2" />
<text  x="1006.40" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="929.3" y="325" width="2.7" height="15.0" fill="rgb(219,153,36)" rx="2" ry="2" />
<text  x="932.30" y="335.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f3948000020, (1 samples, 0.23%)</title><rect x="246.0" y="213" width="2.7" height="15.0" fill="rgb(248,140,10)" rx="2" ry="2" />
<text  x="249.00" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="476.5" y="293" width="2.8" height="15.0" fill="rgb(246,189,39)" rx="2" ry="2" />
<text  x="479.51" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.70%)</title><rect x="1179.0" y="245" width="8.3" height="15.0" fill="rgb(215,105,35)" rx="2" ry="2" />
<text  x="1182.02" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (16 samples, 3.72%)</title><rect x="479.3" y="277" width="43.9" height="15.0" fill="rgb(221,115,11)" rx="2" ry="2" />
<text  x="482.26" y="287.5" >__ll..</text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="986.9" y="213" width="8.3" height="15.0" fill="rgb(216,78,40)" rx="2" ry="2" />
<text  x="989.93" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="926.6" y="277" width="2.7" height="15.0" fill="rgb(238,34,53)" rx="2" ry="2" />
<text  x="929.56" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.23%)</title><rect x="1187.3" y="373" width="2.7" height="15.0" fill="rgb(211,151,5)" rx="2" ry="2" />
<text  x="1190.26" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.47%)</title><rect x="989.7" y="101" width="5.5" height="15.0" fill="rgb(234,121,37)" rx="2" ry="2" />
<text  x="992.67" y="111.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="978.7" y="229" width="8.2" height="15.0" fill="rgb(241,73,25)" rx="2" ry="2" />
<text  x="981.70" y="239.5" ></text>
</g>
<g >
<title>__GI__IO_link_in(fp=fp@entry=0x7f394c000b90) (1 samples, 0.23%)</title><rect x="476.5" y="309" width="2.8" height="15.0" fill="rgb(244,157,1)" rx="2" ry="2" />
<text  x="479.51" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.47%)</title><rect x="956.7" y="149" width="5.5" height="15.0" fill="rgb(229,159,33)" rx="2" ry="2" />
<text  x="959.74" y="159.5" ></text>
</g>
<g >
<title>_IO_new_file_close_it(fp=fp@entry=0x7f395c000b90) (2 samples, 0.47%)</title><rect x="918.3" y="309" width="5.5" height="15.0" fill="rgb(223,98,41)" rx="2" ry="2" />
<text  x="921.33" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="1003.4" y="277" width="8.2" height="15.0" fill="rgb(253,18,25)" rx="2" ry="2" />
<text  x="1006.40" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3950000b90) (13 samples, 3.02%)</title><rect x="160.9" y="293" width="35.7" height="15.0" fill="rgb(207,18,54)" rx="2" ry="2" />
<text  x="163.93" y="303.5" >__G..</text>
</g>
<g >
<title>pageRankComputationWithNetwork(computer=..., (50 samples, 11.63%)</title><rect x="1050.0" y="501" width="137.3" height="15.0" fill="rgb(210,59,18)" rx="2" ry="2" />
<text  x="1053.05" y="511.5" >pageRankComputati..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="986.9" y="293" width="8.3" height="15.0" fill="rgb(252,130,53)" rx="2" ry="2" />
<text  x="989.93" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f3954000b90, (2 samples, 0.47%)</title><rect x="882.7" y="293" width="5.4" height="15.0" fill="rgb(233,205,5)" rx="2" ry="2" />
<text  x="885.65" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (3 samples, 0.70%)</title><rect x="1179.0" y="357" width="8.3" height="15.0" fill="rgb(211,63,50)" rx="2" ry="2" />
<text  x="1182.02" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (3 samples, 0.70%)</title><rect x="1170.8" y="405" width="8.2" height="15.0" fill="rgb(219,56,10)" rx="2" ry="2" />
<text  x="1173.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.47%)</title><rect x="989.7" y="133" width="5.5" height="15.0" fill="rgb(215,63,9)" rx="2" ry="2" />
<text  x="992.67" y="143.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (336 samples, 78.14%)</title><rect x="10.0" y="469" width="922.0" height="15.0" fill="rgb(245,207,17)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankCo..</text>
</g>
<g >
<title>_IO_new_popen(command=0x7f395c000b20 (22 samples, 5.12%)</title><rect x="742.7" y="341" width="60.4" height="15.0" fill="rgb(253,40,50)" rx="2" ry="2" />
<text  x="745.70" y="351.5" >_IO_ne..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.70%)</title><rect x="970.5" y="133" width="8.2" height="15.0" fill="rgb(246,151,18)" rx="2" ry="2" />
<text  x="973.47" y="143.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.23%)</title><rect x="937.5" y="229" width="2.8" height="15.0" fill="rgb(208,128,45)" rx="2" ry="2" />
<text  x="940.53" y="239.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::push_back (8 samples, 1.86%)</title><rect x="932.0" y="373" width="22.0" height="15.0" fill="rgb(247,17,12)" rx="2" ry="2" />
<text  x="935.05" y="383.5" >M..</text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.23%)</title><rect x="929.3" y="229" width="2.7" height="15.0" fill="rgb(235,62,46)" rx="2" ry="2" />
<text  x="932.30" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="357" width="2.8" height="15.0" fill="rgb(247,184,40)" rx="2" ry="2" />
<text  x="1028.35" y="367.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (12 samples, 2.79%)</title><rect x="613.7" y="277" width="33.0" height="15.0" fill="rgb(243,188,42)" rx="2" ry="2" />
<text  x="616.72" y="287.5" >__..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="986.9" y="165" width="8.3" height="15.0" fill="rgb(216,227,13)" rx="2" ry="2" />
<text  x="989.93" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.23%)</title><rect x="1168.0" y="437" width="2.8" height="15.0" fill="rgb(211,69,5)" rx="2" ry="2" />
<text  x="1171.05" y="447.5" ></text>
</g>
<g >
<title>_IO_getc(fp=0x7f39653fea00 (1 samples, 0.23%)</title><rect x="1041.8" y="437" width="2.8" height="15.0" fill="rgb(251,47,8)" rx="2" ry="2" />
<text  x="1044.81" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="978.7" y="245" width="8.2" height="15.0" fill="rgb(230,222,12)" rx="2" ry="2" />
<text  x="981.70" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.23%)</title><rect x="932.0" y="293" width="2.8" height="15.0" fill="rgb(231,2,34)" rx="2" ry="2" />
<text  x="935.05" y="303.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3940000b90) (19 samples, 4.42%)</title><rect x="73.1" y="277" width="52.2" height="15.0" fill="rgb(242,204,23)" rx="2" ry="2" />
<text  x="76.12" y="287.5" >_IO_n..</text>
</g>
<g >
<title>_int_free(av=0x7f3954000020, (2 samples, 0.47%)</title><rect x="882.7" y="277" width="5.4" height="15.0" fill="rgb(229,152,39)" rx="2" ry="2" />
<text  x="885.65" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3948000b90) (2 samples, 0.47%)</title><rect x="841.5" y="293" width="5.5" height="15.0" fill="rgb(225,24,15)" rx="2" ry="2" />
<text  x="844.49" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139884486711040, (42 samples, 9.77%)</title><rect x="1050.0" y="421" width="115.3" height="15.0" fill="rgb(248,94,6)" rx="2" ry="2" />
<text  x="1053.05" y="431.5" >__GI___pthread..</text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f395c000b90, (19 samples, 4.42%)</title><rect x="750.9" y="325" width="52.2" height="15.0" fill="rgb(212,60,38)" rx="2" ry="2" />
<text  x="753.93" y="335.5" >_IO_n..</text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3944000b90) (22 samples, 5.12%)</title><rect x="12.7" y="293" width="60.4" height="15.0" fill="rgb(219,100,10)" rx="2" ry="2" />
<text  x="15.74" y="303.5" >__GI__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="934.8" y="261" width="2.7" height="15.0" fill="rgb(207,17,34)" rx="2" ry="2" />
<text  x="937.79" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_getline(fp=fp@entry=0x7f3954000b90, (14 samples, 3.26%)</title><rect x="207.6" y="325" width="38.4" height="15.0" fill="rgb(233,132,7)" rx="2" ry="2" />
<text  x="210.58" y="335.5" >__G..</text>
</g>
<g >
<title>Page::~Page (1 samples, 0.23%)</title><rect x="1187.3" y="405" width="2.7" height="15.0" fill="rgb(218,85,52)" rx="2" ry="2" />
<text  x="1190.26" y="415.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (8 samples, 1.86%)</title><rect x="380.5" y="293" width="21.9" height="15.0" fill="rgb(223,37,27)" rx="2" ry="2" />
<text  x="383.47" y="303.5" >_..</text>
</g>
<g >
<title>__lll_lock_wait_private (15 samples, 3.49%)</title><rect x="750.9" y="277" width="41.2" height="15.0" fill="rgb(214,220,50)" rx="2" ry="2" />
<text  x="753.93" y="287.5" >__l..</text>
</g>
<g >
<title>sysmalloc (1 samples, 0.23%)</title><rect x="940.3" y="229" width="2.7" height="15.0" fill="rgb(210,154,18)" rx="2" ry="2" />
<text  x="943.28" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="962.2" y="197" width="8.3" height="15.0" fill="rgb(226,77,34)" rx="2" ry="2" />
<text  x="965.23" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.23%)</title><rect x="929.3" y="277" width="2.7" height="15.0" fill="rgb(210,223,11)" rx="2" ry="2" />
<text  x="932.30" y="287.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.23%)</title><rect x="937.5" y="213" width="2.8" height="15.0" fill="rgb(229,211,43)" rx="2" ry="2" />
<text  x="940.53" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="437" width="2.7" height="15.0" fill="rgb(223,215,7)" rx="2" ry="2" />
<text  x="1190.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.47%)</title><rect x="989.7" y="85" width="5.5" height="15.0" fill="rgb(220,188,15)" rx="2" ry="2" />
<text  x="992.67" y="95.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (4 samples, 0.93%)</title><rect x="871.7" y="309" width="11.0" height="15.0" fill="rgb(248,110,14)" rx="2" ry="2" />
<text  x="874.67" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=8192) (1 samples, 0.23%)</title><rect x="945.8" y="261" width="2.7" height="15.0" fill="rgb(244,89,35)" rx="2" ry="2" />
<text  x="948.77" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms() (1 samples, 0.23%)</title><rect x="1025.3" y="325" width="2.8" height="15.0" fill="rgb(219,38,4)" rx="2" ry="2" />
<text  x="1028.35" y="335.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f396423acf0 (14 samples, 3.26%)</title><rect x="207.6" y="341" width="38.4" height="15.0" fill="rgb(208,194,35)" rx="2" ry="2" />
<text  x="210.58" y="351.5" >_IO..</text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.47%)</title><rect x="1014.4" y="117" width="5.5" height="15.0" fill="rgb(230,173,52)" rx="2" ry="2" />
<text  x="1017.37" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="978.7" y="277" width="8.2" height="15.0" fill="rgb(233,209,50)" rx="2" ry="2" />
<text  x="981.70" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1008.9" y="101" width="2.7" height="15.0" fill="rgb(207,25,34)" rx="2" ry="2" />
<text  x="1011.88" y="111.5" ></text>
</g>
<g >
<title>clone() (368 samples, 85.58%)</title><rect x="10.0" y="517" width="1009.9" height="15.0" fill="rgb(247,53,11)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >clone()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="421" width="2.8" height="15.0" fill="rgb(253,63,5)" rx="2" ry="2" />
<text  x="1028.35" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1011.6" y="181" width="8.3" height="15.0" fill="rgb(219,228,0)" rx="2" ry="2" />
<text  x="1014.63" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="978.7" y="165" width="8.2" height="15.0" fill="rgb(252,211,39)" rx="2" ry="2" />
<text  x="981.70" y="175.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.70%)</title><rect x="995.2" y="117" width="8.2" height="15.0" fill="rgb(248,92,29)" rx="2" ry="2" />
<text  x="998.16" y="127.5" ></text>
</g>
<g >
<title>__libc_fork (2 samples, 0.47%)</title><rect x="523.2" y="309" width="5.5" height="15.0" fill="rgb(219,20,17)" rx="2" ry="2" />
<text  x="526.16" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 0.70%)</title><rect x="970.5" y="165" width="8.2" height="15.0" fill="rgb(251,220,19)" rx="2" ry="2" />
<text  x="973.47" y="175.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="986.9" y="181" width="8.3" height="15.0" fill="rgb(218,64,51)" rx="2" ry="2" />
<text  x="989.93" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.47%)</title><rect x="1003.4" y="117" width="5.5" height="15.0" fill="rgb(208,154,47)" rx="2" ry="2" />
<text  x="1006.40" y="127.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f394c000b90) (9 samples, 2.09%)</title><rect x="847.0" y="325" width="24.7" height="15.0" fill="rgb(238,143,12)" rx="2" ry="2" />
<text  x="849.98" y="335.5" >_..</text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (9 samples, 2.09%)</title><rect x="322.8" y="293" width="24.7" height="15.0" fill="rgb(214,158,46)" rx="2" ry="2" />
<text  x="325.84" y="303.5" >_..</text>
</g>
<g >
<title>__GI__IO_file_doallocate(fp=0x7f3944000b90) (1 samples, 0.23%)</title><rect x="12.7" y="245" width="2.8" height="15.0" fill="rgb(205,42,18)" rx="2" ry="2" />
<text  x="15.74" y="255.5" ></text>
</g>
<g >
<title>__new_pclose(fp=fp@entry=0x7f394c000b90) (9 samples, 2.09%)</title><rect x="847.0" y="341" width="24.7" height="15.0" fill="rgb(232,11,11)" rx="2" ry="2" />
<text  x="849.98" y="351.5" >_..</text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="836.0" y="261" width="5.5" height="15.0" fill="rgb(206,200,29)" rx="2" ry="2" />
<text  x="839.00" y="271.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (15 samples, 3.49%)</title><rect x="668.6" y="277" width="41.2" height="15.0" fill="rgb(231,54,9)" rx="2" ry="2" />
<text  x="671.60" y="287.5" >__l..</text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3950000b90) (4 samples, 0.93%)</title><rect x="871.7" y="293" width="11.0" height="15.0" fill="rgb(239,160,18)" rx="2" ry="2" />
<text  x="874.67" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3940000b90) (19 samples, 4.42%)</title><rect x="73.1" y="293" width="52.2" height="15.0" fill="rgb(212,221,34)" rx="2" ry="2" />
<text  x="76.12" y="303.5" >__GI_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="10.0" y="341" width="2.7" height="15.0" fill="rgb(219,195,3)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__GI__IO_file_doallocate(fp=0x7f3948000b90) (1 samples, 0.23%)</title><rect x="246.0" y="245" width="2.7" height="15.0" fill="rgb(216,197,25)" rx="2" ry="2" />
<text  x="249.00" y="255.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3954000b90) (6 samples, 1.40%)</title><rect x="882.7" y="325" width="16.4" height="15.0" fill="rgb(218,25,50)" rx="2" ry="2" />
<text  x="885.65" y="335.5" ></text>
</g>
<g >
<title>Network::~Network(this=0x7ffe5f9ab5e0, (1 samples, 0.23%)</title><rect x="1187.3" y="501" width="2.7" height="15.0" fill="rgb(214,125,18)" rx="2" ry="2" />
<text  x="1190.26" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="986.9" y="277" width="8.3" height="15.0" fill="rgb(226,128,10)" rx="2" ry="2" />
<text  x="989.93" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="1003.4" y="309" width="8.2" height="15.0" fill="rgb(233,178,0)" rx="2" ry="2" />
<text  x="1006.40" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="986.9" y="197" width="8.3" height="15.0" fill="rgb(244,1,45)" rx="2" ry="2" />
<text  x="989.93" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.47%)</title><rect x="981.4" y="85" width="5.5" height="15.0" fill="rgb(249,30,34)" rx="2" ry="2" />
<text  x="984.44" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.23%)</title><rect x="1008.9" y="133" width="2.7" height="15.0" fill="rgb(211,83,44)" rx="2" ry="2" />
<text  x="1011.88" y="143.5" ></text>
</g>
<g >
<title>_IO_new_popen(command=0x7f395c001b50 (1 samples, 0.23%)</title><rect x="803.1" y="341" width="2.7" height="15.0" fill="rgb(224,144,34)" rx="2" ry="2" />
<text  x="806.07" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="1011.6" y="261" width="8.3" height="15.0" fill="rgb(240,186,30)" rx="2" ry="2" />
<text  x="1014.63" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="453" width="2.7" height="15.0" fill="rgb(228,103,16)" rx="2" ry="2" />
<text  x="1025.60" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.70%)</title><rect x="962.2" y="85" width="8.3" height="15.0" fill="rgb(251,199,6)" rx="2" ry="2" />
<text  x="965.23" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.23%)</title><rect x="986.9" y="117" width="2.8" height="15.0" fill="rgb(211,138,24)" rx="2" ry="2" />
<text  x="989.93" y="127.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="995.2" y="181" width="8.2" height="15.0" fill="rgb(244,196,5)" rx="2" ry="2" />
<text  x="998.16" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.23%)</title><rect x="934.8" y="213" width="2.7" height="15.0" fill="rgb(223,205,33)" rx="2" ry="2" />
<text  x="937.79" y="223.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f394c000b90) (1 samples, 0.23%)</title><rect x="476.5" y="325" width="2.8" height="15.0" fill="rgb(226,28,5)" rx="2" ry="2" />
<text  x="479.51" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f3948000b90) (11 samples, 2.56%)</title><rect x="246.0" y="293" width="30.2" height="15.0" fill="rgb(234,147,37)" rx="2" ry="2" />
<text  x="249.00" y="303.5" >__..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (336 samples, 78.14%)</title><rect x="10.0" y="405" width="922.0" height="15.0" fill="rgb(230,165,6)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >std::__invoke_impl&lt;void,</text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="995.2" y="197" width="8.2" height="15.0" fill="rgb(207,46,23)" rx="2" ry="2" />
<text  x="998.16" y="207.5" ></text>
</g>
<g >
<title>grow_heap(diff=8192, (1 samples, 0.23%)</title><rect x="945.8" y="213" width="2.7" height="15.0" fill="rgb(231,170,46)" rx="2" ry="2" />
<text  x="948.77" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (3 samples, 0.70%)</title><rect x="847.0" y="261" width="8.2" height="15.0" fill="rgb(211,83,11)" rx="2" ry="2" />
<text  x="849.98" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=&lt;optimized (5 samples, 1.16%)</title><rect x="904.6" y="309" width="13.7" height="15.0" fill="rgb(243,107,51)" rx="2" ry="2" />
<text  x="907.60" y="319.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3964a3bcf0 (11 samples, 2.56%)</title><rect x="246.0" y="341" width="30.2" height="15.0" fill="rgb(234,17,35)" rx="2" ry="2" />
<text  x="249.00" y="351.5" >_I..</text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f3940000b90, (2 samples, 0.47%)</title><rect x="805.8" y="293" width="5.5" height="15.0" fill="rgb(225,75,17)" rx="2" ry="2" />
<text  x="808.81" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (336 samples, 78.14%)</title><rect x="10.0" y="453" width="922.0" height="15.0" fill="rgb(211,167,15)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="437" width="2.8" height="15.0" fill="rgb(207,79,26)" rx="2" ry="2" />
<text  x="1028.35" y="447.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.23%)</title><rect x="934.8" y="181" width="2.7" height="15.0" fill="rgb(225,140,1)" rx="2" ry="2" />
<text  x="937.79" y="191.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="1003.4" y="213" width="8.2" height="15.0" fill="rgb(249,8,17)" rx="2" ry="2" />
<text  x="1006.40" y="223.5" ></text>
</g>
<g >
<title>StdinGenerator::generateNetworkOfSize(this=this@entry=0x7ffe5f9ab5c0, (1 samples, 0.23%)</title><rect x="1019.9" y="501" width="2.7" height="15.0" fill="rgb(232,32,20)" rx="2" ry="2" />
<text  x="1022.86" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=41665, (1 samples, 0.23%)</title><rect x="1025.3" y="341" width="2.8" height="15.0" fill="rgb(225,6,5)" rx="2" ry="2" />
<text  x="1028.35" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="995.2" y="277" width="8.2" height="15.0" fill="rgb(229,118,45)" rx="2" ry="2" />
<text  x="998.16" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_read (21 samples, 4.88%)</title><rect x="15.5" y="245" width="57.6" height="15.0" fill="rgb(245,186,48)" rx="2" ry="2" />
<text  x="18.49" y="255.5" >__GI__..</text>
</g>
<g >
<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (24 samples, 5.58%)</title><rect x="954.0" y="389" width="65.9" height="15.0" fill="rgb(219,149,43)" rx="2" ry="2" />
<text  x="957.00" y="399.5" >std::__..</text>
</g>
<g >
<title>__GI__IO_default_uflow(fp=0x7f39653fea00 (2 samples, 0.47%)</title><rect x="1044.6" y="437" width="5.4" height="15.0" fill="rgb(214,175,4)" rx="2" ry="2" />
<text  x="1047.56" y="447.5" ></text>
</g>
<g >
<title>__libc_fork() (15 samples, 3.49%)</title><rect x="750.9" y="309" width="41.2" height="15.0" fill="rgb(226,85,22)" rx="2" ry="2" />
<text  x="753.93" y="319.5" >__l..</text>
</g>
<g >
<title>_int_free(av=0x7f3954000020, (1 samples, 0.23%)</title><rect x="948.5" y="277" width="2.8" height="15.0" fill="rgb(244,88,16)" rx="2" ry="2" />
<text  x="951.51" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.47%)</title><rect x="981.4" y="133" width="5.5" height="15.0" fill="rgb(250,124,28)" rx="2" ry="2" />
<text  x="984.44" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1187.3" y="277" width="2.7" height="15.0" fill="rgb(253,55,50)" rx="2" ry="2" />
<text  x="1190.26" y="287.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3944000b90) (22 samples, 5.12%)</title><rect x="12.7" y="277" width="60.4" height="15.0" fill="rgb(231,91,28)" rx="2" ry="2" />
<text  x="15.74" y="287.5" >_IO_ne..</text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.23%)</title><rect x="1187.3" y="309" width="2.7" height="15.0" fill="rgb(222,42,48)" rx="2" ry="2" />
<text  x="1190.26" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.23%)</title><rect x="978.7" y="101" width="2.7" height="15.0" fill="rgb(213,57,21)" rx="2" ry="2" />
<text  x="981.70" y="111.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (3 samples, 0.70%)</title><rect x="1170.8" y="469" width="8.2" height="15.0" fill="rgb(214,115,44)" rx="2" ry="2" />
<text  x="1173.79" y="479.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f3950000020, (1 samples, 0.23%)</title><rect x="937.5" y="245" width="2.8" height="15.0" fill="rgb(207,21,15)" rx="2" ry="2" />
<text  x="940.53" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (3 samples, 0.70%)</title><rect x="742.7" y="293" width="8.2" height="15.0" fill="rgb(220,208,0)" rx="2" ry="2" />
<text  x="745.70" y="303.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.23%)</title><rect x="943.0" y="229" width="2.8" height="15.0" fill="rgb(247,8,51)" rx="2" ry="2" />
<text  x="946.02" y="239.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7f395c000b90, (2 samples, 0.47%)</title><rect x="918.3" y="293" width="5.5" height="15.0" fill="rgb(251,172,35)" rx="2" ry="2" />
<text  x="921.33" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="951.3" y="261" width="2.7" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="954.26" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (3 samples, 0.70%)</title><rect x="970.5" y="277" width="8.2" height="15.0" fill="rgb(253,219,23)" rx="2" ry="2" />
<text  x="973.47" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_read (13 samples, 3.02%)</title><rect x="160.9" y="261" width="35.7" height="15.0" fill="rgb(253,90,4)" rx="2" ry="2" />
<text  x="163.93" y="271.5" >__G..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.70%)</title><rect x="1179.0" y="453" width="8.3" height="15.0" fill="rgb(227,162,45)" rx="2" ry="2" />
<text  x="1182.02" y="463.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (2 samples, 0.47%)</title><rect x="805.8" y="261" width="5.5" height="15.0" fill="rgb(216,52,42)" rx="2" ry="2" />
<text  x="808.81" y="271.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.23%)</title><rect x="542.4" y="309" width="2.7" height="15.0" fill="rgb(251,20,15)" rx="2" ry="2" />
<text  x="545.37" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (11 samples, 2.56%)</title><rect x="545.1" y="277" width="30.2" height="15.0" fill="rgb(227,46,14)" rx="2" ry="2" />
<text  x="548.12" y="287.5" >__..</text>
</g>
<g >
<title>__GI__IO_getline_info(fp=fp@entry=0x7f3944000b90, (22 samples, 5.12%)</title><rect x="12.7" y="309" width="60.4" height="15.0" fill="rgb(243,100,6)" rx="2" ry="2" />
<text  x="15.74" y="319.5" >__GI__..</text>
</g>
<g >
<title>_IO_new_popen(command=0x7f3954002d20 (1 samples, 0.23%)</title><rect x="654.9" y="341" width="2.7" height="15.0" fill="rgb(229,187,10)" rx="2" ry="2" />
<text  x="657.88" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1187.3" y="293" width="2.7" height="15.0" fill="rgb(209,201,54)" rx="2" ry="2" />
<text  x="1190.26" y="303.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3950000b90) (13 samples, 3.02%)</title><rect x="160.9" y="277" width="35.7" height="15.0" fill="rgb(247,91,41)" rx="2" ry="2" />
<text  x="163.93" y="287.5" >_IO..</text>
</g>
<g >
<title>__GI___libc_read (13 samples, 3.02%)</title><rect x="125.3" y="245" width="35.6" height="15.0" fill="rgb(221,135,38)" rx="2" ry="2" />
<text  x="128.26" y="255.5" >__G..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.23%)</title><rect x="1011.6" y="117" width="2.8" height="15.0" fill="rgb(226,209,34)" rx="2" ry="2" />
<text  x="1014.63" y="127.5" ></text>
</g>
<g >
<title>free_perturb (1 samples, 0.23%)</title><rect x="1184.5" y="133" width="2.8" height="15.0" fill="rgb(243,156,36)" rx="2" ry="2" />
<text  x="1187.51" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_read(fd=0, (2 samples, 0.47%)</title><rect x="1044.6" y="405" width="5.4" height="15.0" fill="rgb(226,132,32)" rx="2" ry="2" />
<text  x="1047.56" y="415.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop_restore(buffer=0x7f3963a39c00, (1 samples, 0.23%)</title><rect x="915.6" y="277" width="2.7" height="15.0" fill="rgb(209,198,9)" rx="2" ry="2" />
<text  x="918.58" y="287.5" ></text>
</g>
<g >
<title>_IO_fgets(buf=0x7f3963a39cf0 (4 samples, 0.93%)</title><rect x="196.6" y="341" width="11.0" height="15.0" fill="rgb(220,99,2)" rx="2" ry="2" />
<text  x="199.60" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.23%)</title><rect x="1022.6" y="341" width="2.7" height="15.0" fill="rgb(237,97,42)" rx="2" ry="2" />
<text  x="1025.60" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1025.3" y="405" width="2.8" height="15.0" fill="rgb(217,196,33)" rx="2" ry="2" />
<text  x="1028.35" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (5 samples, 1.16%)</title><rect x="937.5" y="325" width="13.8" height="15.0" fill="rgb(243,79,18)" rx="2" ry="2" />
<text  x="940.53" y="335.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (24 samples, 5.58%)</title><rect x="954.0" y="357" width="65.9" height="15.0" fill="rgb(221,45,29)" rx="2" ry="2" />
<text  x="957.00" y="367.5" >std::ca..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (4 samples, 0.93%)</title><rect x="937.5" y="293" width="11.0" height="15.0" fill="rgb(232,118,13)" rx="2" ry="2" />
<text  x="940.53" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.23%)</title><rect x="1187.3" y="485" width="2.7" height="15.0" fill="rgb(228,138,29)" rx="2" ry="2" />
<text  x="1190.26" y="495.5" ></text>
</g>
<g >
<title>__GI__IO_un_link(fp=0x7f3940000b90) (6 samples, 1.40%)</title><rect x="811.3" y="293" width="16.5" height="15.0" fill="rgb(206,115,12)" rx="2" ry="2" />
<text  x="814.30" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (3 samples, 0.70%)</title><rect x="954.0" y="245" width="8.2" height="15.0" fill="rgb(216,93,36)" rx="2" ry="2" />
<text  x="957.00" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.23%)</title><rect x="1187.3" y="245" width="2.7" height="15.0" fill="rgb(215,181,36)" rx="2" ry="2" />
<text  x="1190.26" y="255.5" ></text>
</g>
<g >
<title>__GI__IO_sputbackc (1 samples, 0.23%)</title><rect x="1036.3" y="453" width="2.8" height="15.0" fill="rgb(213,76,51)" rx="2" ry="2" />
<text  x="1039.33" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.23%)</title><rect x="934.8" y="325" width="2.7" height="15.0" fill="rgb(238,201,10)" rx="2" ry="2" />
<text  x="937.79" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.47%)</title><rect x="1014.4" y="133" width="5.5" height="15.0" fill="rgb(226,136,53)" rx="2" ry="2" />
<text  x="1017.37" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.23%)</title><rect x="929.3" y="245" width="2.7" height="15.0" fill="rgb(254,47,1)" rx="2" ry="2" />
<text  x="932.30" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55b6663b0ae0) (1 samples, 0.23%)</title><rect x="932.0" y="309" width="2.8" height="15.0" fill="rgb(232,107,4)" rx="2" ry="2" />
<text  x="935.05" y="319.5" ></text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f395c000b90, (1 samples, 0.23%)</title><rect x="803.1" y="325" width="2.7" height="15.0" fill="rgb(219,101,12)" rx="2" ry="2" />
<text  x="806.07" y="335.5" ></text>
</g>
<g >
<title>__libc_fork() (11 samples, 2.56%)</title><rect x="545.1" y="309" width="30.2" height="15.0" fill="rgb(234,158,3)" rx="2" ry="2" />
<text  x="548.12" y="319.5" >__..</text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f395c000b90) (14 samples, 3.26%)</title><rect x="276.2" y="277" width="38.4" height="15.0" fill="rgb(231,187,40)" rx="2" ry="2" />
<text  x="279.19" y="287.5" >_IO..</text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (15 samples, 3.49%)</title><rect x="750.9" y="293" width="41.2" height="15.0" fill="rgb(220,168,45)" rx="2" ry="2" />
<text  x="753.93" y="303.5" >__r..</text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f3944000b90) (3 samples, 0.70%)</title><rect x="827.8" y="325" width="8.2" height="15.0" fill="rgb(222,160,22)" rx="2" ry="2" />
<text  x="830.77" y="335.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3940000b90) (3 samples, 0.70%)</title><rect x="314.6" y="325" width="8.2" height="15.0" fill="rgb(241,203,36)" rx="2" ry="2" />
<text  x="317.60" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.23%)</title><rect x="1008.9" y="117" width="2.7" height="15.0" fill="rgb(208,32,11)" rx="2" ry="2" />
<text  x="1011.88" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_read (14 samples, 3.26%)</title><rect x="207.6" y="245" width="38.4" height="15.0" fill="rgb(246,141,3)" rx="2" ry="2" />
<text  x="210.58" y="255.5" >__G..</text>
</g>
<g >
<title>_IO_new_proc_open(fp=fp@entry=0x7f3954000b90, (15 samples, 3.49%)</title><rect x="613.7" y="325" width="41.2" height="15.0" fill="rgb(239,160,22)" rx="2" ry="2" />
<text  x="616.72" y="335.5" >_IO..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (3 samples, 0.70%)</title><rect x="1011.6" y="293" width="8.3" height="15.0" fill="rgb(227,161,30)" rx="2" ry="2" />
<text  x="1014.63" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.23%)</title><rect x="934.8" y="309" width="2.7" height="15.0" fill="rgb(233,50,27)" rx="2" ry="2" />
<text  x="937.79" y="319.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow(fp=0x7f3958000b90) (4 samples, 0.93%)</title><rect x="196.6" y="277" width="11.0" height="15.0" fill="rgb(249,202,26)" rx="2" ry="2" />
<text  x="199.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1022.6" y="405" width="2.7" height="15.0" fill="rgb(247,117,40)" rx="2" ry="2" />
<text  x="1025.60" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.23%)</title><rect x="1187.3" y="261" width="2.7" height="15.0" fill="rgb(207,81,16)" rx="2" ry="2" />
<text  x="1190.26" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_list_lock() (1 samples, 0.23%)</title><rect x="375.0" y="293" width="2.7" height="15.0" fill="rgb(222,160,5)" rx="2" ry="2" />
<text  x="377.98" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (3 samples, 0.70%)</title><rect x="970.5" y="261" width="8.2" height="15.0" fill="rgb(252,41,30)" rx="2" ry="2" />
<text  x="973.47" y="271.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.23%)</title><rect x="1181.8" y="149" width="2.7" height="15.0" fill="rgb(231,40,14)" rx="2" ry="2" />
<text  x="1184.77" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f395c000020, (1 samples, 0.23%)</title><rect x="945.8" y="245" width="2.7" height="15.0" fill="rgb(220,3,54)" rx="2" ry="2" />
<text  x="948.77" y="255.5" ></text>
</g>
<g >
<title>_IO_new_fclose(fp=fp@entry=0x7f395c000b90) (4 samples, 0.93%)</title><rect x="918.3" y="325" width="11.0" height="15.0" fill="rgb(222,223,13)" rx="2" ry="2" />
<text  x="921.33" y="335.5" ></text>
</g>
<g >
<title>__libc_fork (8 samples, 1.86%)</title><rect x="575.3" y="309" width="22.0" height="15.0" fill="rgb(252,128,15)" rx="2" ry="2" />
<text  x="578.30" y="319.5" >_..</text>
</g>
<g >
<title>_IO_new_file_init_internal(fp=fp@entry=0x7f3950000b90) (5 samples, 1.16%)</title><rect x="528.7" y="325" width="13.7" height="15.0" fill="rgb(225,215,22)" rx="2" ry="2" />
<text  x="531.65" y="335.5" ></text>
</g>
</g>
</svg>
