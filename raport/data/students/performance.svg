<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>_int_free(av=0x7f800c000020, (1 samples, 0.09%)</title><rect x="21.9" y="293" width="1.0" height="15.0" fill="rgb(233,128,6)" rx="2" ry="2" />
<text  x="24.86" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (6 samples, 0.55%)</title><rect x="988.3" y="389" width="6.5" height="15.0" fill="rgb(235,137,15)" rx="2" ry="2" />
<text  x="991.30" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (83 samples, 7.59%)</title><rect x="235.4" y="277" width="89.6" height="15.0" fill="rgb(253,95,13)" rx="2" ry="2" />
<text  x="238.43" y="287.5" >std::threa..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (8 samples, 0.73%)</title><rect x="851.3" y="453" width="8.6" height="15.0" fill="rgb(228,117,27)" rx="2" ry="2" />
<text  x="854.32" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="894.5" y="341" width="1.0" height="15.0" fill="rgb(205,54,9)" rx="2" ry="2" />
<text  x="897.46" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="908.5" y="405" width="1.1" height="15.0" fill="rgb(236,190,40)" rx="2" ry="2" />
<text  x="911.48" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.18%)</title><rect x="986.1" y="389" width="2.2" height="15.0" fill="rgb(224,74,18)" rx="2" ry="2" />
<text  x="989.14" y="399.5" ></text>
</g>
<g >
<title>std::mutex::lock (10 samples, 0.91%)</title><rect x="100.6" y="165" width="10.8" height="15.0" fill="rgb(245,31,33)" rx="2" ry="2" />
<text  x="103.60" y="175.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.09%)</title><rect x="1144.7" y="485" width="1.1" height="15.0" fill="rgb(221,107,10)" rx="2" ry="2" />
<text  x="1147.70" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="900.9" y="405" width="2.2" height="15.0" fill="rgb(233,197,54)" rx="2" ry="2" />
<text  x="903.93" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (2 samples, 0.18%)</title><rect x="889.1" y="421" width="2.1" height="15.0" fill="rgb(205,78,20)" rx="2" ry="2" />
<text  x="892.07" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="664.7" y="485" width="1.1" height="15.0" fill="rgb(218,91,15)" rx="2" ry="2" />
<text  x="667.72" y="495.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (95 samples, 8.68%)</title><rect x="556.9" y="197" width="102.4" height="15.0" fill="rgb(245,211,5)" rx="2" ry="2" />
<text  x="559.86" y="207.5" >std::unorder..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (11 samples, 1.01%)</title><rect x="1012.0" y="437" width="11.9" height="15.0" fill="rgb(237,206,47)" rx="2" ry="2" />
<text  x="1015.03" y="447.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="10.0" y="501" width="17.3" height="15.0" fill="rgb(242,216,45)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="945.2" y="277" width="1.0" height="15.0" fill="rgb(209,157,20)" rx="2" ry="2" />
<text  x="948.16" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.46%)</title><rect x="1181.4" y="309" width="5.4" height="15.0" fill="rgb(206,39,52)" rx="2" ry="2" />
<text  x="1184.37" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="867.5" y="453" width="1.1" height="15.0" fill="rgb(232,220,10)" rx="2" ry="2" />
<text  x="870.50" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="1149.0" y="453" width="2.2" height="15.0" fill="rgb(235,213,21)" rx="2" ry="2" />
<text  x="1152.01" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802679c7a0, (1 samples, 0.09%)</title><rect x="798.5" y="197" width="1.0" height="15.0" fill="rgb(250,179,49)" rx="2" ry="2" />
<text  x="801.46" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee1aa6d1d8, (1 samples, 0.09%)</title><rect x="1132.8" y="293" width="1.1" height="15.0" fill="rgb(245,142,13)" rx="2" ry="2" />
<text  x="1135.83" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.73%)</title><rect x="939.8" y="421" width="8.6" height="15.0" fill="rgb(217,154,42)" rx="2" ry="2" />
<text  x="942.76" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (125 samples, 11.43%)</title><rect x="100.6" y="245" width="134.8" height="15.0" fill="rgb(240,204,44)" rx="2" ry="2" />
<text  x="103.60" y="255.5" >std::__invoke&lt;Mul..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee30c021d8, (53 samples, 4.84%)</title><rect x="733.7" y="373" width="57.2" height="15.0" fill="rgb(254,148,2)" rx="2" ry="2" />
<text  x="736.75" y="383.5" >__pthr..</text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e650 (1 samples, 0.09%)</title><rect x="1138.2" y="453" width="1.1" height="15.0" fill="rgb(236,34,20)" rx="2" ry="2" />
<text  x="1141.23" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="946.2" y="293" width="1.1" height="15.0" fill="rgb(206,187,38)" rx="2" ry="2" />
<text  x="949.23" y="303.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3fe5c8, (5 samples, 0.46%)</title><rect x="726.2" y="373" width="5.4" height="15.0" fill="rgb(237,96,26)" rx="2" ry="2" />
<text  x="729.20" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="342.2" y="149" width="1.1" height="15.0" fill="rgb(210,37,20)" rx="2" ry="2" />
<text  x="345.21" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="21.9" y="325" width="1.0" height="15.0" fill="rgb(237,114,1)" rx="2" ry="2" />
<text  x="24.86" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.82%)</title><rect x="878.3" y="421" width="9.7" height="15.0" fill="rgb(231,169,23)" rx="2" ry="2" />
<text  x="881.28" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="975.4" y="405" width="1.0" height="15.0" fill="rgb(229,100,40)" rx="2" ry="2" />
<text  x="978.36" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (8 samples, 0.73%)</title><rect x="939.8" y="373" width="8.6" height="15.0" fill="rgb(236,189,38)" rx="2" ry="2" />
<text  x="942.76" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;,PageId*&gt; (1 samples, 0.09%)</title><rect x="892.3" y="405" width="1.1" height="15.0" fill="rgb(230,78,2)" rx="2" ry="2" />
<text  x="895.30" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (30 samples, 2.74%)</title><rect x="907.4" y="485" width="32.4" height="15.0" fill="rgb(231,4,13)" rx="2" ry="2" />
<text  x="910.40" y="495.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="875.0" y="373" width="1.1" height="15.0" fill="rgb(214,92,53)" rx="2" ry="2" />
<text  x="878.05" y="383.5" ></text>
</g>
<g >
<title>std::(__val=134413) (1 samples, 0.09%)</title><rect x="1138.2" y="485" width="1.1" height="15.0" fill="rgb(250,120,15)" rx="2" ry="2" />
<text  x="1141.23" y="495.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (1 samples, 0.09%)</title><rect x="234.4" y="213" width="1.0" height="15.0" fill="rgb(225,21,27)" rx="2" ry="2" />
<text  x="237.35" y="223.5" ></text>
</g>
<g >
<title>madvise() (1 samples, 0.09%)</title><rect x="663.6" y="501" width="1.1" height="15.0" fill="rgb(215,170,33)" rx="2" ry="2" />
<text  x="666.64" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.09%)</title><rect x="952.7" y="373" width="1.1" height="15.0" fill="rgb(249,133,8)" rx="2" ry="2" />
<text  x="955.71" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="192.3" y="149" width="2.1" height="15.0" fill="rgb(233,170,7)" rx="2" ry="2" />
<text  x="195.29" y="159.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (53 samples, 4.84%)</title><rect x="733.7" y="389" width="57.2" height="15.0" fill="rgb(222,33,21)" rx="2" ry="2" />
<text  x="736.75" y="399.5" >__gthr..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.09%)</title><rect x="468.4" y="117" width="1.1" height="15.0" fill="rgb(244,197,7)" rx="2" ry="2" />
<text  x="471.41" y="127.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.09%)</title><rect x="876.1" y="389" width="1.1" height="15.0" fill="rgb(231,117,7)" rx="2" ry="2" />
<text  x="879.12" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee28b5d770, (1 samples, 0.09%)</title><rect x="1184.6" y="245" width="1.1" height="15.0" fill="rgb(207,6,45)" rx="2" ry="2" />
<text  x="1187.61" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=512) (1 samples, 0.09%)</title><rect x="71.5" y="293" width="1.1" height="15.0" fill="rgb(209,58,18)" rx="2" ry="2" />
<text  x="74.48" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="485" width="1.1" height="15.0" fill="rgb(239,107,35)" rx="2" ry="2" />
<text  x="906.09" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="389" width="2.2" height="15.0" fill="rgb(210,161,2)" rx="2" ry="2" />
<text  x="964.33" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="895.5" y="469" width="2.2" height="15.0" fill="rgb(250,1,54)" rx="2" ry="2" />
<text  x="898.54" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (5 samples, 0.46%)</title><rect x="436.1" y="101" width="5.3" height="15.0" fill="rgb(219,188,50)" rx="2" ry="2" />
<text  x="439.05" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (68 samples, 6.22%)</title><rect x="27.3" y="437" width="73.3" height="15.0" fill="rgb(233,147,44)" rx="2" ry="2" />
<text  x="30.26" y="447.5" >std::__i..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (6 samples, 0.55%)</title><rect x="29.4" y="389" width="6.5" height="15.0" fill="rgb(236,138,5)" rx="2" ry="2" />
<text  x="32.41" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2a652ec8, (1 samples, 0.09%)</title><rect x="842.7" y="293" width="1.1" height="15.0" fill="rgb(246,121,39)" rx="2" ry="2" />
<text  x="845.69" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="237.6" y="117" width="1.1" height="15.0" fill="rgb(236,35,10)" rx="2" ry="2" />
<text  x="240.59" y="127.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.09%)</title><rect x="900.9" y="357" width="1.1" height="15.0" fill="rgb(233,54,17)" rx="2" ry="2" />
<text  x="903.93" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="29.4" y="341" width="1.1" height="15.0" fill="rgb(241,157,21)" rx="2" ry="2" />
<text  x="32.41" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (54 samples, 4.94%)</title><rect x="790.9" y="469" width="58.3" height="15.0" fill="rgb(209,70,48)" rx="2" ry="2" />
<text  x="793.91" y="479.5" >std::_..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803eee6820) (1 samples, 0.09%)</title><rect x="817.9" y="181" width="1.1" height="15.0" fill="rgb(206,222,19)" rx="2" ry="2" />
<text  x="820.88" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.18%)</title><rect x="300.1" y="53" width="2.2" height="15.0" fill="rgb(250,6,52)" rx="2" ry="2" />
<text  x="303.15" y="63.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1184.6" y="229" width="1.1" height="15.0" fill="rgb(244,156,42)" rx="2" ry="2" />
<text  x="1187.61" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="437" width="1.1" height="15.0" fill="rgb(251,81,10)" rx="2" ry="2" />
<text  x="906.09" y="447.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.37%)</title><rect x="413.4" y="149" width="4.3" height="15.0" fill="rgb(233,196,14)" rx="2" ry="2" />
<text  x="416.40" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.09%)</title><rect x="859.9" y="469" width="1.1" height="15.0" fill="rgb(227,54,17)" rx="2" ry="2" />
<text  x="862.95" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="894.5" y="373" width="1.0" height="15.0" fill="rgb(205,10,19)" rx="2" ry="2" />
<text  x="897.46" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1185.7" y="293" width="1.1" height="15.0" fill="rgb(207,0,3)" rx="2" ry="2" />
<text  x="1188.69" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="877.2" y="389" width="1.1" height="15.0" fill="rgb(227,121,7)" rx="2" ry="2" />
<text  x="880.20" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="939.8" y="261" width="4.3" height="15.0" fill="rgb(234,39,4)" rx="2" ry="2" />
<text  x="942.76" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1136.1" y="389" width="1.0" height="15.0" fill="rgb(221,28,1)" rx="2" ry="2" />
<text  x="1139.07" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (6 samples, 0.55%)</title><rect x="853.5" y="245" width="6.4" height="15.0" fill="rgb(234,12,28)" rx="2" ry="2" />
<text  x="856.47" y="255.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e4e0, (1 samples, 0.09%)</title><rect x="1139.3" y="437" width="1.1" height="15.0" fill="rgb(232,80,0)" rx="2" ry="2" />
<text  x="1142.31" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1188.9" y="421" width="1.1" height="15.0" fill="rgb(237,58,18)" rx="2" ry="2" />
<text  x="1191.92" y="431.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (2 samples, 0.18%)</title><rect x="731.6" y="405" width="2.1" height="15.0" fill="rgb(228,200,17)" rx="2" ry="2" />
<text  x="734.59" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (83 samples, 7.59%)</title><rect x="235.4" y="325" width="89.6" height="15.0" fill="rgb(240,191,16)" rx="2" ry="2" />
<text  x="238.43" y="335.5" >std::funct..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="10.0" y="469" width="17.3" height="15.0" fill="rgb(232,164,20)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="458.7" y="117" width="1.1" height="15.0" fill="rgb(245,57,44)" rx="2" ry="2" />
<text  x="461.70" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="903.1" y="389" width="1.1" height="15.0" fill="rgb(249,179,43)" rx="2" ry="2" />
<text  x="906.09" y="399.5" ></text>
</g>
<g >
<title>Page::addLink (2 samples, 0.18%)</title><rect x="664.7" y="501" width="2.2" height="15.0" fill="rgb(217,163,39)" rx="2" ry="2" />
<text  x="667.72" y="511.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8028000020, (1 samples, 0.09%)</title><rect x="835.1" y="277" width="1.1" height="15.0" fill="rgb(214,216,51)" rx="2" ry="2" />
<text  x="838.14" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee1fb0d120) (2 samples, 0.18%)</title><rect x="30.5" y="341" width="2.2" height="15.0" fill="rgb(212,8,24)" rx="2" ry="2" />
<text  x="33.49" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f801567ec40) (1 samples, 0.09%)</title><rect x="795.2" y="181" width="1.1" height="15.0" fill="rgb(211,22,10)" rx="2" ry="2" />
<text  x="798.23" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (4 samples, 0.37%)</title><rect x="1115.6" y="373" width="4.3" height="15.0" fill="rgb(222,12,35)" rx="2" ry="2" />
<text  x="1118.58" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (21 samples, 1.92%)</title><rect x="396.1" y="325" width="22.7" height="15.0" fill="rgb(250,146,7)" rx="2" ry="2" />
<text  x="399.14" y="335.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="665.8" y="437" width="1.1" height="15.0" fill="rgb(242,41,25)" rx="2" ry="2" />
<text  x="668.80" y="447.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e650 (1 samples, 0.09%)</title><rect x="1140.4" y="453" width="1.1" height="15.0" fill="rgb(213,145,0)" rx="2" ry="2" />
<text  x="1143.38" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1145.8" y="469" width="1.1" height="15.0" fill="rgb(221,87,42)" rx="2" ry="2" />
<text  x="1148.78" y="479.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164a80) (1 samples, 0.09%)</title><rect x="441.4" y="149" width="1.1" height="15.0" fill="rgb(246,122,12)" rx="2" ry="2" />
<text  x="444.44" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.37%)</title><rect x="464.1" y="165" width="4.3" height="15.0" fill="rgb(207,152,37)" rx="2" ry="2" />
<text  x="467.10" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="410.2" y="165" width="1.0" height="15.0" fill="rgb(205,179,31)" rx="2" ry="2" />
<text  x="413.16" y="175.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.09%)</title><rect x="865.3" y="421" width="1.1" height="15.0" fill="rgb(218,88,9)" rx="2" ry="2" />
<text  x="868.34" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffea105ea00) (1 samples, 0.09%)</title><rect x="965.6" y="485" width="1.1" height="15.0" fill="rgb(233,168,26)" rx="2" ry="2" />
<text  x="968.65" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="1174.9" y="437" width="1.1" height="15.0" fill="rgb(222,76,39)" rx="2" ry="2" />
<text  x="1177.90" y="447.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (15 samples, 1.37%)</title><rect x="862.1" y="501" width="16.2" height="15.0" fill="rgb(218,164,52)" rx="2" ry="2" />
<text  x="865.10" y="511.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8024000020, (1 samples, 0.09%)</title><rect x="841.6" y="277" width="1.1" height="15.0" fill="rgb(240,200,17)" rx="2" ry="2" />
<text  x="844.61" y="287.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (6 samples, 0.55%)</title><rect x="719.7" y="389" width="6.5" height="15.0" fill="rgb(229,189,11)" rx="2" ry="2" />
<text  x="722.73" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee27c885e0) (1 samples, 0.09%)</title><rect x="898.8" y="405" width="1.1" height="15.0" fill="rgb(246,45,6)" rx="2" ry="2" />
<text  x="901.78" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="237.6" y="149" width="1.1" height="15.0" fill="rgb(215,183,8)" rx="2" ry="2" />
<text  x="240.59" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105ea80, (1 samples, 0.09%)</title><rect x="87.7" y="341" width="1.0" height="15.0" fill="rgb(246,192,9)" rx="2" ry="2" />
<text  x="90.66" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee1fb0d120) (2 samples, 0.18%)</title><rect x="30.5" y="357" width="2.2" height="15.0" fill="rgb(225,191,22)" rx="2" ry="2" />
<text  x="33.49" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (4 samples, 0.37%)</title><rect x="659.3" y="213" width="4.3" height="15.0" fill="rgb(221,91,28)" rx="2" ry="2" />
<text  x="662.32" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8024000020, (1 samples, 0.09%)</title><rect x="842.7" y="277" width="1.1" height="15.0" fill="rgb(227,17,22)" rx="2" ry="2" />
<text  x="845.69" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="865.3" y="453" width="1.1" height="15.0" fill="rgb(238,149,24)" rx="2" ry="2" />
<text  x="868.34" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.18%)</title><rect x="74.7" y="325" width="2.2" height="15.0" fill="rgb(234,155,49)" rx="2" ry="2" />
<text  x="77.72" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="868.6" y="453" width="1.1" height="15.0" fill="rgb(235,38,44)" rx="2" ry="2" />
<text  x="871.57" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1151.2" y="453" width="2.1" height="15.0" fill="rgb(224,85,36)" rx="2" ry="2" />
<text  x="1154.17" y="463.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (14 samples, 1.28%)</title><rect x="1155.5" y="437" width="15.1" height="15.0" fill="rgb(233,22,51)" rx="2" ry="2" />
<text  x="1158.48" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=2048) (1 samples, 0.09%)</title><rect x="665.8" y="389" width="1.1" height="15.0" fill="rgb(234,148,28)" rx="2" ry="2" />
<text  x="668.80" y="399.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::push_back (44 samples, 4.02%)</title><rect x="29.4" y="405" width="47.5" height="15.0" fill="rgb(238,180,30)" rx="2" ry="2" />
<text  x="32.41" y="415.5" >Mult..</text>
</g>
<g >
<title>std::vector&lt;PageId, (5 samples, 0.46%)</title><rect x="888.0" y="469" width="5.4" height="15.0" fill="rgb(235,88,9)" rx="2" ry="2" />
<text  x="890.99" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802c26bf50, (1 samples, 0.09%)</title><rect x="804.9" y="197" width="1.1" height="15.0" fill="rgb(236,4,25)" rx="2" ry="2" />
<text  x="807.94" y="207.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="32.7" y="325" width="1.0" height="15.0" fill="rgb(216,157,30)" rx="2" ry="2" />
<text  x="35.65" y="335.5" ></text>
</g>
<g >
<title>Page::generateId (4 samples, 0.37%)</title><rect x="874.0" y="485" width="4.3" height="15.0" fill="rgb(211,158,7)" rx="2" ry="2" />
<text  x="876.97" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffea105eaf0, (1 samples, 0.09%)</title><rect x="893.4" y="405" width="1.1" height="15.0" fill="rgb(207,126,38)" rx="2" ry="2" />
<text  x="896.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.37%)</title><rect x="976.4" y="421" width="4.3" height="15.0" fill="rgb(237,140,45)" rx="2" ry="2" />
<text  x="979.44" y="431.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (176 samples, 16.09%)</title><rect x="469.5" y="213" width="189.8" height="15.0" fill="rgb(231,94,53)" rx="2" ry="2" />
<text  x="472.49" y="223.5" >MultiThreadedPageRankCom..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (8 samples, 0.73%)</title><rect x="1034.7" y="389" width="8.6" height="15.0" fill="rgb(217,130,45)" rx="2" ry="2" />
<text  x="1037.68" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="894.5" y="453" width="1.0" height="15.0" fill="rgb(230,8,8)" rx="2" ry="2" />
<text  x="897.46" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (4 samples, 0.37%)</title><rect x="883.7" y="341" width="4.3" height="15.0" fill="rgb(222,228,9)" rx="2" ry="2" />
<text  x="886.67" y="351.5" ></text>
</g>
<g >
<title>PageId::PageId (31 samples, 2.83%)</title><rect x="38.0" y="341" width="33.5" height="15.0" fill="rgb(246,132,12)" rx="2" ry="2" />
<text  x="41.04" y="351.5" >Pa..</text>
</g>
<g >
<title>Page::getId (2 samples, 0.18%)</title><rect x="98.4" y="405" width="2.2" height="15.0" fill="rgb(207,64,40)" rx="2" ry="2" />
<text  x="101.45" y="415.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.09%)</title><rect x="869.7" y="421" width="1.0" height="15.0" fill="rgb(248,159,6)" rx="2" ry="2" />
<text  x="872.65" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802d768af0, (1 samples, 0.09%)</title><rect x="810.3" y="197" width="1.1" height="15.0" fill="rgb(219,158,7)" rx="2" ry="2" />
<text  x="813.33" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.64%)</title><rect x="1129.6" y="437" width="7.5" height="15.0" fill="rgb(214,2,4)" rx="2" ry="2" />
<text  x="1132.60" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7ffea105ead8, (2 samples, 0.18%)</title><rect x="895.5" y="421" width="2.2" height="15.0" fill="rgb(208,43,47)" rx="2" ry="2" />
<text  x="898.54" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188826781440, (3 samples, 0.27%)</title><rect x="733.7" y="341" width="3.3" height="15.0" fill="rgb(252,21,19)" rx="2" ry="2" />
<text  x="736.75" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164ab8) (1 samples, 0.09%)</title><rect x="418.8" y="149" width="1.1" height="15.0" fill="rgb(209,72,48)" rx="2" ry="2" />
<text  x="421.79" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="869.7" y="453" width="2.1" height="15.0" fill="rgb(206,120,15)" rx="2" ry="2" />
<text  x="872.65" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="458.7" y="133" width="1.1" height="15.0" fill="rgb(247,12,25)" rx="2" ry="2" />
<text  x="461.70" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (27 samples, 2.47%)</title><rect x="346.5" y="197" width="29.1" height="15.0" fill="rgb(235,168,34)" rx="2" ry="2" />
<text  x="349.53" y="207.5" >Mu..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.18%)</title><rect x="963.5" y="405" width="2.1" height="15.0" fill="rgb(213,57,46)" rx="2" ry="2" />
<text  x="966.49" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="559.0" y="149" width="1.1" height="15.0" fill="rgb(230,36,23)" rx="2" ry="2" />
<text  x="562.01" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1de218) (1 samples, 0.09%)</title><rect x="110.3" y="133" width="1.1" height="15.0" fill="rgb(237,40,42)" rx="2" ry="2" />
<text  x="113.31" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (74 samples, 6.76%)</title><rect x="711.1" y="501" width="79.8" height="15.0" fill="rgb(244,173,26)" rx="2" ry="2" />
<text  x="714.10" y="511.5" >MultiThre..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateResult (12 samples, 1.10%)</title><rect x="952.7" y="501" width="12.9" height="15.0" fill="rgb(210,9,4)" rx="2" ry="2" />
<text  x="955.71" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.27%)</title><rect x="181.5" y="101" width="3.2" height="15.0" fill="rgb(247,70,24)" rx="2" ry="2" />
<text  x="184.50" y="111.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="20.8" y="373" width="1.1" height="15.0" fill="rgb(233,69,7)" rx="2" ry="2" />
<text  x="23.79" y="383.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="100.6" y="117" width="1.1" height="15.0" fill="rgb(239,167,46)" rx="2" ry="2" />
<text  x="103.60" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="891.2" y="357" width="1.1" height="15.0" fill="rgb(237,150,22)" rx="2" ry="2" />
<text  x="894.22" y="367.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="945.2" y="293" width="1.0" height="15.0" fill="rgb(240,53,3)" rx="2" ry="2" />
<text  x="948.16" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initPages (29 samples, 2.65%)</title><rect x="967.8" y="501" width="31.3" height="15.0" fill="rgb(242,79,21)" rx="2" ry="2" />
<text  x="970.81" y="511.5" >Mu..</text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.27%)</title><rect x="952.7" y="469" width="3.2" height="15.0" fill="rgb(214,126,9)" rx="2" ry="2" />
<text  x="955.71" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1178.1" y="421" width="2.2" height="15.0" fill="rgb(247,209,52)" rx="2" ry="2" />
<text  x="1181.14" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.09%)</title><rect x="704.6" y="325" width="1.1" height="15.0" fill="rgb(254,31,25)" rx="2" ry="2" />
<text  x="707.63" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="898.8" y="469" width="1.1" height="15.0" fill="rgb(211,59,14)" rx="2" ry="2" />
<text  x="901.78" y="479.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.09%)</title><rect x="71.5" y="229" width="1.1" height="15.0" fill="rgb(216,216,24)" rx="2" ry="2" />
<text  x="74.48" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.09%)</title><rect x="859.9" y="357" width="1.1" height="15.0" fill="rgb(244,202,35)" rx="2" ry="2" />
<text  x="862.95" y="367.5" ></text>
</g>
<g >
<title>PageId::operator== (4 samples, 0.37%)</title><rect x="188.0" y="85" width="4.3" height="15.0" fill="rgb(235,53,45)" rx="2" ry="2" />
<text  x="190.97" y="95.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b18cc60, (1 samples, 0.09%)</title><rect x="344.4" y="133" width="1.0" height="15.0" fill="rgb(230,72,19)" rx="2" ry="2" />
<text  x="347.37" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (36 samples, 3.29%)</title><rect x="195.5" y="117" width="38.9" height="15.0" fill="rgb(226,101,31)" rx="2" ry="2" />
<text  x="198.52" y="127.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="967.8" y="373" width="3.2" height="15.0" fill="rgb(240,34,41)" rx="2" ry="2" />
<text  x="970.81" y="383.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (83 samples, 7.59%)</title><rect x="235.4" y="245" width="89.6" height="15.0" fill="rgb(221,90,48)" rx="2" ry="2" />
<text  x="238.43" y="255.5" >std::__inv..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="470.6" y="133" width="1.0" height="15.0" fill="rgb(220,134,18)" rx="2" ry="2" />
<text  x="473.57" y="143.5" ></text>
</g>
<g >
<title>Network::~Network (8 samples, 0.73%)</title><rect x="1180.3" y="517" width="8.6" height="15.0" fill="rgb(237,97,26)" rx="2" ry="2" />
<text  x="1183.29" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="675.5" y="485" width="2.2" height="15.0" fill="rgb(239,32,39)" rx="2" ry="2" />
<text  x="678.50" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cd08) (1 samples, 0.09%)</title><rect x="474.9" y="133" width="1.1" height="15.0" fill="rgb(238,113,16)" rx="2" ry="2" />
<text  x="477.88" y="143.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (4 samples, 0.37%)</title><rect x="976.4" y="389" width="4.3" height="15.0" fill="rgb(253,110,10)" rx="2" ry="2" />
<text  x="979.44" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (10 samples, 0.91%)</title><rect x="560.1" y="117" width="10.8" height="15.0" fill="rgb(237,184,32)" rx="2" ry="2" />
<text  x="563.09" y="127.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x55ee28bb6d30, (1 samples, 0.09%)</title><rect x="19.7" y="405" width="1.1" height="15.0" fill="rgb(215,22,23)" rx="2" ry="2" />
<text  x="22.71" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.27%)</title><rect x="1171.7" y="469" width="3.2" height="15.0" fill="rgb(223,170,28)" rx="2" ry="2" />
<text  x="1174.66" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 0.91%)</title><rect x="975.4" y="453" width="10.7" height="15.0" fill="rgb(235,173,17)" rx="2" ry="2" />
<text  x="978.36" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8015011400, (1 samples, 0.09%)</title><rect x="790.9" y="197" width="1.1" height="15.0" fill="rgb(225,137,23)" rx="2" ry="2" />
<text  x="793.91" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.46%)</title><rect x="436.1" y="165" width="5.3" height="15.0" fill="rgb(233,56,8)" rx="2" ry="2" />
<text  x="439.05" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee33c4f6a0, (1 samples, 0.09%)</title><rect x="894.5" y="325" width="1.0" height="15.0" fill="rgb(246,92,42)" rx="2" ry="2" />
<text  x="897.46" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (54 samples, 4.94%)</title><rect x="790.9" y="453" width="58.3" height="15.0" fill="rgb(245,33,20)" rx="2" ry="2" />
<text  x="793.91" y="463.5" >std::_..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="396.1" y="341" width="22.7" height="15.0" fill="rgb(236,217,36)" rx="2" ry="2" />
<text  x="399.14" y="351.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803e8c53a0, (1 samples, 0.09%)</title><rect x="831.9" y="197" width="1.1" height="15.0" fill="rgb(248,15,20)" rx="2" ry="2" />
<text  x="834.90" y="207.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2 samples, 0.18%)</title><rect x="441.4" y="181" width="2.2" height="15.0" fill="rgb(237,208,43)" rx="2" ry="2" />
<text  x="444.44" y="191.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="1178.1" y="373" width="1.1" height="15.0" fill="rgb(229,146,13)" rx="2" ry="2" />
<text  x="1181.14" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1de1e0) (1 samples, 0.09%)</title><rect x="109.2" y="149" width="1.1" height="15.0" fill="rgb(223,33,53)" rx="2" ry="2" />
<text  x="112.23" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="421" width="1.0" height="15.0" fill="rgb(253,148,7)" rx="2" ry="2" />
<text  x="867.26" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (4 samples, 0.37%)</title><rect x="939.8" y="325" width="4.3" height="15.0" fill="rgb(253,171,5)" rx="2" ry="2" />
<text  x="942.76" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="87.7" y="357" width="1.0" height="15.0" fill="rgb(244,30,18)" rx="2" ry="2" />
<text  x="90.66" y="367.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="859.9" y="325" width="1.1" height="15.0" fill="rgb(226,153,38)" rx="2" ry="2" />
<text  x="862.95" y="335.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (8 samples, 0.73%)</title><rect x="481.4" y="181" width="8.6" height="15.0" fill="rgb(217,46,24)" rx="2" ry="2" />
<text  x="484.35" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="325.0" y="213" width="17.2" height="15.0" fill="rgb(237,46,51)" rx="2" ry="2" />
<text  x="327.95" y="223.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.09%)</title><rect x="378.9" y="101" width="1.1" height="15.0" fill="rgb(219,119,19)" rx="2" ry="2" />
<text  x="381.88" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (25 samples, 2.29%)</title><rect x="296.9" y="181" width="27.0" height="15.0" fill="rgb(215,204,13)" rx="2" ry="2" />
<text  x="299.91" y="191.5" >s..</text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.09%)</title><rect x="468.4" y="149" width="1.1" height="15.0" fill="rgb(235,22,12)" rx="2" ry="2" />
<text  x="471.41" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802ce58c80, (1 samples, 0.09%)</title><rect x="806.0" y="197" width="1.1" height="15.0" fill="rgb(229,95,41)" rx="2" ry="2" />
<text  x="809.01" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188826781440, (4 samples, 0.37%)</title><rect x="948.4" y="453" width="4.3" height="15.0" fill="rgb(248,160,32)" rx="2" ry="2" />
<text  x="951.39" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="325.0" y="261" width="17.2" height="15.0" fill="rgb(228,214,34)" rx="2" ry="2" />
<text  x="327.95" y="271.5" ></text>
</g>
<g >
<title>std::mutex::lock (11 samples, 1.01%)</title><rect x="469.5" y="165" width="11.9" height="15.0" fill="rgb(214,203,11)" rx="2" ry="2" />
<text  x="472.49" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.18%)</title><rect x="74.7" y="309" width="2.2" height="15.0" fill="rgb(244,8,14)" rx="2" ry="2" />
<text  x="77.72" y="319.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="396.1" y="149" width="1.1" height="15.0" fill="rgb(250,184,45)" rx="2" ry="2" />
<text  x="399.14" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (5 samples, 0.46%)</title><rect x="1181.4" y="373" width="5.4" height="15.0" fill="rgb(205,23,52)" rx="2" ry="2" />
<text  x="1184.37" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="707.9" y="421" width="2.1" height="15.0" fill="rgb(205,229,34)" rx="2" ry="2" />
<text  x="710.86" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.09%)</title><rect x="435.0" y="101" width="1.1" height="15.0" fill="rgb(211,33,18)" rx="2" ry="2" />
<text  x="437.97" y="111.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (22 samples, 2.01%)</title><rect x="975.4" y="485" width="23.7" height="15.0" fill="rgb(251,145,17)" rx="2" ry="2" />
<text  x="978.36" y="495.5" >s..</text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="814.6" y="181" width="1.1" height="15.0" fill="rgb(253,117,4)" rx="2" ry="2" />
<text  x="817.64" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (22 samples, 2.01%)</title><rect x="916.0" y="453" width="23.8" height="15.0" fill="rgb(214,77,11)" rx="2" ry="2" />
<text  x="919.03" y="463.5" >s..</text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="442.5" y="117" width="1.1" height="15.0" fill="rgb(206,204,44)" rx="2" ry="2" />
<text  x="445.52" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="405" width="1.1" height="15.0" fill="rgb(252,221,50)" rx="2" ry="2" />
<text  x="906.09" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (9 samples, 0.82%)</title><rect x="578.4" y="117" width="9.7" height="15.0" fill="rgb(236,24,48)" rx="2" ry="2" />
<text  x="581.43" y="127.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2a6c1bd8, (11 samples, 1.01%)</title><rect x="1012.0" y="373" width="11.9" height="15.0" fill="rgb(229,57,22)" rx="2" ry="2" />
<text  x="1015.03" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802d2fe990) (1 samples, 0.09%)</title><rect x="800.6" y="181" width="1.1" height="15.0" fill="rgb(214,76,9)" rx="2" ry="2" />
<text  x="803.62" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="396.1" y="133" width="1.1" height="15.0" fill="rgb(254,226,46)" rx="2" ry="2" />
<text  x="399.14" y="143.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="441.4" y="245" width="22.7" height="15.0" fill="rgb(246,9,1)" rx="2" ry="2" />
<text  x="444.44" y="255.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="25.1" y="341" width="2.2" height="15.0" fill="rgb(223,88,51)" rx="2" ry="2" />
<text  x="28.10" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.09%)</title><rect x="375.6" y="117" width="1.1" height="15.0" fill="rgb(206,198,22)" rx="2" ry="2" />
<text  x="378.65" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="302.3" y="149" width="1.1" height="15.0" fill="rgb(232,144,42)" rx="2" ry="2" />
<text  x="305.30" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (29 samples, 2.65%)</title><rect x="908.5" y="469" width="31.3" height="15.0" fill="rgb(231,113,30)" rx="2" ry="2" />
<text  x="911.48" y="479.5" >st..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (19 samples, 1.74%)</title><rect x="1155.5" y="485" width="20.5" height="15.0" fill="rgb(233,89,31)" rx="2" ry="2" />
<text  x="1158.48" y="495.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff808, (2 samples, 0.18%)</title><rect x="731.6" y="373" width="2.1" height="15.0" fill="rgb(222,93,29)" rx="2" ry="2" />
<text  x="734.59" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.09%)</title><rect x="1137.1" y="341" width="1.1" height="15.0" fill="rgb(242,33,42)" rx="2" ry="2" />
<text  x="1140.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.37%)</title><rect x="413.4" y="165" width="4.3" height="15.0" fill="rgb(215,111,49)" rx="2" ry="2" />
<text  x="416.40" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="675.5" y="277" width="1.1" height="15.0" fill="rgb(206,55,50)" rx="2" ry="2" />
<text  x="678.50" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.09%)</title><rect x="1146.9" y="469" width="1.0" height="15.0" fill="rgb(207,135,22)" rx="2" ry="2" />
<text  x="1149.86" y="479.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (6 samples, 0.55%)</title><rect x="669.0" y="437" width="6.5" height="15.0" fill="rgb(213,187,11)" rx="2" ry="2" />
<text  x="672.03" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="939.8" y="277" width="4.3" height="15.0" fill="rgb(253,201,47)" rx="2" ry="2" />
<text  x="942.76" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="22.9" y="357" width="1.1" height="15.0" fill="rgb(222,2,6)" rx="2" ry="2" />
<text  x="25.94" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="43.4" y="277" width="1.1" height="15.0" fill="rgb(240,29,24)" rx="2" ry="2" />
<text  x="46.44" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (21 samples, 1.92%)</title><rect x="418.8" y="325" width="22.6" height="15.0" fill="rgb(218,151,2)" rx="2" ry="2" />
<text  x="421.79" y="335.5" >s..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (4 samples, 0.37%)</title><rect x="290.4" y="117" width="4.4" height="15.0" fill="rgb(234,174,17)" rx="2" ry="2" />
<text  x="293.44" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.55%)</title><rect x="988.3" y="405" width="6.5" height="15.0" fill="rgb(231,51,11)" rx="2" ry="2" />
<text  x="991.30" y="415.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=500000, (215 samples, 19.65%)</title><rect x="948.4" y="533" width="231.9" height="15.0" fill="rgb(209,71,23)" rx="2" ry="2" />
<text  x="951.39" y="543.5" >pageRankComputationWithNumNode..</text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="897.7" y="485" width="1.1" height="15.0" fill="rgb(211,47,12)" rx="2" ry="2" />
<text  x="900.70" y="495.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;,Network (16 samples, 1.46%)</title><rect x="10.0" y="421" width="17.3" height="15.0" fill="rgb(250,98,34)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="710.0" y="469" width="1.1" height="15.0" fill="rgb(250,65,2)" rx="2" ry="2" />
<text  x="713.02" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802e9675c0, (1 samples, 0.09%)</title><rect x="812.5" y="197" width="1.1" height="15.0" fill="rgb(221,215,38)" rx="2" ry="2" />
<text  x="815.49" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee1fb10ee0) (1 samples, 0.09%)</title><rect x="32.7" y="341" width="1.0" height="15.0" fill="rgb(205,184,9)" rx="2" ry="2" />
<text  x="35.65" y="351.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="836.2" y="261" width="1.1" height="15.0" fill="rgb(253,118,21)" rx="2" ry="2" />
<text  x="839.22" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 0.91%)</title><rect x="78.0" y="373" width="10.7" height="15.0" fill="rgb(225,162,23)" rx="2" ry="2" />
<text  x="80.95" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (2 samples, 0.18%)</title><rect x="1176.0" y="405" width="2.1" height="15.0" fill="rgb(240,17,24)" rx="2" ry="2" />
<text  x="1178.98" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1de218) (1 samples, 0.09%)</title><rect x="110.3" y="149" width="1.1" height="15.0" fill="rgb(228,116,27)" rx="2" ry="2" />
<text  x="113.31" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1146.9" y="453" width="1.0" height="15.0" fill="rgb(206,195,40)" rx="2" ry="2" />
<text  x="1149.86" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="435.0" y="133" width="1.1" height="15.0" fill="rgb(220,40,6)" rx="2" ry="2" />
<text  x="437.97" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee1fb0d120, (1 samples, 0.09%)</title><rect x="37.0" y="341" width="1.0" height="15.0" fill="rgb(214,201,44)" rx="2" ry="2" />
<text  x="39.97" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (54 samples, 4.94%)</title><rect x="790.9" y="405" width="58.3" height="15.0" fill="rgb(229,156,34)" rx="2" ry="2" />
<text  x="793.91" y="415.5" >__gnu_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.55%)</title><rect x="1129.6" y="357" width="6.5" height="15.0" fill="rgb(225,221,27)" rx="2" ry="2" />
<text  x="1132.60" y="367.5" ></text>
</g>
<g >
<title>??() (606 samples, 55.39%)</title><rect x="10.0" y="517" width="653.6" height="15.0" fill="rgb(215,129,37)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >??()</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (8 samples, 0.73%)</title><rect x="851.3" y="373" width="8.6" height="15.0" fill="rgb(232,123,20)" rx="2" ry="2" />
<text  x="854.32" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (9 samples, 0.82%)</title><rect x="878.3" y="373" width="9.7" height="15.0" fill="rgb(221,223,41)" rx="2" ry="2" />
<text  x="881.28" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.09%)</title><rect x="882.6" y="325" width="1.1" height="15.0" fill="rgb(206,207,46)" rx="2" ry="2" />
<text  x="885.60" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="893.4" y="421" width="1.1" height="15.0" fill="rgb(230,125,49)" rx="2" ry="2" />
<text  x="896.38" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (7 samples, 0.64%)</title><rect x="852.4" y="277" width="7.5" height="15.0" fill="rgb(246,180,40)" rx="2" ry="2" />
<text  x="855.39" y="287.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.09%)</title><rect x="67.2" y="181" width="1.0" height="15.0" fill="rgb(235,88,40)" rx="2" ry="2" />
<text  x="70.17" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (6 samples, 0.55%)</title><rect x="669.0" y="405" width="6.5" height="15.0" fill="rgb(225,161,12)" rx="2" ry="2" />
<text  x="672.03" y="415.5" ></text>
</g>
<g >
<title>std::mutex::unlock (3 samples, 0.27%)</title><rect x="343.3" y="165" width="3.2" height="15.0" fill="rgb(222,79,8)" rx="2" ry="2" />
<text  x="346.29" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee23f97920, (1 samples, 0.09%)</title><rect x="1182.4" y="245" width="1.1" height="15.0" fill="rgb(220,48,3)" rx="2" ry="2" />
<text  x="1185.45" y="255.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.09%)</title><rect x="1147.9" y="485" width="1.1" height="15.0" fill="rgb(214,145,48)" rx="2" ry="2" />
<text  x="1150.93" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (125 samples, 11.43%)</title><rect x="100.6" y="293" width="134.8" height="15.0" fill="rgb(223,187,1)" rx="2" ry="2" />
<text  x="103.60" y="303.5" >std::__future_bas..</text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (8 samples, 0.73%)</title><rect x="1180.3" y="437" width="8.6" height="15.0" fill="rgb(223,189,38)" rx="2" ry="2" />
<text  x="1183.29" y="447.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (4 samples, 0.37%)</title><rect x="874.0" y="453" width="4.3" height="15.0" fill="rgb(231,63,14)" rx="2" ry="2" />
<text  x="876.97" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="664.7" y="405" width="1.1" height="15.0" fill="rgb(221,182,0)" rx="2" ry="2" />
<text  x="667.72" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.73%)</title><rect x="939.8" y="405" width="8.6" height="15.0" fill="rgb(233,80,34)" rx="2" ry="2" />
<text  x="942.76" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.64%)</title><rect x="1129.6" y="453" width="7.5" height="15.0" fill="rgb(227,1,15)" rx="2" ry="2" />
<text  x="1132.60" y="463.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.09%)</title><rect x="396.1" y="165" width="1.1" height="15.0" fill="rgb(227,64,40)" rx="2" ry="2" />
<text  x="399.14" y="175.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f802c000020) (1 samples, 0.09%)</title><rect x="843.8" y="261" width="1.0" height="15.0" fill="rgb(222,189,7)" rx="2" ry="2" />
<text  x="846.77" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.37%)</title><rect x="298.0" y="133" width="4.3" height="15.0" fill="rgb(249,75,38)" rx="2" ry="2" />
<text  x="300.99" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (6 samples, 0.55%)</title><rect x="88.7" y="309" width="6.5" height="15.0" fill="rgb(239,17,13)" rx="2" ry="2" />
<text  x="91.74" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="979.7" y="341" width="1.0" height="15.0" fill="rgb(234,164,30)" rx="2" ry="2" />
<text  x="982.67" y="351.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=1000, (12 samples, 1.10%)</title><rect x="664.7" y="533" width="13.0" height="15.0" fill="rgb(224,116,15)" rx="2" ry="2" />
<text  x="667.72" y="543.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="481.4" y="117" width="1.0" height="15.0" fill="rgb(254,203,19)" rx="2" ry="2" />
<text  x="484.35" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (36 samples, 3.29%)</title><rect x="195.5" y="133" width="38.9" height="15.0" fill="rgb(237,177,0)" rx="2" ry="2" />
<text  x="198.52" y="143.5" >std..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (2 samples, 0.18%)</title><rect x="889.1" y="373" width="2.1" height="15.0" fill="rgb(214,158,47)" rx="2" ry="2" />
<text  x="892.07" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="20.8" y="357" width="1.1" height="15.0" fill="rgb(250,104,22)" rx="2" ry="2" />
<text  x="23.79" y="367.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.09%)</title><rect x="859.9" y="341" width="1.1" height="15.0" fill="rgb(215,80,43)" rx="2" ry="2" />
<text  x="862.95" y="351.5" ></text>
</g>
<g >
<title>__lll_unlock_wake_private (1 samples, 0.09%)</title><rect x="72.6" y="293" width="1.0" height="15.0" fill="rgb(210,131,21)" rx="2" ry="2" />
<text  x="75.56" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (2 samples, 0.18%)</title><rect x="895.5" y="405" width="2.2" height="15.0" fill="rgb(252,103,18)" rx="2" ry="2" />
<text  x="898.54" y="415.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164af0, (1 samples, 0.09%)</title><rect x="245.1" y="133" width="1.1" height="15.0" fill="rgb(216,151,45)" rx="2" ry="2" />
<text  x="248.14" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.18%)</title><rect x="895.5" y="437" width="2.2" height="15.0" fill="rgb(243,44,44)" rx="2" ry="2" />
<text  x="898.54" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.46%)</title><rect x="289.4" y="181" width="5.4" height="15.0" fill="rgb(206,7,37)" rx="2" ry="2" />
<text  x="292.36" y="191.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e650 (1 samples, 0.09%)</title><rect x="1139.3" y="453" width="1.1" height="15.0" fill="rgb(248,202,2)" rx="2" ry="2" />
<text  x="1142.31" y="463.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (34 samples, 3.11%)</title><rect x="1143.6" y="517" width="36.7" height="15.0" fill="rgb(252,125,24)" rx="2" ry="2" />
<text  x="1146.62" y="527.5" >Sin..</text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188826781440, (67 samples, 6.12%)</title><rect x="1043.3" y="341" width="72.3" height="15.0" fill="rgb(225,96,33)" rx="2" ry="2" />
<text  x="1046.31" y="351.5" >__GI___p..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="986.1" y="421" width="2.2" height="15.0" fill="rgb(222,190,7)" rx="2" ry="2" />
<text  x="989.14" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.55%)</title><rect x="669.0" y="453" width="6.5" height="15.0" fill="rgb(209,229,15)" rx="2" ry="2" />
<text  x="672.03" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="373" width="2.2" height="15.0" fill="rgb(253,80,10)" rx="2" ry="2" />
<text  x="964.33" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.73%)</title><rect x="939.8" y="469" width="8.6" height="15.0" fill="rgb(211,125,46)" rx="2" ry="2" />
<text  x="942.76" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (16 samples, 1.46%)</title><rect x="78.0" y="389" width="17.2" height="15.0" fill="rgb(238,89,9)" rx="2" ry="2" />
<text  x="80.95" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="888.0" y="421" width="1.1" height="15.0" fill="rgb(242,192,2)" rx="2" ry="2" />
<text  x="890.99" y="431.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x55ee280b61d0, (1 samples, 0.09%)</title><rect x="16.5" y="405" width="1.1" height="15.0" fill="rgb(235,141,49)" rx="2" ry="2" />
<text  x="19.47" y="415.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="811.4" y="181" width="1.1" height="15.0" fill="rgb(236,105,46)" rx="2" ry="2" />
<text  x="814.41" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (1 samples, 0.09%)</title><rect x="468.4" y="197" width="1.1" height="15.0" fill="rgb(226,1,28)" rx="2" ry="2" />
<text  x="471.41" y="207.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (74 samples, 6.76%)</title><rect x="711.1" y="485" width="79.8" height="15.0" fill="rgb(250,29,41)" rx="2" ry="2" />
<text  x="714.10" y="495.5" >std::futu..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (6 samples, 0.55%)</title><rect x="88.7" y="325" width="6.5" height="15.0" fill="rgb(240,7,9)" rx="2" ry="2" />
<text  x="91.74" y="335.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (180 samples, 16.45%)</title><rect x="469.5" y="277" width="194.1" height="15.0" fill="rgb(251,43,31)" rx="2" ry="2" />
<text  x="472.49" y="287.5" >std::thread::_Invoker&lt;std..</text>
</g>
<g >
<title>_int_free(av=0x7f8020000020, (1 samples, 0.09%)</title><rect x="792.0" y="181" width="1.1" height="15.0" fill="rgb(236,65,42)" rx="2" ry="2" />
<text  x="794.99" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (125 samples, 11.43%)</title><rect x="100.6" y="309" width="134.8" height="15.0" fill="rgb(229,218,16)" rx="2" ry="2" />
<text  x="103.60" y="319.5" >std::_Function_ha..</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.18%)</title><rect x="909.6" y="389" width="2.1" height="15.0" fill="rgb(247,205,28)" rx="2" ry="2" />
<text  x="912.56" y="399.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (14 samples, 1.28%)</title><rect x="443.6" y="197" width="15.1" height="15.0" fill="rgb(216,102,42)" rx="2" ry="2" />
<text  x="446.60" y="207.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=2000, (251 samples, 22.94%)</title><rect x="677.7" y="533" width="270.7" height="15.0" fill="rgb(244,3,3)" rx="2" ry="2" />
<text  x="680.66" y="543.5" >pageRankComputationWithNumNodes(num=..</text>
</g>
<g >
<title>_int_free(av=0x7f8028000020, (1 samples, 0.09%)</title><rect x="72.6" y="309" width="1.0" height="15.0" fill="rgb(213,154,9)" rx="2" ry="2" />
<text  x="75.56" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="676.6" y="325" width="1.1" height="15.0" fill="rgb(249,71,31)" rx="2" ry="2" />
<text  x="679.58" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.09%)</title><rect x="410.2" y="101" width="1.0" height="15.0" fill="rgb(225,76,8)" rx="2" ry="2" />
<text  x="413.16" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="888.0" y="341" width="1.1" height="15.0" fill="rgb(214,71,25)" rx="2" ry="2" />
<text  x="890.99" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="888.0" y="373" width="1.1" height="15.0" fill="rgb(227,4,49)" rx="2" ry="2" />
<text  x="890.99" y="383.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8014000020, (1 samples, 0.09%)</title><rect x="834.1" y="277" width="1.0" height="15.0" fill="rgb(251,100,5)" rx="2" ry="2" />
<text  x="837.06" y="287.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (4 samples, 0.37%)</title><rect x="22.9" y="373" width="4.4" height="15.0" fill="rgb(217,176,36)" rx="2" ry="2" />
<text  x="25.94" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.27%)</title><rect x="980.7" y="437" width="3.3" height="15.0" fill="rgb(242,111,19)" rx="2" ry="2" />
<text  x="983.75" y="447.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (13 samples, 1.19%)</title><rect x="1115.6" y="389" width="14.0" height="15.0" fill="rgb(213,175,13)" rx="2" ry="2" />
<text  x="1118.58" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f803c000020) (1 samples, 0.09%)</title><rect x="847.0" y="261" width="1.1" height="15.0" fill="rgb(207,74,14)" rx="2" ry="2" />
<text  x="850.00" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="102.8" y="133" width="1.0" height="15.0" fill="rgb(211,75,52)" rx="2" ry="2" />
<text  x="105.76" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (9 samples, 0.82%)</title><rect x="578.4" y="133" width="9.7" height="15.0" fill="rgb(246,79,7)" rx="2" ry="2" />
<text  x="581.43" y="143.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="249.5" y="117" width="1.0" height="15.0" fill="rgb(231,7,37)" rx="2" ry="2" />
<text  x="252.45" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (4 samples, 0.37%)</title><rect x="464.1" y="181" width="4.3" height="15.0" fill="rgb(240,189,51)" rx="2" ry="2" />
<text  x="467.10" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="396.1" y="197" width="1.1" height="15.0" fill="rgb(207,35,10)" rx="2" ry="2" />
<text  x="399.14" y="207.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="1176.0" y="373" width="1.1" height="15.0" fill="rgb(210,174,1)" rx="2" ry="2" />
<text  x="1178.98" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (7 samples, 0.64%)</title><rect x="668.0" y="469" width="7.5" height="15.0" fill="rgb(232,79,14)" rx="2" ry="2" />
<text  x="670.95" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (54 samples, 4.94%)</title><rect x="790.9" y="437" width="58.3" height="15.0" fill="rgb(246,54,11)" rx="2" ry="2" />
<text  x="793.91" y="447.5" >std::_..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee201acd30) (8 samples, 0.73%)</title><rect x="711.1" y="453" width="8.6" height="15.0" fill="rgb(207,186,42)" rx="2" ry="2" />
<text  x="714.10" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="458.7" y="101" width="1.1" height="15.0" fill="rgb(212,46,14)" rx="2" ry="2" />
<text  x="461.70" y="111.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee1fada120) (1 samples, 0.09%)</title><rect x="35.9" y="357" width="1.1" height="15.0" fill="rgb(205,136,1)" rx="2" ry="2" />
<text  x="38.89" y="367.5" ></text>
</g>
<g >
<title>__GI___default_morecore(increment=&lt;optimized (1 samples, 0.09%)</title><rect x="666.9" y="325" width="1.1" height="15.0" fill="rgb(214,122,46)" rx="2" ry="2" />
<text  x="669.87" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="413.4" y="133" width="4.3" height="15.0" fill="rgb(216,61,21)" rx="2" ry="2" />
<text  x="416.40" y="143.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="396.1" y="245" width="22.7" height="15.0" fill="rgb(250,123,30)" rx="2" ry="2" />
<text  x="399.14" y="255.5" >s..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (36 samples, 3.29%)</title><rect x="250.5" y="197" width="38.9" height="15.0" fill="rgb(228,35,3)" rx="2" ry="2" />
<text  x="253.53" y="207.5" >Mul..</text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (8 samples, 0.73%)</title><rect x="711.1" y="389" width="8.6" height="15.0" fill="rgb(240,88,54)" rx="2" ry="2" />
<text  x="714.10" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="675.5" y="325" width="1.1" height="15.0" fill="rgb(236,228,25)" rx="2" ry="2" />
<text  x="678.50" y="335.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164b98) (2 samples, 0.18%)</title><rect x="112.5" y="149" width="2.1" height="15.0" fill="rgb(244,203,26)" rx="2" ry="2" />
<text  x="115.47" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (82 samples, 7.50%)</title><rect x="235.4" y="213" width="88.5" height="15.0" fill="rgb(234,139,4)" rx="2" ry="2" />
<text  x="238.43" y="223.5" >MultiThrea..</text>
</g>
<g >
<title>_IO_no_init(fp=fp@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="871.8" y="421" width="1.1" height="15.0" fill="rgb(235,158,51)" rx="2" ry="2" />
<text  x="874.81" y="431.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (2 samples, 0.18%)</title><rect x="1176.0" y="389" width="2.1" height="15.0" fill="rgb(222,196,19)" rx="2" ry="2" />
<text  x="1178.98" y="399.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (5 samples, 0.46%)</title><rect x="726.2" y="405" width="5.4" height="15.0" fill="rgb(243,151,3)" rx="2" ry="2" />
<text  x="729.20" y="415.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="826.5" y="181" width="1.1" height="15.0" fill="rgb(239,215,30)" rx="2" ry="2" />
<text  x="829.51" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (23 samples, 2.10%)</title><rect x="43.4" y="309" width="24.8" height="15.0" fill="rgb(224,222,1)" rx="2" ry="2" />
<text  x="46.44" y="319.5" >s..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.18%)</title><rect x="984.0" y="437" width="2.1" height="15.0" fill="rgb(215,67,54)" rx="2" ry="2" />
<text  x="986.99" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (14 samples, 1.28%)</title><rect x="1155.5" y="405" width="15.1" height="15.0" fill="rgb(243,13,11)" rx="2" ry="2" />
<text  x="1158.48" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5820) (2 samples, 0.18%)</title><rect x="240.8" y="149" width="2.2" height="15.0" fill="rgb(234,108,1)" rx="2" ry="2" />
<text  x="243.82" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (22 samples, 2.01%)</title><rect x="100.6" y="197" width="23.7" height="15.0" fill="rgb(212,142,24)" rx="2" ry="2" />
<text  x="103.60" y="207.5" >M..</text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.09%)</title><rect x="1140.4" y="437" width="1.1" height="15.0" fill="rgb(240,165,20)" rx="2" ry="2" />
<text  x="1143.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.09%)</title><rect x="378.9" y="117" width="1.1" height="15.0" fill="rgb(245,109,54)" rx="2" ry="2" />
<text  x="381.88" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="675.5" y="245" width="1.1" height="15.0" fill="rgb(254,135,45)" rx="2" ry="2" />
<text  x="678.50" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.73%)</title><rect x="939.8" y="437" width="8.6" height="15.0" fill="rgb(223,100,18)" rx="2" ry="2" />
<text  x="942.76" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="10.0" y="453" width="17.3" height="15.0" fill="rgb(223,178,40)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="73.6" y="309" width="1.1" height="15.0" fill="rgb(220,77,32)" rx="2" ry="2" />
<text  x="76.64" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="666.9" y="389" width="1.1" height="15.0" fill="rgb(225,72,20)" rx="2" ry="2" />
<text  x="669.87" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.37%)</title><rect x="994.8" y="421" width="4.3" height="15.0" fill="rgb(241,99,0)" rx="2" ry="2" />
<text  x="997.77" y="431.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="676.6" y="293" width="1.1" height="15.0" fill="rgb(238,106,54)" rx="2" ry="2" />
<text  x="679.58" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="852.4" y="309" width="7.5" height="15.0" fill="rgb(228,212,20)" rx="2" ry="2" />
<text  x="855.39" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (6 samples, 0.55%)</title><rect x="719.7" y="437" width="6.5" height="15.0" fill="rgb(245,168,36)" rx="2" ry="2" />
<text  x="722.73" y="447.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn(f=0x7ffea105e4e0, (1 samples, 0.09%)</title><rect x="1139.3" y="421" width="1.1" height="15.0" fill="rgb(252,101,0)" rx="2" ry="2" />
<text  x="1142.31" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803af792b0, (1 samples, 0.09%)</title><rect x="824.4" y="197" width="1.0" height="15.0" fill="rgb(211,190,25)" rx="2" ry="2" />
<text  x="827.35" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1151.2" y="469" width="2.1" height="15.0" fill="rgb(220,26,25)" rx="2" ry="2" />
<text  x="1154.17" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (5 samples, 0.46%)</title><rect x="1181.4" y="341" width="5.4" height="15.0" fill="rgb(245,168,32)" rx="2" ry="2" />
<text  x="1184.37" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2b3fe5a0) (5 samples, 0.46%)</title><rect x="726.2" y="453" width="5.4" height="15.0" fill="rgb(221,153,17)" rx="2" ry="2" />
<text  x="729.20" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f8027aaddb0) (1 samples, 0.09%)</title><rect x="821.1" y="181" width="1.1" height="15.0" fill="rgb(240,23,32)" rx="2" ry="2" />
<text  x="824.12" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.18%)</title><rect x="900.9" y="389" width="2.2" height="15.0" fill="rgb(243,13,29)" rx="2" ry="2" />
<text  x="903.93" y="399.5" ></text>
</g>
<g >
<title>std::(__val=160666) (1 samples, 0.09%)</title><rect x="1140.4" y="485" width="1.1" height="15.0" fill="rgb(205,145,48)" rx="2" ry="2" />
<text  x="1143.38" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1143.6" y="437" width="1.1" height="15.0" fill="rgb(215,84,43)" rx="2" ry="2" />
<text  x="1146.62" y="447.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.09%)</title><rect x="831.9" y="181" width="1.1" height="15.0" fill="rgb(213,168,47)" rx="2" ry="2" />
<text  x="834.90" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.64%)</title><rect x="188.0" y="165" width="7.5" height="15.0" fill="rgb(234,111,22)" rx="2" ry="2" />
<text  x="190.97" y="175.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164b98, (2 samples, 0.18%)</title><rect x="112.5" y="133" width="2.1" height="15.0" fill="rgb(224,78,12)" rx="2" ry="2" />
<text  x="115.47" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8018fa0cb0, (1 samples, 0.09%)</title><rect x="794.1" y="197" width="1.1" height="15.0" fill="rgb(208,25,51)" rx="2" ry="2" />
<text  x="797.15" y="207.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (6 samples, 0.55%)</title><rect x="88.7" y="357" width="6.5" height="15.0" fill="rgb(253,126,25)" rx="2" ry="2" />
<text  x="91.74" y="367.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.09%)</title><rect x="375.6" y="149" width="1.1" height="15.0" fill="rgb(211,15,43)" rx="2" ry="2" />
<text  x="378.65" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::PageInfo::setCurrentRank (1 samples, 0.09%)</title><rect x="555.8" y="197" width="1.1" height="15.0" fill="rgb(237,178,51)" rx="2" ry="2" />
<text  x="558.78" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (180 samples, 16.45%)</title><rect x="469.5" y="341" width="194.1" height="15.0" fill="rgb(230,137,48)" rx="2" ry="2" />
<text  x="472.49" y="351.5" >std::__future_base::_Stat..</text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (5 samples, 0.46%)</title><rect x="464.1" y="293" width="5.4" height="15.0" fill="rgb(253,157,42)" rx="2" ry="2" />
<text  x="467.10" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1178.1" y="453" width="2.2" height="15.0" fill="rgb(224,113,50)" rx="2" ry="2" />
<text  x="1181.14" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="963.5" y="421" width="2.1" height="15.0" fill="rgb(212,186,10)" rx="2" ry="2" />
<text  x="966.49" y="431.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8028000020, (1 samples, 0.09%)</title><rect x="803.9" y="181" width="1.0" height="15.0" fill="rgb(238,205,50)" rx="2" ry="2" />
<text  x="806.86" y="191.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.18%)</title><rect x="103.8" y="117" width="2.2" height="15.0" fill="rgb(212,183,7)" rx="2" ry="2" />
<text  x="106.84" y="127.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b2fdc30) (1 samples, 0.09%)</title><rect x="34.8" y="357" width="1.1" height="15.0" fill="rgb(243,57,48)" rx="2" ry="2" />
<text  x="37.81" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffea105ea00) (25 samples, 2.29%)</title><rect x="677.7" y="485" width="26.9" height="15.0" fill="rgb(253,12,18)" rx="2" ry="2" />
<text  x="680.66" y="495.5" >M..</text>
</g>
<g >
<title>PageIdHash::operator() (36 samples, 3.29%)</title><rect x="195.5" y="149" width="38.9" height="15.0" fill="rgb(225,212,4)" rx="2" ry="2" />
<text  x="198.52" y="159.5" >Pag..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.73%)</title><rect x="939.8" y="453" width="8.6" height="15.0" fill="rgb(212,227,24)" rx="2" ry="2" />
<text  x="942.76" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="1186.8" y="309" width="1.0" height="15.0" fill="rgb(240,131,4)" rx="2" ry="2" />
<text  x="1189.76" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (59 samples, 5.39%)</title><rect x="595.7" y="133" width="63.6" height="15.0" fill="rgb(224,39,6)" rx="2" ry="2" />
<text  x="598.69" y="143.5" >std::h..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff808, (8 samples, 0.73%)</title><rect x="1034.7" y="373" width="8.6" height="15.0" fill="rgb(253,48,40)" rx="2" ry="2" />
<text  x="1037.68" y="383.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (12 samples, 1.10%)</title><rect x="111.4" y="181" width="12.9" height="15.0" fill="rgb(215,144,21)" rx="2" ry="2" />
<text  x="114.39" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (65 samples, 5.94%)</title><rect x="27.3" y="421" width="70.1" height="15.0" fill="rgb(243,71,54)" rx="2" ry="2" />
<text  x="30.26" y="431.5" >MultiTh..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="704.6" y="437" width="1.1" height="15.0" fill="rgb(226,113,25)" rx="2" ry="2" />
<text  x="707.63" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (522 samples, 47.71%)</title><rect x="100.6" y="469" width="563.0" height="15.0" fill="rgb(224,178,1)" rx="2" ry="2" />
<text  x="103.60" y="479.5" >std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::t..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1178.1" y="341" width="1.1" height="15.0" fill="rgb(229,212,4)" rx="2" ry="2" />
<text  x="1181.14" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1145.8" y="389" width="1.1" height="15.0" fill="rgb(236,63,41)" rx="2" ry="2" />
<text  x="1148.78" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8024000020) (1 samples, 0.09%)</title><rect x="841.6" y="261" width="1.1" height="15.0" fill="rgb(238,51,46)" rx="2" ry="2" />
<text  x="844.61" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (5 samples, 0.46%)</title><rect x="458.7" y="197" width="5.4" height="15.0" fill="rgb(250,36,12)" rx="2" ry="2" />
<text  x="461.70" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.18%)</title><rect x="968.9" y="325" width="2.1" height="15.0" fill="rgb(247,87,20)" rx="2" ry="2" />
<text  x="971.88" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (3 samples, 0.27%)</title><rect x="71.5" y="357" width="3.2" height="15.0" fill="rgb(226,96,0)" rx="2" ry="2" />
<text  x="74.48" y="367.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8020000020, (1 samples, 0.09%)</title><rect x="848.1" y="277" width="1.1" height="15.0" fill="rgb(208,113,16)" rx="2" ry="2" />
<text  x="851.08" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.18%)</title><rect x="707.9" y="389" width="2.1" height="15.0" fill="rgb(249,116,48)" rx="2" ry="2" />
<text  x="710.86" y="399.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.18%)</title><rect x="889.1" y="405" width="2.1" height="15.0" fill="rgb(229,228,41)" rx="2" ry="2" />
<text  x="892.07" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188843566848, (8 samples, 0.73%)</title><rect x="711.1" y="341" width="8.6" height="15.0" fill="rgb(248,195,13)" rx="2" ry="2" />
<text  x="714.10" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5820) (2 samples, 0.18%)</title><rect x="240.8" y="133" width="2.2" height="15.0" fill="rgb(225,64,51)" rx="2" ry="2" />
<text  x="243.82" y="143.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.18%)</title><rect x="300.1" y="101" width="2.2" height="15.0" fill="rgb(252,148,38)" rx="2" ry="2" />
<text  x="303.15" y="111.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (67 samples, 6.12%)</title><rect x="1043.3" y="437" width="72.3" height="15.0" fill="rgb(241,54,24)" rx="2" ry="2" />
<text  x="1046.31" y="447.5" >std::__f..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (9 samples, 0.82%)</title><rect x="578.4" y="149" width="9.7" height="15.0" fill="rgb(238,48,30)" rx="2" ry="2" />
<text  x="581.43" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageIdAndRank*&gt;,PageIdAndRank*&gt; (1 samples, 0.09%)</title><rect x="1146.9" y="389" width="1.0" height="15.0" fill="rgb(213,210,40)" rx="2" ry="2" />
<text  x="1149.86" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.09%)</title><rect x="859.9" y="373" width="1.1" height="15.0" fill="rgb(224,85,29)" rx="2" ry="2" />
<text  x="862.95" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="975.4" y="421" width="1.0" height="15.0" fill="rgb(220,208,28)" rx="2" ry="2" />
<text  x="978.36" y="431.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (522 samples, 47.71%)</title><rect x="100.6" y="501" width="563.0" height="15.0" fill="rgb(205,10,20)" rx="2" ry="2" />
<text  x="103.60" y="511.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base:..</text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="664.7" y="357" width="1.1" height="15.0" fill="rgb(219,213,32)" rx="2" ry="2" />
<text  x="667.72" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;,Network (3 samples, 0.27%)</title><rect x="97.4" y="421" width="3.2" height="15.0" fill="rgb(243,174,11)" rx="2" ry="2" />
<text  x="100.37" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1144.7" y="421" width="1.1" height="15.0" fill="rgb(252,42,52)" rx="2" ry="2" />
<text  x="1147.70" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f80298d43a0) (1 samples, 0.09%)</title><rect x="810.3" y="181" width="1.1" height="15.0" fill="rgb(207,120,25)" rx="2" ry="2" />
<text  x="813.33" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.18%)</title><rect x="889.1" y="437" width="2.1" height="15.0" fill="rgb(209,208,3)" rx="2" ry="2" />
<text  x="892.07" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (5 samples, 0.46%)</title><rect x="582.7" y="69" width="5.4" height="15.0" fill="rgb(205,118,15)" rx="2" ry="2" />
<text  x="585.74" y="79.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (2 samples, 0.18%)</title><rect x="74.7" y="357" width="2.2" height="15.0" fill="rgb(238,184,45)" rx="2" ry="2" />
<text  x="77.72" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.18%)</title><rect x="986.1" y="405" width="2.2" height="15.0" fill="rgb(239,158,42)" rx="2" ry="2" />
<text  x="989.14" y="415.5" ></text>
</g>
<g >
<title>PageId::PageId (9 samples, 0.82%)</title><rect x="878.3" y="437" width="9.7" height="15.0" fill="rgb(243,113,0)" rx="2" ry="2" />
<text  x="881.28" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="894.5" y="437" width="1.0" height="15.0" fill="rgb(218,89,16)" rx="2" ry="2" />
<text  x="897.46" y="447.5" ></text>
</g>
<g >
<title>Network::addPage (9 samples, 0.82%)</title><rect x="851.3" y="501" width="9.7" height="15.0" fill="rgb(244,136,48)" rx="2" ry="2" />
<text  x="854.32" y="511.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (2 samples, 0.18%)</title><rect x="115.7" y="117" width="2.2" height="15.0" fill="rgb(205,33,9)" rx="2" ry="2" />
<text  x="118.70" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.18%)</title><rect x="1186.8" y="357" width="2.1" height="15.0" fill="rgb(217,22,35)" rx="2" ry="2" />
<text  x="1189.76" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (10 samples, 0.91%)</title><rect x="45.6" y="245" width="10.8" height="15.0" fill="rgb(241,222,47)" rx="2" ry="2" />
<text  x="48.59" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="1147.9" y="389" width="1.1" height="15.0" fill="rgb(234,187,9)" rx="2" ry="2" />
<text  x="1150.93" y="399.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="870.7" y="421" width="1.1" height="15.0" fill="rgb(227,37,23)" rx="2" ry="2" />
<text  x="873.73" y="431.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="245.1" y="117" width="1.1" height="15.0" fill="rgb(219,143,43)" rx="2" ry="2" />
<text  x="248.14" y="127.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1de1e0) (3 samples, 0.27%)</title><rect x="486.7" y="149" width="3.3" height="15.0" fill="rgb(239,178,25)" rx="2" ry="2" />
<text  x="489.75" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="441.4" y="197" width="2.2" height="15.0" fill="rgb(251,13,3)" rx="2" ry="2" />
<text  x="444.44" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (13 samples, 1.19%)</title><rect x="1115.6" y="437" width="14.0" height="15.0" fill="rgb(222,37,38)" rx="2" ry="2" />
<text  x="1118.58" y="447.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="473.8" y="149" width="1.1" height="15.0" fill="rgb(254,199,14)" rx="2" ry="2" />
<text  x="476.80" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (124 samples, 11.33%)</title><rect x="100.6" y="213" width="133.8" height="15.0" fill="rgb(237,122,14)" rx="2" ry="2" />
<text  x="103.60" y="223.5" >MultiThreadedPag..</text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (8 samples, 0.73%)</title><rect x="1180.3" y="469" width="8.6" height="15.0" fill="rgb(217,38,17)" rx="2" ry="2" />
<text  x="1183.29" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cc60) (2 samples, 0.18%)</title><rect x="471.6" y="133" width="2.2" height="15.0" fill="rgb(225,146,47)" rx="2" ry="2" />
<text  x="474.65" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (16 samples, 1.46%)</title><rect x="578.4" y="165" width="17.3" height="15.0" fill="rgb(215,214,34)" rx="2" ry="2" />
<text  x="581.43" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (125 samples, 11.43%)</title><rect x="100.6" y="325" width="134.8" height="15.0" fill="rgb(248,25,50)" rx="2" ry="2" />
<text  x="103.60" y="335.5" >std::function&lt;std..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (3 samples, 0.27%)</title><rect x="343.3" y="181" width="3.2" height="15.0" fill="rgb(225,194,37)" rx="2" ry="2" />
<text  x="346.29" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.09%)</title><rect x="1145.8" y="453" width="1.1" height="15.0" fill="rgb(243,149,14)" rx="2" ry="2" />
<text  x="1148.78" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (180 samples, 16.45%)</title><rect x="469.5" y="261" width="194.1" height="15.0" fill="rgb(248,104,11)" rx="2" ry="2" />
<text  x="472.49" y="271.5" >std::thread::_Invoker&lt;std..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (16 samples, 1.46%)</title><rect x="10.0" y="437" width="17.3" height="15.0" fill="rgb(244,40,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.18%)</title><rect x="909.6" y="373" width="2.1" height="15.0" fill="rgb(240,122,32)" rx="2" ry="2" />
<text  x="912.56" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="852.4" y="293" width="7.5" height="15.0" fill="rgb(211,64,23)" rx="2" ry="2" />
<text  x="855.39" y="303.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5890) (1 samples, 0.09%)</title><rect x="479.2" y="149" width="1.1" height="15.0" fill="rgb(216,166,6)" rx="2" ry="2" />
<text  x="482.20" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1145.8" y="373" width="1.1" height="15.0" fill="rgb(211,83,32)" rx="2" ry="2" />
<text  x="1148.78" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (1 samples, 0.09%)</title><rect x="665.8" y="421" width="1.1" height="15.0" fill="rgb(239,211,23)" rx="2" ry="2" />
<text  x="668.80" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.09%)</title><rect x="20.8" y="277" width="1.1" height="15.0" fill="rgb(226,111,16)" rx="2" ry="2" />
<text  x="23.79" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f80359f6a70) (1 samples, 0.09%)</title><rect x="828.7" y="181" width="1.0" height="15.0" fill="rgb(241,57,21)" rx="2" ry="2" />
<text  x="831.67" y="191.5" ></text>
</g>
<g >
<title>std::(__val=1013) (1 samples, 0.09%)</title><rect x="862.1" y="469" width="1.1" height="15.0" fill="rgb(252,180,30)" rx="2" ry="2" />
<text  x="865.10" y="479.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="943.0" y="197" width="1.1" height="15.0" fill="rgb(220,82,12)" rx="2" ry="2" />
<text  x="946.00" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802d676c90) (1 samples, 0.09%)</title><rect x="822.2" y="181" width="1.1" height="15.0" fill="rgb(232,15,12)" rx="2" ry="2" />
<text  x="825.19" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188851959552, (50 samples, 4.57%)</title><rect x="737.0" y="341" width="53.9" height="15.0" fill="rgb(248,212,28)" rx="2" ry="2" />
<text  x="739.98" y="351.5" >__GI_..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cd08) (2 samples, 0.18%)</title><rect x="238.7" y="133" width="2.1" height="15.0" fill="rgb(252,68,30)" rx="2" ry="2" />
<text  x="241.67" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.09%)</title><rect x="704.6" y="309" width="1.1" height="15.0" fill="rgb(218,41,45)" rx="2" ry="2" />
<text  x="707.63" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.18%)</title><rect x="904.2" y="453" width="2.1" height="15.0" fill="rgb(242,180,52)" rx="2" ry="2" />
<text  x="907.17" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188851959552, (9 samples, 0.82%)</title><rect x="694.9" y="453" width="9.7" height="15.0" fill="rgb(247,39,1)" rx="2" ry="2" />
<text  x="697.92" y="463.5" ></text>
</g>
<g >
<title>std::thread::join()() (11 samples, 1.01%)</title><rect x="1012.0" y="357" width="11.9" height="15.0" fill="rgb(229,207,4)" rx="2" ry="2" />
<text  x="1015.03" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (75 samples, 6.86%)</title><rect x="578.4" y="181" width="80.9" height="15.0" fill="rgb(231,107,7)" rx="2" ry="2" />
<text  x="581.43" y="191.5" >std::__de..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802a268290) (1 samples, 0.09%)</title><rect x="808.2" y="181" width="1.1" height="15.0" fill="rgb(246,192,20)" rx="2" ry="2" />
<text  x="811.17" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="859.9" y="245" width="1.1" height="15.0" fill="rgb(254,175,7)" rx="2" ry="2" />
<text  x="862.95" y="255.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (1 samples, 0.09%)</title><rect x="1143.6" y="469" width="1.1" height="15.0" fill="rgb(221,152,4)" rx="2" ry="2" />
<text  x="1146.62" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.18%)</title><rect x="300.1" y="37" width="2.2" height="15.0" fill="rgb(219,15,52)" rx="2" ry="2" />
<text  x="303.15" y="47.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2 samples, 0.18%)</title><rect x="35.9" y="389" width="2.1" height="15.0" fill="rgb(231,87,26)" rx="2" ry="2" />
<text  x="38.89" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="421" width="2.2" height="15.0" fill="rgb(252,209,46)" rx="2" ry="2" />
<text  x="964.33" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80277ef510, (1 samples, 0.09%)</title><rect x="801.7" y="197" width="1.1" height="15.0" fill="rgb(228,146,14)" rx="2" ry="2" />
<text  x="804.70" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1b5858) (1 samples, 0.09%)</title><rect x="485.7" y="149" width="1.0" height="15.0" fill="rgb(211,221,1)" rx="2" ry="2" />
<text  x="488.67" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.09%)</title><rect x="378.9" y="133" width="1.1" height="15.0" fill="rgb(216,71,29)" rx="2" ry="2" />
<text  x="381.88" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="941.9" y="197" width="1.1" height="15.0" fill="rgb(217,57,34)" rx="2" ry="2" />
<text  x="944.92" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (6 samples, 0.55%)</title><rect x="669.0" y="421" width="6.5" height="15.0" fill="rgb(213,163,52)" rx="2" ry="2" />
<text  x="672.03" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee1fb51128, (1 samples, 0.09%)</title><rect x="835.1" y="293" width="1.1" height="15.0" fill="rgb(233,80,44)" rx="2" ry="2" />
<text  x="838.14" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (2 samples, 0.18%)</title><rect x="895.5" y="389" width="2.2" height="15.0" fill="rgb(206,228,2)" rx="2" ry="2" />
<text  x="898.54" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="944.1" y="293" width="1.1" height="15.0" fill="rgb(245,210,32)" rx="2" ry="2" />
<text  x="947.08" y="303.5" ></text>
</g>
<g >
<title>std::_Construct&lt;Page, (1 samples, 0.09%)</title><rect x="1137.1" y="389" width="1.1" height="15.0" fill="rgb(207,184,3)" rx="2" ry="2" />
<text  x="1140.15" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1188.9" y="485" width="1.1" height="15.0" fill="rgb(212,43,40)" rx="2" ry="2" />
<text  x="1191.92" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.27%)</title><rect x="460.9" y="117" width="3.2" height="15.0" fill="rgb(216,136,18)" rx="2" ry="2" />
<text  x="463.86" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.18%)</title><rect x="74.7" y="341" width="2.2" height="15.0" fill="rgb(227,107,39)" rx="2" ry="2" />
<text  x="77.72" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5858) (1 samples, 0.09%)</title><rect x="243.0" y="133" width="1.1" height="15.0" fill="rgb(216,65,43)" rx="2" ry="2" />
<text  x="245.98" y="143.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="418.8" y="277" width="22.6" height="15.0" fill="rgb(245,78,17)" rx="2" ry="2" />
<text  x="421.79" y="287.5" >s..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.09%)</title><rect x="418.8" y="181" width="1.1" height="15.0" fill="rgb(212,100,35)" rx="2" ry="2" />
<text  x="421.79" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="675.5" y="453" width="2.2" height="15.0" fill="rgb(240,72,40)" rx="2" ry="2" />
<text  x="678.50" y="463.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.09%)</title><rect x="378.9" y="85" width="1.1" height="15.0" fill="rgb(242,15,27)" rx="2" ry="2" />
<text  x="381.88" y="95.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff7f8, (21 samples, 1.92%)</title><rect x="441.4" y="357" width="22.7" height="15.0" fill="rgb(214,21,43)" rx="2" ry="2" />
<text  x="444.44" y="367.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803e33c7f0, (1 samples, 0.09%)</title><rect x="830.8" y="197" width="1.1" height="15.0" fill="rgb(241,83,26)" rx="2" ry="2" />
<text  x="833.82" y="207.5" ></text>
</g>
<g >
<title>std::thread::join()() (6 samples, 0.55%)</title><rect x="719.7" y="357" width="6.5" height="15.0" fill="rgb(219,127,11)" rx="2" ry="2" />
<text  x="722.73" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.09%)</title><rect x="410.2" y="117" width="1.0" height="15.0" fill="rgb(216,35,44)" rx="2" ry="2" />
<text  x="413.16" y="127.5" ></text>
</g>
<g >
<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (6 samples, 0.55%)</title><rect x="1137.1" y="517" width="6.5" height="15.0" fill="rgb(245,81,20)" rx="2" ry="2" />
<text  x="1140.15" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80347d59e0, (1 samples, 0.09%)</title><rect x="816.8" y="197" width="1.1" height="15.0" fill="rgb(254,30,36)" rx="2" ry="2" />
<text  x="819.80" y="207.5" ></text>
</g>
<g >
<title>__find_specmb(format=0x55ee171cb0c2 (1 samples, 0.09%)</title><rect x="865.3" y="405" width="1.1" height="15.0" fill="rgb(242,100,51)" rx="2" ry="2" />
<text  x="868.34" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.27%)</title><rect x="460.9" y="165" width="3.2" height="15.0" fill="rgb(208,24,6)" rx="2" ry="2" />
<text  x="463.86" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="964.6" y="373" width="1.0" height="15.0" fill="rgb(241,208,51)" rx="2" ry="2" />
<text  x="967.57" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="453" width="1.0" height="15.0" fill="rgb(245,93,31)" rx="2" ry="2" />
<text  x="867.26" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1b5858, (1 samples, 0.09%)</title><rect x="485.7" y="133" width="1.0" height="15.0" fill="rgb(242,168,36)" rx="2" ry="2" />
<text  x="488.67" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8031251150, (1 samples, 0.09%)</title><rect x="815.7" y="197" width="1.1" height="15.0" fill="rgb(248,110,24)" rx="2" ry="2" />
<text  x="818.72" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="898.8" y="453" width="1.1" height="15.0" fill="rgb(245,140,17)" rx="2" ry="2" />
<text  x="901.78" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;Page*, (1 samples, 0.09%)</title><rect x="1137.1" y="453" width="1.1" height="15.0" fill="rgb(242,121,27)" rx="2" ry="2" />
<text  x="1140.15" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="1180.3" y="341" width="1.1" height="15.0" fill="rgb(233,80,4)" rx="2" ry="2" />
<text  x="1183.29" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80269fcdb0, (1 samples, 0.09%)</title><rect x="799.5" y="197" width="1.1" height="15.0" fill="rgb(223,95,44)" rx="2" ry="2" />
<text  x="802.54" y="207.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (159 samples, 14.53%)</title><rect x="677.7" y="517" width="171.5" height="15.0" fill="rgb(214,174,16)" rx="2" ry="2" />
<text  x="680.66" y="527.5" >MultiThreadedPageRankC..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="375.6" y="165" width="1.1" height="15.0" fill="rgb(226,147,17)" rx="2" ry="2" />
<text  x="378.65" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="963.5" y="437" width="2.1" height="15.0" fill="rgb(228,201,9)" rx="2" ry="2" />
<text  x="966.49" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="418.8" y="213" width="22.6" height="15.0" fill="rgb(225,214,4)" rx="2" ry="2" />
<text  x="421.79" y="223.5" >M..</text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188826781440, (5 samples, 0.46%)</title><rect x="726.2" y="341" width="5.4" height="15.0" fill="rgb(206,79,31)" rx="2" ry="2" />
<text  x="729.20" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1180.3" y="373" width="1.1" height="15.0" fill="rgb(252,150,33)" rx="2" ry="2" />
<text  x="1183.29" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee18eeee60) (1 samples, 0.09%)</title><rect x="469.5" y="149" width="1.1" height="15.0" fill="rgb(240,206,52)" rx="2" ry="2" />
<text  x="472.49" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (12 samples, 1.10%)</title><rect x="397.2" y="197" width="13.0" height="15.0" fill="rgb(231,26,22)" rx="2" ry="2" />
<text  x="400.22" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="888.0" y="357" width="1.1" height="15.0" fill="rgb(248,44,1)" rx="2" ry="2" />
<text  x="890.99" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="874.0" y="389" width="1.0" height="15.0" fill="rgb(211,190,13)" rx="2" ry="2" />
<text  x="876.97" y="399.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="342.2" y="117" width="1.1" height="15.0" fill="rgb(230,61,19)" rx="2" ry="2" />
<text  x="345.21" y="127.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="34.8" y="325" width="1.1" height="15.0" fill="rgb(218,106,28)" rx="2" ry="2" />
<text  x="37.81" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee26b5a008, (1 samples, 0.09%)</title><rect x="1133.9" y="293" width="1.1" height="15.0" fill="rgb(247,32,22)" rx="2" ry="2" />
<text  x="1136.91" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="98.4" y="341" width="2.2" height="15.0" fill="rgb(225,28,7)" rx="2" ry="2" />
<text  x="101.45" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="20.8" y="341" width="1.1" height="15.0" fill="rgb(222,151,40)" rx="2" ry="2" />
<text  x="23.79" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee26890848, (1 samples, 0.09%)</title><rect x="945.2" y="309" width="1.0" height="15.0" fill="rgb(212,177,54)" rx="2" ry="2" />
<text  x="948.16" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (22 samples, 2.01%)</title><rect x="916.0" y="405" width="23.8" height="15.0" fill="rgb(235,73,7)" rx="2" ry="2" />
<text  x="919.03" y="415.5" >s..</text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (5 samples, 0.46%)</title><rect x="71.5" y="389" width="5.4" height="15.0" fill="rgb(233,79,29)" rx="2" ry="2" />
<text  x="74.48" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f800c000020, (1 samples, 0.09%)</title><rect x="793.1" y="181" width="1.0" height="15.0" fill="rgb(227,128,11)" rx="2" ry="2" />
<text  x="796.07" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (83 samples, 7.59%)</title><rect x="235.4" y="261" width="89.6" height="15.0" fill="rgb(215,99,22)" rx="2" ry="2" />
<text  x="238.43" y="271.5" >std::threa..</text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (50 samples, 4.57%)</title><rect x="342.2" y="229" width="53.9" height="15.0" fill="rgb(205,228,46)" rx="2" ry="2" />
<text  x="345.21" y="239.5" >std::..</text>
</g>
<g >
<title>std::call_once&lt;void (67 samples, 6.12%)</title><rect x="1043.3" y="405" width="72.3" height="15.0" fill="rgb(251,22,18)" rx="2" ry="2" />
<text  x="1046.31" y="415.5" >std::cal..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee2781c320, (1 samples, 0.09%)</title><rect x="1183.5" y="245" width="1.1" height="15.0" fill="rgb(237,217,39)" rx="2" ry="2" />
<text  x="1186.53" y="255.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5858) (1 samples, 0.09%)</title><rect x="478.1" y="149" width="1.1" height="15.0" fill="rgb(254,1,49)" rx="2" ry="2" />
<text  x="481.12" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="952.7" y="453" width="3.2" height="15.0" fill="rgb(241,115,44)" rx="2" ry="2" />
<text  x="955.71" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5858) (3 samples, 0.27%)</title><rect x="106.0" y="133" width="3.2" height="15.0" fill="rgb(223,49,15)" rx="2" ry="2" />
<text  x="109.00" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="915.0" y="437" width="1.0" height="15.0" fill="rgb(220,151,6)" rx="2" ry="2" />
<text  x="917.95" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (59 samples, 5.39%)</title><rect x="595.7" y="101" width="63.6" height="15.0" fill="rgb(211,118,16)" rx="2" ry="2" />
<text  x="598.69" y="111.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (10 samples, 0.91%)</title><rect x="560.1" y="165" width="10.8" height="15.0" fill="rgb(246,198,20)" rx="2" ry="2" />
<text  x="563.09" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2a6c1bb0) (6 samples, 0.55%)</title><rect x="719.7" y="453" width="6.5" height="15.0" fill="rgb(238,137,11)" rx="2" ry="2" />
<text  x="722.73" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (3 samples, 0.27%)</title><rect x="71.5" y="341" width="3.2" height="15.0" fill="rgb(233,62,42)" rx="2" ry="2" />
<text  x="74.48" y="351.5" ></text>
</g>
<g >
<title>operatornew(unsigned (7 samples, 0.64%)</title><rect x="852.4" y="261" width="7.5" height="15.0" fill="rgb(249,206,43)" rx="2" ry="2" />
<text  x="855.39" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (5 samples, 0.46%)</title><rect x="436.1" y="117" width="5.3" height="15.0" fill="rgb(224,66,24)" rx="2" ry="2" />
<text  x="439.05" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.27%)</title><rect x="68.2" y="309" width="3.3" height="15.0" fill="rgb(222,76,54)" rx="2" ry="2" />
<text  x="71.24" y="319.5" ></text>
</g>
<g >
<title>Page::getId (7 samples, 0.64%)</title><rect x="967.8" y="485" width="7.6" height="15.0" fill="rgb(236,8,49)" rx="2" ry="2" />
<text  x="970.81" y="495.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (19 samples, 1.74%)</title><rect x="469.5" y="197" width="20.5" height="15.0" fill="rgb(215,170,14)" rx="2" ry="2" />
<text  x="472.49" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="410.2" y="181" width="1.0" height="15.0" fill="rgb(227,203,19)" rx="2" ry="2" />
<text  x="413.16" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.18%)</title><rect x="707.9" y="405" width="2.1" height="15.0" fill="rgb(207,88,28)" rx="2" ry="2" />
<text  x="710.86" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1143.6" y="421" width="1.1" height="15.0" fill="rgb(213,193,26)" rx="2" ry="2" />
<text  x="1146.62" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (8 samples, 0.73%)</title><rect x="1034.7" y="421" width="8.6" height="15.0" fill="rgb(205,177,4)" rx="2" ry="2" />
<text  x="1037.68" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee2a6bad10) (1 samples, 0.09%)</title><rect x="1135.0" y="277" width="1.1" height="15.0" fill="rgb(247,78,23)" rx="2" ry="2" />
<text  x="1137.99" y="287.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8024000020, (1 samples, 0.09%)</title><rect x="802.8" y="181" width="1.1" height="15.0" fill="rgb(216,95,7)" rx="2" ry="2" />
<text  x="805.78" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.09%)</title><rect x="879.4" y="325" width="1.0" height="15.0" fill="rgb(220,12,53)" rx="2" ry="2" />
<text  x="882.36" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="458.7" y="165" width="2.2" height="15.0" fill="rgb(220,192,32)" rx="2" ry="2" />
<text  x="461.70" y="175.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="100.6" y="149" width="1.1" height="15.0" fill="rgb(253,132,4)" rx="2" ry="2" />
<text  x="103.60" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="441.4" y="293" width="22.7" height="15.0" fill="rgb(241,40,48)" rx="2" ry="2" />
<text  x="444.44" y="303.5" >s..</text>
</g>
<g >
<title>std::thread::join()() (10 samples, 0.91%)</title><rect x="1023.9" y="357" width="10.8" height="15.0" fill="rgb(227,92,49)" rx="2" ry="2" />
<text  x="1026.89" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (14 samples, 1.28%)</title><rect x="556.9" y="181" width="15.1" height="15.0" fill="rgb(251,118,22)" rx="2" ry="2" />
<text  x="559.86" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="98.4" y="309" width="1.1" height="15.0" fill="rgb(218,204,45)" rx="2" ry="2" />
<text  x="101.45" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.09%)</title><rect x="98.4" y="261" width="1.1" height="15.0" fill="rgb(215,151,38)" rx="2" ry="2" />
<text  x="101.45" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188851959552, (10 samples, 0.91%)</title><rect x="1023.9" y="341" width="10.8" height="15.0" fill="rgb(242,55,11)" rx="2" ry="2" />
<text  x="1026.89" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188843566848, (11 samples, 1.01%)</title><rect x="1012.0" y="341" width="11.9" height="15.0" fill="rgb(246,58,24)" rx="2" ry="2" />
<text  x="1015.03" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.37%)</title><rect x="971.0" y="405" width="4.4" height="15.0" fill="rgb(208,157,27)" rx="2" ry="2" />
<text  x="974.04" y="415.5" ></text>
</g>
<g >
<title>__GI___sbrk(increment=135168) (1 samples, 0.09%)</title><rect x="666.9" y="293" width="1.1" height="15.0" fill="rgb(243,134,22)" rx="2" ry="2" />
<text  x="669.87" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (5 samples, 0.46%)</title><rect x="1181.4" y="357" width="5.4" height="15.0" fill="rgb(222,57,10)" rx="2" ry="2" />
<text  x="1184.37" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188851959552, (1 samples, 0.09%)</title><rect x="965.6" y="453" width="1.1" height="15.0" fill="rgb(244,101,29)" rx="2" ry="2" />
<text  x="968.65" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="1186.8" y="373" width="2.1" height="15.0" fill="rgb(221,41,3)" rx="2" ry="2" />
<text  x="1189.76" y="383.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="666.9" y="469" width="1.1" height="15.0" fill="rgb(207,60,34)" rx="2" ry="2" />
<text  x="669.87" y="479.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.18%)</title><rect x="238.7" y="117" width="2.1" height="15.0" fill="rgb(246,183,36)" rx="2" ry="2" />
<text  x="241.67" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (40 samples, 3.66%)</title><rect x="790.9" y="213" width="43.2" height="15.0" fill="rgb(217,55,36)" rx="2" ry="2" />
<text  x="793.91" y="223.5" >std:..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.09%)</title><rect x="1137.1" y="437" width="1.1" height="15.0" fill="rgb(208,131,49)" rx="2" ry="2" />
<text  x="1140.15" y="447.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1181.4" y="229" width="1.0" height="15.0" fill="rgb(239,58,22)" rx="2" ry="2" />
<text  x="1184.37" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x55ee2850ce30, (1 samples, 0.09%)</title><rect x="17.6" y="405" width="1.0" height="15.0" fill="rgb(245,146,42)" rx="2" ry="2" />
<text  x="20.55" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803a617c60, (1 samples, 0.09%)</title><rect x="822.2" y="197" width="1.1" height="15.0" fill="rgb(231,57,49)" rx="2" ry="2" />
<text  x="825.19" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (22 samples, 2.01%)</title><rect x="916.0" y="389" width="23.8" height="15.0" fill="rgb(220,34,14)" rx="2" ry="2" />
<text  x="919.03" y="399.5" >s..</text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.27%)</title><rect x="460.9" y="149" width="3.2" height="15.0" fill="rgb(231,42,14)" rx="2" ry="2" />
<text  x="463.86" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8028000020, (1 samples, 0.09%)</title><rect x="67.2" y="229" width="1.0" height="15.0" fill="rgb(218,142,36)" rx="2" ry="2" />
<text  x="70.17" y="239.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.27%)</title><rect x="952.7" y="389" width="3.2" height="15.0" fill="rgb(236,138,43)" rx="2" ry="2" />
<text  x="955.71" y="399.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8024000020, (1 samples, 0.09%)</title><rect x="813.6" y="181" width="1.0" height="15.0" fill="rgb(206,25,20)" rx="2" ry="2" />
<text  x="816.56" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="859.9" y="309" width="1.1" height="15.0" fill="rgb(245,22,20)" rx="2" ry="2" />
<text  x="862.95" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (11 samples, 1.01%)</title><rect x="1012.0" y="421" width="11.9" height="15.0" fill="rgb(212,96,35)" rx="2" ry="2" />
<text  x="1015.03" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee2c8bd910) (1 samples, 0.09%)</title><rect x="940.8" y="197" width="1.1" height="15.0" fill="rgb(223,204,45)" rx="2" ry="2" />
<text  x="943.84" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="668.0" y="437" width="1.0" height="15.0" fill="rgb(238,100,27)" rx="2" ry="2" />
<text  x="670.95" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="866.4" y="453" width="1.1" height="15.0" fill="rgb(232,97,43)" rx="2" ry="2" />
<text  x="869.42" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1186.8" y="325" width="1.0" height="15.0" fill="rgb(208,148,3)" rx="2" ry="2" />
<text  x="1189.76" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (16 samples, 1.46%)</title><rect x="325.0" y="293" width="17.2" height="15.0" fill="rgb(241,43,42)" rx="2" ry="2" />
<text  x="327.95" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="296.9" y="133" width="1.1" height="15.0" fill="rgb(207,72,8)" rx="2" ry="2" />
<text  x="299.91" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="801.7" y="181" width="1.1" height="15.0" fill="rgb(229,59,21)" rx="2" ry="2" />
<text  x="804.70" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8028000020) (1 samples, 0.09%)</title><rect x="835.1" y="261" width="1.1" height="15.0" fill="rgb(227,212,48)" rx="2" ry="2" />
<text  x="838.14" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="895.5" y="453" width="2.2" height="15.0" fill="rgb(228,167,53)" rx="2" ry="2" />
<text  x="898.54" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (8 samples, 0.73%)</title><rect x="1180.3" y="485" width="8.6" height="15.0" fill="rgb(224,100,26)" rx="2" ry="2" />
<text  x="1183.29" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.37%)</title><rect x="1176.0" y="469" width="4.3" height="15.0" fill="rgb(250,192,25)" rx="2" ry="2" />
<text  x="1178.98" y="479.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="1180.3" y="405" width="1.1" height="15.0" fill="rgb(211,4,22)" rx="2" ry="2" />
<text  x="1183.29" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1147.9" y="453" width="1.1" height="15.0" fill="rgb(217,96,20)" rx="2" ry="2" />
<text  x="1150.93" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="675.5" y="389" width="2.2" height="15.0" fill="rgb(233,5,38)" rx="2" ry="2" />
<text  x="678.50" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="705.7" y="437" width="2.2" height="15.0" fill="rgb(223,116,21)" rx="2" ry="2" />
<text  x="708.70" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (54 samples, 4.94%)</title><rect x="790.9" y="485" width="58.3" height="15.0" fill="rgb(247,206,42)" rx="2" ry="2" />
<text  x="793.91" y="495.5" >std::_..</text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.37%)</title><rect x="939.8" y="293" width="4.3" height="15.0" fill="rgb(253,206,51)" rx="2" ry="2" />
<text  x="942.76" y="303.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (2 samples, 0.18%)</title><rect x="869.7" y="437" width="2.1" height="15.0" fill="rgb(247,28,50)" rx="2" ry="2" />
<text  x="872.65" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (5 samples, 0.46%)</title><rect x="464.1" y="277" width="5.4" height="15.0" fill="rgb(214,73,46)" rx="2" ry="2" />
<text  x="467.10" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.46%)</title><rect x="975.4" y="437" width="5.3" height="15.0" fill="rgb(240,97,43)" rx="2" ry="2" />
<text  x="978.36" y="447.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (606 samples, 55.39%)</title><rect x="10.0" y="533" width="653.6" height="15.0" fill="rgb(222,180,26)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (18 samples, 1.65%)</title><rect x="375.6" y="197" width="19.5" height="15.0" fill="rgb(251,7,38)" rx="2" ry="2" />
<text  x="378.65" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="357" width="1.0" height="15.0" fill="rgb(242,73,4)" rx="2" ry="2" />
<text  x="867.26" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2b363588, (1 samples, 0.09%)</title><rect x="845.9" y="293" width="1.1" height="15.0" fill="rgb(233,11,8)" rx="2" ry="2" />
<text  x="848.92" y="303.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (3 samples, 0.27%)</title><rect x="952.7" y="485" width="3.2" height="15.0" fill="rgb(246,124,29)" rx="2" ry="2" />
<text  x="955.71" y="495.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.09%)</title><rect x="1145.8" y="421" width="1.1" height="15.0" fill="rgb(241,154,45)" rx="2" ry="2" />
<text  x="1148.78" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (5 samples, 0.46%)</title><rect x="464.1" y="245" width="5.4" height="15.0" fill="rgb(247,101,28)" rx="2" ry="2" />
<text  x="467.10" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (2 samples, 0.18%)</title><rect x="675.5" y="501" width="2.2" height="15.0" fill="rgb(229,215,48)" rx="2" ry="2" />
<text  x="678.50" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (40 samples, 3.66%)</title><rect x="790.9" y="309" width="43.2" height="15.0" fill="rgb(206,185,30)" rx="2" ry="2" />
<text  x="793.91" y="319.5" >std:..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (4 samples, 0.37%)</title><rect x="418.8" y="197" width="4.3" height="15.0" fill="rgb(213,25,16)" rx="2" ry="2" />
<text  x="421.79" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (4 samples, 0.37%)</title><rect x="290.4" y="101" width="4.4" height="15.0" fill="rgb(216,106,30)" rx="2" ry="2" />
<text  x="293.44" y="111.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (12 samples, 1.10%)</title><rect x="999.1" y="405" width="12.9" height="15.0" fill="rgb(231,4,32)" rx="2" ry="2" />
<text  x="1002.09" y="415.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (50 samples, 4.57%)</title><rect x="342.2" y="261" width="53.9" height="15.0" fill="rgb(217,57,18)" rx="2" ry="2" />
<text  x="345.21" y="271.5" >std::..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (8 samples, 0.73%)</title><rect x="851.3" y="405" width="8.6" height="15.0" fill="rgb(252,3,26)" rx="2" ry="2" />
<text  x="854.32" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="418.8" y="245" width="22.6" height="15.0" fill="rgb(239,35,15)" rx="2" ry="2" />
<text  x="421.79" y="255.5" >s..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee18eeee60) (1 samples, 0.09%)</title><rect x="469.5" y="133" width="1.1" height="15.0" fill="rgb(243,71,8)" rx="2" ry="2" />
<text  x="472.49" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.18%)</title><rect x="904.2" y="389" width="2.1" height="15.0" fill="rgb(216,150,2)" rx="2" ry="2" />
<text  x="907.17" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803f3c6050) (1 samples, 0.09%)</title><rect x="820.0" y="181" width="1.1" height="15.0" fill="rgb(206,103,25)" rx="2" ry="2" />
<text  x="823.04" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cd08) (2 samples, 0.18%)</title><rect x="103.8" y="133" width="2.2" height="15.0" fill="rgb(229,75,11)" rx="2" ry="2" />
<text  x="106.84" y="143.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="325.0" y="277" width="17.2" height="15.0" fill="rgb(230,129,7)" rx="2" ry="2" />
<text  x="327.95" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803bc33930, (1 samples, 0.09%)</title><rect x="827.6" y="197" width="1.1" height="15.0" fill="rgb(234,9,6)" rx="2" ry="2" />
<text  x="830.59" y="207.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.09%)</title><rect x="418.8" y="165" width="1.1" height="15.0" fill="rgb(241,162,36)" rx="2" ry="2" />
<text  x="421.79" y="175.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee30c021d8, (67 samples, 6.12%)</title><rect x="1043.3" y="373" width="72.3" height="15.0" fill="rgb(227,60,0)" rx="2" ry="2" />
<text  x="1046.31" y="383.5" >__pthrea..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1144.7" y="453" width="1.1" height="15.0" fill="rgb(206,194,39)" rx="2" ry="2" />
<text  x="1147.70" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (8 samples, 0.73%)</title><rect x="1180.3" y="453" width="8.6" height="15.0" fill="rgb(218,96,37)" rx="2" ry="2" />
<text  x="1183.29" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (12 samples, 1.10%)</title><rect x="975.4" y="469" width="12.9" height="15.0" fill="rgb(212,222,19)" rx="2" ry="2" />
<text  x="978.36" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="303.4" y="149" width="1.1" height="15.0" fill="rgb(248,86,34)" rx="2" ry="2" />
<text  x="306.38" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee1f341fa0, (1 samples, 0.09%)</title><rect x="1181.4" y="245" width="1.0" height="15.0" fill="rgb(254,179,37)" rx="2" ry="2" />
<text  x="1184.37" y="255.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (83 samples, 7.59%)</title><rect x="235.4" y="341" width="89.6" height="15.0" fill="rgb(239,8,11)" rx="2" ry="2" />
<text  x="238.43" y="351.5" >std::__fut..</text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.09%)</title><rect x="704.6" y="357" width="1.1" height="15.0" fill="rgb(243,91,22)" rx="2" ry="2" />
<text  x="707.63" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (22 samples, 2.01%)</title><rect x="44.5" y="277" width="23.7" height="15.0" fill="rgb(239,73,49)" rx="2" ry="2" />
<text  x="47.52" y="287.5" >s..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f8026971ef0) (1 samples, 0.09%)</title><rect x="829.7" y="181" width="1.1" height="15.0" fill="rgb(249,229,51)" rx="2" ry="2" />
<text  x="832.74" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164af0, (1 samples, 0.09%)</title><rect x="442.5" y="133" width="1.1" height="15.0" fill="rgb(217,202,19)" rx="2" ry="2" />
<text  x="445.52" y="143.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="396.1" y="277" width="22.7" height="15.0" fill="rgb(237,226,34)" rx="2" ry="2" />
<text  x="399.14" y="287.5" >s..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803afaccd0) (1 samples, 0.09%)</title><rect x="833.0" y="181" width="1.1" height="15.0" fill="rgb(243,53,23)" rx="2" ry="2" />
<text  x="835.98" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8024000020) (1 samples, 0.09%)</title><rect x="842.7" y="261" width="1.1" height="15.0" fill="rgb(208,62,52)" rx="2" ry="2" />
<text  x="845.69" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="458.7" y="149" width="1.1" height="15.0" fill="rgb(227,48,13)" rx="2" ry="2" />
<text  x="461.70" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (54 samples, 4.94%)</title><rect x="790.9" y="421" width="58.3" height="15.0" fill="rgb(239,127,51)" rx="2" ry="2" />
<text  x="793.91" y="431.5" >std::a..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="405" width="2.2" height="15.0" fill="rgb(230,149,39)" rx="2" ry="2" />
<text  x="964.33" y="415.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="76.9" y="405" width="1.1" height="15.0" fill="rgb(218,152,7)" rx="2" ry="2" />
<text  x="79.87" y="415.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1187.8" y="325" width="1.1" height="15.0" fill="rgb(222,142,9)" rx="2" ry="2" />
<text  x="1190.84" y="335.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="845.9" y="277" width="1.1" height="15.0" fill="rgb(213,139,44)" rx="2" ry="2" />
<text  x="848.92" y="287.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (11 samples, 1.01%)</title><rect x="469.5" y="181" width="11.9" height="15.0" fill="rgb(215,188,10)" rx="2" ry="2" />
<text  x="472.49" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="675.5" y="309" width="1.1" height="15.0" fill="rgb(248,196,26)" rx="2" ry="2" />
<text  x="678.50" y="319.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee201acd48, (125 samples, 11.43%)</title><rect x="100.6" y="357" width="134.8" height="15.0" fill="rgb(212,114,41)" rx="2" ry="2" />
<text  x="103.60" y="367.5" >__pthread_once_sl..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5890) (1 samples, 0.09%)</title><rect x="479.2" y="133" width="1.1" height="15.0" fill="rgb(209,179,34)" rx="2" ry="2" />
<text  x="482.20" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (8 samples, 0.73%)</title><rect x="851.3" y="421" width="8.6" height="15.0" fill="rgb(245,151,25)" rx="2" ry="2" />
<text  x="854.32" y="431.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164ab8, (3 samples, 0.27%)</title><rect x="419.9" y="133" width="3.2" height="15.0" fill="rgb(216,106,47)" rx="2" ry="2" />
<text  x="422.87" y="143.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (108 samples, 9.87%)</title><rect x="999.1" y="469" width="116.5" height="15.0" fill="rgb(252,100,34)" rx="2" ry="2" />
<text  x="1002.09" y="479.5" >std::__basic_f..</text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="862.1" y="405" width="1.1" height="15.0" fill="rgb(248,30,39)" rx="2" ry="2" />
<text  x="865.10" y="415.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initPages (5 samples, 0.46%)</title><rect x="1147.9" y="501" width="5.4" height="15.0" fill="rgb(232,140,11)" rx="2" ry="2" />
<text  x="1150.93" y="511.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (1 samples, 0.09%)</title><rect x="417.7" y="213" width="1.1" height="15.0" fill="rgb(237,186,51)" rx="2" ry="2" />
<text  x="420.71" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="1145.8" y="405" width="1.1" height="15.0" fill="rgb(218,27,52)" rx="2" ry="2" />
<text  x="1148.78" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2b370da8, (1 samples, 0.09%)</title><rect x="847.0" y="293" width="1.1" height="15.0" fill="rgb(226,104,14)" rx="2" ry="2" />
<text  x="850.00" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8028000020, (1 samples, 0.09%)</title><rect x="844.8" y="277" width="1.1" height="15.0" fill="rgb(205,88,26)" rx="2" ry="2" />
<text  x="847.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="21.9" y="373" width="1.0" height="15.0" fill="rgb(247,121,0)" rx="2" ry="2" />
<text  x="24.86" y="383.5" ></text>
</g>
<g >
<title>std::mutex::lock (9 samples, 0.82%)</title><rect x="235.4" y="165" width="9.7" height="15.0" fill="rgb(213,18,22)" rx="2" ry="2" />
<text  x="238.43" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (10 samples, 0.91%)</title><rect x="1023.9" y="421" width="10.8" height="15.0" fill="rgb(205,153,50)" rx="2" ry="2" />
<text  x="1026.89" y="431.5" ></text>
</g>
<g >
<title>main() (487 samples, 44.52%)</title><rect x="664.7" y="549" width="525.3" height="15.0" fill="rgb(217,199,8)" rx="2" ry="2" />
<text  x="667.72" y="559.5" >main()</text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.37%)</title><rect x="290.4" y="149" width="4.4" height="15.0" fill="rgb(226,199,36)" rx="2" ry="2" />
<text  x="293.44" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803bc5b770, (1 samples, 0.09%)</title><rect x="828.7" y="197" width="1.0" height="15.0" fill="rgb(235,221,11)" rx="2" ry="2" />
<text  x="831.67" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=66) (1 samples, 0.09%)</title><rect x="879.4" y="341" width="1.0" height="15.0" fill="rgb(228,18,20)" rx="2" ry="2" />
<text  x="882.36" y="351.5" ></text>
</g>
<g >
<title>Page::addLink (14 samples, 1.28%)</title><rect x="878.3" y="501" width="15.1" height="15.0" fill="rgb(235,94,43)" rx="2" ry="2" />
<text  x="881.28" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="389" width="1.0" height="15.0" fill="rgb(222,39,20)" rx="2" ry="2" />
<text  x="867.26" y="399.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks(iteration=12, (1 samples, 0.09%)</title><rect x="1153.3" y="501" width="1.1" height="15.0" fill="rgb(217,166,51)" rx="2" ry="2" />
<text  x="1156.33" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802f90ef50) (1 samples, 0.09%)</title><rect x="830.8" y="181" width="1.1" height="15.0" fill="rgb(254,203,39)" rx="2" ry="2" />
<text  x="833.82" y="191.5" ></text>
</g>
<g >
<title>std::future&lt;std::pair&lt;double, (108 samples, 9.87%)</title><rect x="999.1" y="485" width="116.5" height="15.0" fill="rgb(209,202,35)" rx="2" ry="2" />
<text  x="1002.09" y="495.5" >std::future&lt;st..</text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.18%)</title><rect x="300.1" y="85" width="2.2" height="15.0" fill="rgb(221,214,47)" rx="2" ry="2" />
<text  x="303.15" y="95.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee30c021c8, (180 samples, 16.45%)</title><rect x="469.5" y="357" width="194.1" height="15.0" fill="rgb(244,141,17)" rx="2" ry="2" />
<text  x="472.49" y="367.5" >__pthread_once_slow(once_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="893.4" y="437" width="1.1" height="15.0" fill="rgb(220,214,45)" rx="2" ry="2" />
<text  x="896.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.09%)</title><rect x="570.9" y="165" width="1.1" height="15.0" fill="rgb(212,155,2)" rx="2" ry="2" />
<text  x="573.88" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.55%)</title><rect x="572.0" y="181" width="6.4" height="15.0" fill="rgb(240,101,19)" rx="2" ry="2" />
<text  x="574.96" y="191.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="894.5" y="405" width="1.0" height="15.0" fill="rgb(248,175,37)" rx="2" ry="2" />
<text  x="897.46" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="470.6" y="117" width="1.0" height="15.0" fill="rgb(210,194,26)" rx="2" ry="2" />
<text  x="473.57" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188835174144, (6 samples, 0.55%)</title><rect x="719.7" y="341" width="6.5" height="15.0" fill="rgb(222,188,30)" rx="2" ry="2" />
<text  x="722.73" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (53 samples, 4.84%)</title><rect x="733.7" y="421" width="57.2" height="15.0" fill="rgb(213,42,8)" rx="2" ry="2" />
<text  x="736.75" y="431.5" >std::_..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (4 samples, 0.37%)</title><rect x="939.8" y="341" width="4.3" height="15.0" fill="rgb(224,196,11)" rx="2" ry="2" />
<text  x="942.76" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2b3a23c8, (1 samples, 0.09%)</title><rect x="848.1" y="293" width="1.1" height="15.0" fill="rgb(247,57,4)" rx="2" ry="2" />
<text  x="851.08" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (8 samples, 0.73%)</title><rect x="711.1" y="437" width="8.6" height="15.0" fill="rgb(212,170,2)" rx="2" ry="2" />
<text  x="714.10" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee198168f8, (1 samples, 0.09%)</title><rect x="1178.1" y="293" width="1.1" height="15.0" fill="rgb(250,190,9)" rx="2" ry="2" />
<text  x="1181.14" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="907.4" y="469" width="1.1" height="15.0" fill="rgb(212,48,29)" rx="2" ry="2" />
<text  x="910.40" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.73%)</title><rect x="939.8" y="485" width="8.6" height="15.0" fill="rgb(243,84,7)" rx="2" ry="2" />
<text  x="942.76" y="495.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (10 samples, 0.91%)</title><rect x="666.9" y="517" width="10.8" height="15.0" fill="rgb(214,158,37)" rx="2" ry="2" />
<text  x="669.87" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 0.46%)</title><rect x="436.1" y="181" width="5.3" height="15.0" fill="rgb(243,104,9)" rx="2" ry="2" />
<text  x="439.05" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="453" width="1.1" height="15.0" fill="rgb(234,80,36)" rx="2" ry="2" />
<text  x="906.09" y="463.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e650 (1 samples, 0.09%)</title><rect x="1142.5" y="453" width="1.1" height="15.0" fill="rgb(240,101,48)" rx="2" ry="2" />
<text  x="1145.54" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (180 samples, 16.45%)</title><rect x="469.5" y="229" width="194.1" height="15.0" fill="rgb(205,199,36)" rx="2" ry="2" />
<text  x="472.49" y="239.5" >std::__invoke_impl&lt;std::p..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105ea40, (1 samples, 0.09%)</title><rect x="594.6" y="133" width="1.1" height="15.0" fill="rgb(250,113,40)" rx="2" ry="2" />
<text  x="597.61" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (2 samples, 0.18%)</title><rect x="904.2" y="405" width="2.1" height="15.0" fill="rgb(231,55,49)" rx="2" ry="2" />
<text  x="907.17" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="890.1" y="357" width="1.1" height="15.0" fill="rgb(210,80,31)" rx="2" ry="2" />
<text  x="893.15" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=&lt;optimized (2 samples, 0.18%)</title><rect x="72.6" y="325" width="2.1" height="15.0" fill="rgb(250,223,39)" rx="2" ry="2" />
<text  x="75.56" y="335.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (2 samples, 0.18%)</title><rect x="664.7" y="517" width="2.2" height="15.0" fill="rgb(207,185,54)" rx="2" ry="2" />
<text  x="667.72" y="527.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f803c000020) (1 samples, 0.09%)</title><rect x="838.4" y="261" width="1.1" height="15.0" fill="rgb(224,167,40)" rx="2" ry="2" />
<text  x="841.37" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8028000020, (1 samples, 0.09%)</title><rect x="796.3" y="181" width="1.1" height="15.0" fill="rgb(222,65,32)" rx="2" ry="2" />
<text  x="799.31" y="191.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="243.0" y="117" width="1.1" height="15.0" fill="rgb(213,61,8)" rx="2" ry="2" />
<text  x="245.98" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1de1e0) (1 samples, 0.09%)</title><rect x="109.2" y="133" width="1.1" height="15.0" fill="rgb(208,16,51)" rx="2" ry="2" />
<text  x="112.23" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1182.4" y="229" width="1.1" height="15.0" fill="rgb(216,65,18)" rx="2" ry="2" />
<text  x="1185.45" y="239.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (20 samples, 1.83%)</title><rect x="396.1" y="213" width="21.6" height="15.0" fill="rgb(242,19,32)" rx="2" ry="2" />
<text  x="399.14" y="223.5" >M..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.18%)</title><rect x="891.2" y="421" width="2.2" height="15.0" fill="rgb(233,76,43)" rx="2" ry="2" />
<text  x="894.22" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (11 samples, 1.01%)</title><rect x="56.4" y="245" width="11.8" height="15.0" fill="rgb(215,8,22)" rx="2" ry="2" />
<text  x="59.38" y="255.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (18 samples, 1.65%)</title><rect x="304.5" y="149" width="19.4" height="15.0" fill="rgb(233,52,42)" rx="2" ry="2" />
<text  x="307.46" y="159.5" ></text>
</g>
<g >
<title>std::thread::join()() (2 samples, 0.18%)</title><rect x="731.6" y="357" width="2.1" height="15.0" fill="rgb(250,38,31)" rx="2" ry="2" />
<text  x="734.59" y="367.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (6 samples, 0.55%)</title><rect x="704.6" y="485" width="6.5" height="15.0" fill="rgb(246,70,30)" rx="2" ry="2" />
<text  x="707.63" y="495.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1b5820) (3 samples, 0.27%)</title><rect x="482.4" y="149" width="3.3" height="15.0" fill="rgb(245,151,11)" rx="2" ry="2" />
<text  x="485.43" y="159.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff458, (21 samples, 1.92%)</title><rect x="396.1" y="357" width="22.7" height="15.0" fill="rgb(230,155,11)" rx="2" ry="2" />
<text  x="399.14" y="367.5" >_..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="1174.9" y="453" width="1.1" height="15.0" fill="rgb(236,75,31)" rx="2" ry="2" />
<text  x="1177.90" y="463.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.09%)</title><rect x="67.2" y="213" width="1.0" height="15.0" fill="rgb(246,98,34)" rx="2" ry="2" />
<text  x="70.17" y="223.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2a627d80) (1 samples, 0.09%)</title><rect x="33.7" y="357" width="1.1" height="15.0" fill="rgb(208,36,36)" rx="2" ry="2" />
<text  x="36.73" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (9 samples, 0.82%)</title><rect x="955.9" y="485" width="9.7" height="15.0" fill="rgb(226,188,31)" rx="2" ry="2" />
<text  x="958.94" y="495.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::generatePageIds(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="10.0" y="485" width="17.3" height="15.0" fill="rgb(252,21,34)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.18%)</title><rect x="961.3" y="341" width="2.2" height="15.0" fill="rgb(250,214,35)" rx="2" ry="2" />
<text  x="964.33" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (2 samples, 0.18%)</title><rect x="731.6" y="421" width="2.1" height="15.0" fill="rgb(250,161,47)" rx="2" ry="2" />
<text  x="734.59" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="294.8" y="181" width="2.1" height="15.0" fill="rgb(252,168,50)" rx="2" ry="2" />
<text  x="297.75" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.37%)</title><rect x="944.1" y="325" width="4.3" height="15.0" fill="rgb(252,101,12)" rx="2" ry="2" />
<text  x="947.08" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="1178.1" y="405" width="1.1" height="15.0" fill="rgb(230,61,54)" rx="2" ry="2" />
<text  x="1181.14" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (10 samples, 0.91%)</title><rect x="988.3" y="469" width="10.8" height="15.0" fill="rgb(206,60,10)" rx="2" ry="2" />
<text  x="991.30" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802f066f50) (1 samples, 0.09%)</title><rect x="823.3" y="181" width="1.1" height="15.0" fill="rgb(221,208,9)" rx="2" ry="2" />
<text  x="826.27" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (15 samples, 1.37%)</title><rect x="378.9" y="181" width="16.2" height="15.0" fill="rgb(230,4,31)" rx="2" ry="2" />
<text  x="381.88" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.09%)</title><rect x="859.9" y="389" width="1.1" height="15.0" fill="rgb(227,0,38)" rx="2" ry="2" />
<text  x="862.95" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 0.91%)</title><rect x="988.3" y="437" width="10.8" height="15.0" fill="rgb(242,106,22)" rx="2" ry="2" />
<text  x="991.30" y="447.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="888.0" y="389" width="1.1" height="15.0" fill="rgb(230,2,13)" rx="2" ry="2" />
<text  x="890.99" y="399.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (2 samples, 0.18%)</title><rect x="885.8" y="325" width="2.2" height="15.0" fill="rgb(216,162,52)" rx="2" ry="2" />
<text  x="888.83" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (49 samples, 4.48%)</title><rect x="342.2" y="213" width="52.9" height="15.0" fill="rgb(205,33,36)" rx="2" ry="2" />
<text  x="345.21" y="223.5" >Multi..</text>
</g>
<g >
<title>std::thread::join()() (8 samples, 0.73%)</title><rect x="1034.7" y="357" width="8.6" height="15.0" fill="rgb(236,198,49)" rx="2" ry="2" />
<text  x="1037.68" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8042b8ed00, (1 samples, 0.09%)</title><rect x="21.9" y="309" width="1.0" height="15.0" fill="rgb(220,141,0)" rx="2" ry="2" />
<text  x="24.86" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.09%)</title><rect x="1170.6" y="437" width="1.1" height="15.0" fill="rgb(253,159,39)" rx="2" ry="2" />
<text  x="1173.59" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=&lt;optimized (1 samples, 0.09%)</title><rect x="893.4" y="389" width="1.1" height="15.0" fill="rgb(233,29,33)" rx="2" ry="2" />
<text  x="896.38" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="963.5" y="453" width="2.1" height="15.0" fill="rgb(212,86,54)" rx="2" ry="2" />
<text  x="966.49" y="463.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee201acd58, (8 samples, 0.73%)</title><rect x="711.1" y="373" width="8.6" height="15.0" fill="rgb(227,132,12)" rx="2" ry="2" />
<text  x="714.10" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.82%)</title><rect x="878.3" y="389" width="9.7" height="15.0" fill="rgb(248,91,5)" rx="2" ry="2" />
<text  x="881.28" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.18%)</title><rect x="300.1" y="69" width="2.2" height="15.0" fill="rgb(234,5,28)" rx="2" ry="2" />
<text  x="303.15" y="79.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (5 samples, 0.46%)</title><rect x="464.1" y="229" width="5.4" height="15.0" fill="rgb(244,151,53)" rx="2" ry="2" />
<text  x="467.10" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2a625808, (1 samples, 0.09%)</title><rect x="841.6" y="293" width="1.1" height="15.0" fill="rgb(208,219,28)" rx="2" ry="2" />
<text  x="844.61" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="666.9" y="405" width="1.1" height="15.0" fill="rgb(218,12,30)" rx="2" ry="2" />
<text  x="669.87" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee1fb0d120) (1 samples, 0.09%)</title><rect x="37.0" y="357" width="1.0" height="15.0" fill="rgb(214,208,32)" rx="2" ry="2" />
<text  x="39.97" y="367.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.09%)</title><rect x="71.5" y="261" width="1.1" height="15.0" fill="rgb(252,211,8)" rx="2" ry="2" />
<text  x="74.48" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (9 samples, 0.82%)</title><rect x="878.3" y="453" width="9.7" height="15.0" fill="rgb(229,29,6)" rx="2" ry="2" />
<text  x="881.28" y="463.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.18%)</title><rect x="30.5" y="325" width="2.2" height="15.0" fill="rgb(251,170,6)" rx="2" ry="2" />
<text  x="33.49" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (522 samples, 47.71%)</title><rect x="100.6" y="405" width="563.0" height="15.0" fill="rgb(234,145,13)" rx="2" ry="2" />
<text  x="103.60" y="415.5" >std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_pt..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee1f547800) (1 samples, 0.09%)</title><rect x="675.5" y="197" width="1.1" height="15.0" fill="rgb(244,172,2)" rx="2" ry="2" />
<text  x="678.50" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (8 samples, 0.73%)</title><rect x="711.1" y="421" width="8.6" height="15.0" fill="rgb(221,86,21)" rx="2" ry="2" />
<text  x="714.10" y="431.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.09%)</title><rect x="1137.1" y="421" width="1.1" height="15.0" fill="rgb(235,159,17)" rx="2" ry="2" />
<text  x="1140.15" y="431.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (8 samples, 0.73%)</title><rect x="711.1" y="405" width="8.6" height="15.0" fill="rgb(226,220,15)" rx="2" ry="2" />
<text  x="714.10" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="875.0" y="389" width="1.1" height="15.0" fill="rgb(208,175,23)" rx="2" ry="2" />
<text  x="878.05" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (125 samples, 11.43%)</title><rect x="100.6" y="277" width="134.8" height="15.0" fill="rgb(245,23,35)" rx="2" ry="2" />
<text  x="103.60" y="287.5" >std::thread::_Inv..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="378.9" y="149" width="1.1" height="15.0" fill="rgb(241,112,24)" rx="2" ry="2" />
<text  x="381.88" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee2e427c50, (1 samples, 0.09%)</title><rect x="939.8" y="213" width="1.0" height="15.0" fill="rgb(246,27,2)" rx="2" ry="2" />
<text  x="942.76" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (5 samples, 0.46%)</title><rect x="582.7" y="53" width="5.4" height="15.0" fill="rgb(243,142,32)" rx="2" ry="2" />
<text  x="585.74" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1176.0" y="437" width="2.1" height="15.0" fill="rgb(212,162,29)" rx="2" ry="2" />
<text  x="1178.98" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="21.9" y="341" width="1.0" height="15.0" fill="rgb(247,172,29)" rx="2" ry="2" />
<text  x="24.86" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (50 samples, 4.57%)</title><rect x="342.2" y="325" width="53.9" height="15.0" fill="rgb(225,9,51)" rx="2" ry="2" />
<text  x="345.21" y="335.5" >std::..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (54 samples, 4.94%)</title><rect x="790.9" y="501" width="58.3" height="15.0" fill="rgb(210,135,32)" rx="2" ry="2" />
<text  x="793.91" y="511.5" >std::u..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="194.4" y="149" width="1.1" height="15.0" fill="rgb(214,18,0)" rx="2" ry="2" />
<text  x="197.44" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId (7 samples, 0.64%)</title><rect x="852.4" y="341" width="7.5" height="15.0" fill="rgb(250,68,4)" rx="2" ry="2" />
<text  x="855.39" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="441.4" y="229" width="22.7" height="15.0" fill="rgb(252,7,8)" rx="2" ry="2" />
<text  x="444.44" y="239.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="859.9" y="277" width="1.1" height="15.0" fill="rgb(213,170,10)" rx="2" ry="2" />
<text  x="862.95" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (13 samples, 1.19%)</title><rect x="381.0" y="133" width="14.1" height="15.0" fill="rgb(235,152,36)" rx="2" ry="2" />
<text  x="384.04" y="143.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (13 samples, 1.19%)</title><rect x="381.0" y="149" width="14.1" height="15.0" fill="rgb(244,6,38)" rx="2" ry="2" />
<text  x="384.04" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="666.9" y="453" width="1.1" height="15.0" fill="rgb(219,5,27)" rx="2" ry="2" />
<text  x="669.87" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.09%)</title><rect x="664.7" y="341" width="1.1" height="15.0" fill="rgb(229,165,11)" rx="2" ry="2" />
<text  x="667.72" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="76.9" y="389" width="1.1" height="15.0" fill="rgb(248,75,1)" rx="2" ry="2" />
<text  x="79.87" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (67 samples, 6.12%)</title><rect x="1043.3" y="421" width="72.3" height="15.0" fill="rgb(216,124,18)" rx="2" ry="2" />
<text  x="1046.31" y="431.5" >std::__f..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.18%)</title><rect x="968.9" y="341" width="2.1" height="15.0" fill="rgb(246,184,48)" rx="2" ry="2" />
<text  x="971.88" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="967.8" y="437" width="7.6" height="15.0" fill="rgb(206,94,28)" rx="2" ry="2" />
<text  x="970.81" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (4 samples, 0.37%)</title><rect x="413.4" y="181" width="4.3" height="15.0" fill="rgb(220,17,0)" rx="2" ry="2" />
<text  x="416.40" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1de1e0, (3 samples, 0.27%)</title><rect x="486.7" y="133" width="3.3" height="15.0" fill="rgb(249,190,41)" rx="2" ry="2" />
<text  x="489.75" y="143.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (2 samples, 0.18%)</title><rect x="731.6" y="437" width="2.1" height="15.0" fill="rgb(227,172,12)" rx="2" ry="2" />
<text  x="734.59" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802ffbddb0, (1 samples, 0.09%)</title><rect x="814.6" y="197" width="1.1" height="15.0" fill="rgb(218,156,36)" rx="2" ry="2" />
<text  x="817.64" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (16 samples, 1.46%)</title><rect x="325.0" y="229" width="17.2" height="15.0" fill="rgb(237,143,8)" rx="2" ry="2" />
<text  x="327.95" y="239.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.09%)</title><rect x="704.6" y="373" width="1.1" height="15.0" fill="rgb(229,160,2)" rx="2" ry="2" />
<text  x="707.63" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cc60) (2 samples, 0.18%)</title><rect x="471.6" y="149" width="2.2" height="15.0" fill="rgb(230,116,14)" rx="2" ry="2" />
<text  x="474.65" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="235.4" y="149" width="1.1" height="15.0" fill="rgb(235,75,5)" rx="2" ry="2" />
<text  x="238.43" y="159.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (5 samples, 0.46%)</title><rect x="726.2" y="389" width="5.4" height="15.0" fill="rgb(217,52,53)" rx="2" ry="2" />
<text  x="729.20" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.09%)</title><rect x="704.6" y="421" width="1.1" height="15.0" fill="rgb(217,93,49)" rx="2" ry="2" />
<text  x="707.63" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.18%)</title><rect x="904.2" y="485" width="2.1" height="15.0" fill="rgb(247,31,5)" rx="2" ry="2" />
<text  x="907.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.09%)</title><rect x="1137.1" y="485" width="1.1" height="15.0" fill="rgb(210,209,6)" rx="2" ry="2" />
<text  x="1140.15" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (2 samples, 0.18%)</title><rect x="1176.0" y="421" width="2.1" height="15.0" fill="rgb(252,59,0)" rx="2" ry="2" />
<text  x="1178.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (5 samples, 0.46%)</title><rect x="71.5" y="373" width="5.4" height="15.0" fill="rgb(214,171,5)" rx="2" ry="2" />
<text  x="74.48" y="383.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.37%)</title><rect x="1149.0" y="485" width="4.3" height="15.0" fill="rgb(243,150,30)" rx="2" ry="2" />
<text  x="1152.01" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee200d7708, (1 samples, 0.09%)</title><rect x="837.3" y="293" width="1.1" height="15.0" fill="rgb(251,154,3)" rx="2" ry="2" />
<text  x="840.29" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (6 samples, 0.55%)</title><rect x="435.0" y="197" width="6.4" height="15.0" fill="rgb(216,165,43)" rx="2" ry="2" />
<text  x="437.97" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.37%)</title><rect x="188.0" y="117" width="4.3" height="15.0" fill="rgb(216,155,18)" rx="2" ry="2" />
<text  x="190.97" y="127.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2b3fe5a0) (10 samples, 0.91%)</title><rect x="1023.9" y="453" width="10.8" height="15.0" fill="rgb(245,193,50)" rx="2" ry="2" />
<text  x="1026.89" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (2 samples, 0.18%)</title><rect x="904.2" y="469" width="2.1" height="15.0" fill="rgb(205,107,37)" rx="2" ry="2" />
<text  x="907.17" y="479.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.09%)</title><rect x="827.6" y="181" width="1.1" height="15.0" fill="rgb(217,142,36)" rx="2" ry="2" />
<text  x="830.59" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="418.8" y="293" width="22.6" height="15.0" fill="rgb(254,114,50)" rx="2" ry="2" />
<text  x="421.79" y="303.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (14 samples, 1.28%)</title><rect x="834.1" y="309" width="15.1" height="15.0" fill="rgb(238,41,14)" rx="2" ry="2" />
<text  x="837.06" y="319.5" ></text>
</g>
<g >
<title>std::mutex::unlock (8 samples, 0.73%)</title><rect x="481.4" y="165" width="8.6" height="15.0" fill="rgb(219,177,20)" rx="2" ry="2" />
<text  x="484.35" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (16 samples, 1.46%)</title><rect x="325.0" y="341" width="17.2" height="15.0" fill="rgb(254,217,1)" rx="2" ry="2" />
<text  x="327.95" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1179.2" y="389" width="1.1" height="15.0" fill="rgb(238,223,43)" rx="2" ry="2" />
<text  x="1182.21" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.18%)</title><rect x="986.1" y="453" width="2.2" height="15.0" fill="rgb(211,178,9)" rx="2" ry="2" />
<text  x="989.14" y="463.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (68 samples, 6.22%)</title><rect x="27.3" y="501" width="73.3" height="15.0" fill="rgb(232,203,35)" rx="2" ry="2" />
<text  x="30.26" y="511.5" >std::thr..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2a627d80) (1 samples, 0.09%)</title><rect x="33.7" y="341" width="1.1" height="15.0" fill="rgb(217,147,38)" rx="2" ry="2" />
<text  x="36.73" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="296.9" y="117" width="1.1" height="15.0" fill="rgb(207,7,38)" rx="2" ry="2" />
<text  x="299.91" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1de218) (1 samples, 0.09%)</title><rect x="480.3" y="133" width="1.1" height="15.0" fill="rgb(206,98,51)" rx="2" ry="2" />
<text  x="483.27" y="143.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cd08) (2 samples, 0.18%)</title><rect x="103.8" y="149" width="2.2" height="15.0" fill="rgb(231,29,4)" rx="2" ry="2" />
<text  x="106.84" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80192cf370, (1 samples, 0.09%)</title><rect x="795.2" y="197" width="1.1" height="15.0" fill="rgb(246,81,52)" rx="2" ry="2" />
<text  x="798.23" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="894.5" y="421" width="1.0" height="15.0" fill="rgb(224,110,12)" rx="2" ry="2" />
<text  x="897.46" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188843566848, (6 samples, 0.55%)</title><rect x="688.4" y="453" width="6.5" height="15.0" fill="rgb(231,87,27)" rx="2" ry="2" />
<text  x="691.45" y="463.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1de218) (1 samples, 0.09%)</title><rect x="123.3" y="149" width="1.0" height="15.0" fill="rgb(232,125,0)" rx="2" ry="2" />
<text  x="126.25" y="159.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="944.1" y="277" width="1.1" height="15.0" fill="rgb(253,32,4)" rx="2" ry="2" />
<text  x="947.08" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee2a6bad68, (1 samples, 0.09%)</title><rect x="1135.0" y="293" width="1.1" height="15.0" fill="rgb(224,172,29)" rx="2" ry="2" />
<text  x="1137.99" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee1e669ee0, (1 samples, 0.09%)</title><rect x="675.5" y="213" width="1.1" height="15.0" fill="rgb(206,0,21)" rx="2" ry="2" />
<text  x="678.50" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="675.5" y="261" width="1.1" height="15.0" fill="rgb(215,72,21)" rx="2" ry="2" />
<text  x="678.50" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (10 samples, 0.91%)</title><rect x="988.3" y="453" width="10.8" height="15.0" fill="rgb(218,115,37)" rx="2" ry="2" />
<text  x="991.30" y="463.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.09%)</title><rect x="66.1" y="213" width="1.1" height="15.0" fill="rgb(250,9,52)" rx="2" ry="2" />
<text  x="69.09" y="223.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (45 samples, 4.11%)</title><rect x="851.3" y="517" width="48.6" height="15.0" fill="rgb(210,68,17)" rx="2" ry="2" />
<text  x="854.32" y="527.5" >Simp..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2b04fb48, (1 samples, 0.09%)</title><rect x="843.8" y="293" width="1.0" height="15.0" fill="rgb(249,154,15)" rx="2" ry="2" />
<text  x="846.77" y="303.5" ></text>
</g>
<g >
<title>std::thread::join()() (67 samples, 6.12%)</title><rect x="1043.3" y="357" width="72.3" height="15.0" fill="rgb(229,33,29)" rx="2" ry="2" />
<text  x="1046.31" y="367.5" >std::thr..</text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188835174144, (4 samples, 0.37%)</title><rect x="684.1" y="453" width="4.3" height="15.0" fill="rgb(205,200,45)" rx="2" ry="2" />
<text  x="687.13" y="463.5" ></text>
</g>
<g >
<title>operatornew(unsigned (22 samples, 2.01%)</title><rect x="44.5" y="261" width="23.7" height="15.0" fill="rgb(209,153,36)" rx="2" ry="2" />
<text  x="47.52" y="271.5" >o..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (125 samples, 11.43%)</title><rect x="100.6" y="261" width="134.8" height="15.0" fill="rgb(209,99,52)" rx="2" ry="2" />
<text  x="103.60" y="271.5" >std::thread::_Inv..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.27%)</title><rect x="175.0" y="165" width="3.3" height="15.0" fill="rgb(229,44,24)" rx="2" ry="2" />
<text  x="178.03" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.09%)</title><rect x="675.5" y="357" width="1.1" height="15.0" fill="rgb(237,142,50)" rx="2" ry="2" />
<text  x="678.50" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1188.9" y="501" width="1.1" height="15.0" fill="rgb(223,81,36)" rx="2" ry="2" />
<text  x="1191.92" y="511.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.09%)</title><rect x="342.2" y="181" width="1.1" height="15.0" fill="rgb(239,139,12)" rx="2" ry="2" />
<text  x="345.21" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (68 samples, 6.22%)</title><rect x="27.3" y="485" width="73.3" height="15.0" fill="rgb(243,52,14)" rx="2" ry="2" />
<text  x="30.26" y="495.5" >std::thr..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (32 samples, 2.93%)</title><rect x="289.4" y="197" width="34.5" height="15.0" fill="rgb(213,97,54)" rx="2" ry="2" />
<text  x="292.36" y="207.5" >st..</text>
</g>
<g >
<title>std::thread::join()() (8 samples, 0.73%)</title><rect x="711.1" y="357" width="8.6" height="15.0" fill="rgb(252,73,21)" rx="2" ry="2" />
<text  x="714.10" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8020000020, (1 samples, 0.09%)</title><rect x="66.1" y="229" width="1.1" height="15.0" fill="rgb(219,215,2)" rx="2" ry="2" />
<text  x="69.09" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="874.0" y="405" width="2.1" height="15.0" fill="rgb(239,25,6)" rx="2" ry="2" />
<text  x="876.97" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.27%)</title><rect x="911.7" y="437" width="3.3" height="15.0" fill="rgb(208,12,5)" rx="2" ry="2" />
<text  x="914.72" y="447.5" ></text>
</g>
<g >
<title>std::thread::join()() (53 samples, 4.84%)</title><rect x="733.7" y="357" width="57.2" height="15.0" fill="rgb(247,35,40)" rx="2" ry="2" />
<text  x="736.75" y="367.5" >std::t..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generatePageIds (4 samples, 0.37%)</title><rect x="948.4" y="501" width="4.3" height="15.0" fill="rgb(239,63,28)" rx="2" ry="2" />
<text  x="951.39" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="435.0" y="181" width="1.1" height="15.0" fill="rgb(231,15,38)" rx="2" ry="2" />
<text  x="437.97" y="191.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="664.7" y="437" width="1.1" height="15.0" fill="rgb(213,206,22)" rx="2" ry="2" />
<text  x="667.72" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (83 samples, 7.59%)</title><rect x="235.4" y="309" width="89.6" height="15.0" fill="rgb(211,217,25)" rx="2" ry="2" />
<text  x="238.43" y="319.5" >std::_Func..</text>
</g>
<g >
<title>std::thread::join()() (4 samples, 0.37%)</title><rect x="948.4" y="469" width="4.3" height="15.0" fill="rgb(249,69,45)" rx="2" ry="2" />
<text  x="951.39" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="859.9" y="405" width="1.1" height="15.0" fill="rgb(225,162,36)" rx="2" ry="2" />
<text  x="862.95" y="415.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.09%)</title><rect x="812.5" y="181" width="1.1" height="15.0" fill="rgb(211,221,7)" rx="2" ry="2" />
<text  x="815.49" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="893.4" y="453" width="1.1" height="15.0" fill="rgb(209,135,33)" rx="2" ry="2" />
<text  x="896.38" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (10 samples, 0.91%)</title><rect x="560.1" y="101" width="10.8" height="15.0" fill="rgb(244,180,19)" rx="2" ry="2" />
<text  x="563.09" y="111.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (10 samples, 0.91%)</title><rect x="560.1" y="133" width="10.8" height="15.0" fill="rgb(245,158,14)" rx="2" ry="2" />
<text  x="563.09" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="1181.4" y="293" width="4.3" height="15.0" fill="rgb(209,33,19)" rx="2" ry="2" />
<text  x="1184.37" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=2048) (2 samples, 0.18%)</title><rect x="889.1" y="389" width="2.1" height="15.0" fill="rgb(240,13,3)" rx="2" ry="2" />
<text  x="892.07" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802132b1a0, (1 samples, 0.09%)</title><rect x="796.3" y="197" width="1.1" height="15.0" fill="rgb(220,114,11)" rx="2" ry="2" />
<text  x="799.31" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee201277f8, (1 samples, 0.09%)</title><rect x="840.5" y="293" width="1.1" height="15.0" fill="rgb(216,108,23)" rx="2" ry="2" />
<text  x="843.53" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId (6 samples, 0.55%)</title><rect x="1129.6" y="373" width="6.5" height="15.0" fill="rgb(248,2,2)" rx="2" ry="2" />
<text  x="1132.60" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.18%)</title><rect x="1149.0" y="437" width="2.2" height="15.0" fill="rgb(219,144,27)" rx="2" ry="2" />
<text  x="1152.01" y="447.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (7 samples, 0.64%)</title><rect x="668.0" y="501" width="7.5" height="15.0" fill="rgb(241,153,11)" rx="2" ry="2" />
<text  x="670.95" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (2 samples, 0.18%)</title><rect x="1145.8" y="485" width="2.1" height="15.0" fill="rgb(233,18,44)" rx="2" ry="2" />
<text  x="1148.78" y="495.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="840.5" y="277" width="1.1" height="15.0" fill="rgb(210,1,35)" rx="2" ry="2" />
<text  x="843.53" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802df71b70) (1 samples, 0.09%)</title><rect x="815.7" y="181" width="1.1" height="15.0" fill="rgb(245,175,41)" rx="2" ry="2" />
<text  x="818.72" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="843.8" y="277" width="1.0" height="15.0" fill="rgb(249,96,13)" rx="2" ry="2" />
<text  x="846.77" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee321c1620, (1 samples, 0.09%)</title><rect x="941.9" y="213" width="1.1" height="15.0" fill="rgb(220,51,18)" rx="2" ry="2" />
<text  x="944.92" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1140.4" y="469" width="1.1" height="15.0" fill="rgb(249,21,12)" rx="2" ry="2" />
<text  x="1143.38" y="479.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="839.5" y="277" width="1.0" height="15.0" fill="rgb(205,110,44)" rx="2" ry="2" />
<text  x="842.45" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="341" width="1.0" height="15.0" fill="rgb(240,188,0)" rx="2" ry="2" />
<text  x="867.26" y="351.5" ></text>
</g>
<g >
<title>std::mutex::lock (6 samples, 0.55%)</title><rect x="29.4" y="373" width="6.5" height="15.0" fill="rgb(220,99,49)" rx="2" ry="2" />
<text  x="32.41" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.09%)</title><rect x="704.6" y="341" width="1.1" height="15.0" fill="rgb(216,95,40)" rx="2" ry="2" />
<text  x="707.63" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.09%)</title><rect x="1137.1" y="405" width="1.1" height="15.0" fill="rgb(232,157,22)" rx="2" ry="2" />
<text  x="1140.15" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="441.4" y="341" width="22.7" height="15.0" fill="rgb(228,69,36)" rx="2" ry="2" />
<text  x="444.44" y="351.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8026c52300, (1 samples, 0.09%)</title><rect x="800.6" y="197" width="1.1" height="15.0" fill="rgb(244,152,33)" rx="2" ry="2" />
<text  x="803.62" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (6 samples, 0.55%)</title><rect x="88.7" y="341" width="6.5" height="15.0" fill="rgb(214,1,39)" rx="2" ry="2" />
<text  x="91.74" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks (108 samples, 9.87%)</title><rect x="999.1" y="501" width="116.5" height="15.0" fill="rgb(221,192,29)" rx="2" ry="2" />
<text  x="1002.09" y="511.5" >MultiThreadedP..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="441.4" y="213" width="22.7" height="15.0" fill="rgb(237,50,22)" rx="2" ry="2" />
<text  x="444.44" y="223.5" >M..</text>
</g>
<g >
<title>Network::addPage (1 samples, 0.09%)</title><rect x="1137.1" y="501" width="1.1" height="15.0" fill="rgb(217,139,23)" rx="2" ry="2" />
<text  x="1140.15" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="893.4" y="469" width="1.1" height="15.0" fill="rgb(242,195,7)" rx="2" ry="2" />
<text  x="896.38" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2b3ff7e0) (8 samples, 0.73%)</title><rect x="1034.7" y="453" width="8.6" height="15.0" fill="rgb(247,114,29)" rx="2" ry="2" />
<text  x="1037.68" y="463.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.37%)</title><rect x="1176.0" y="501" width="4.3" height="15.0" fill="rgb(254,172,4)" rx="2" ry="2" />
<text  x="1178.98" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (180 samples, 16.45%)</title><rect x="469.5" y="309" width="194.1" height="15.0" fill="rgb(228,14,11)" rx="2" ry="2" />
<text  x="472.49" y="319.5" >std::_Function_handler&lt;st..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (18 samples, 1.65%)</title><rect x="304.5" y="117" width="19.4" height="15.0" fill="rgb(245,150,10)" rx="2" ry="2" />
<text  x="307.46" y="127.5" ></text>
</g>
<g >
<title>PageId::PageId (7 samples, 0.64%)</title><rect x="955.9" y="469" width="7.6" height="15.0" fill="rgb(237,121,53)" rx="2" ry="2" />
<text  x="958.94" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (7 samples, 0.64%)</title><rect x="668.0" y="485" width="7.5" height="15.0" fill="rgb(245,108,22)" rx="2" ry="2" />
<text  x="670.95" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="460.9" y="133" width="3.2" height="15.0" fill="rgb(230,33,44)" rx="2" ry="2" />
<text  x="463.86" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.18%)</title><rect x="904.2" y="421" width="2.1" height="15.0" fill="rgb(237,204,26)" rx="2" ry="2" />
<text  x="907.17" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="98.4" y="325" width="1.1" height="15.0" fill="rgb(217,114,46)" rx="2" ry="2" />
<text  x="101.45" y="335.5" ></text>
</g>
<g >
<title>std::thread::join()() (5 samples, 0.46%)</title><rect x="726.2" y="357" width="5.4" height="15.0" fill="rgb(223,94,38)" rx="2" ry="2" />
<text  x="729.20" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1b5820, (2 samples, 0.18%)</title><rect x="483.5" y="133" width="2.2" height="15.0" fill="rgb(245,182,9)" rx="2" ry="2" />
<text  x="486.51" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (40 samples, 3.66%)</title><rect x="790.9" y="261" width="43.2" height="15.0" fill="rgb(215,170,24)" rx="2" ry="2" />
<text  x="793.91" y="271.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.09%)</title><rect x="96.3" y="405" width="1.1" height="15.0" fill="rgb(227,9,6)" rx="2" ry="2" />
<text  x="99.29" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1177.1" y="373" width="1.0" height="15.0" fill="rgb(244,137,44)" rx="2" ry="2" />
<text  x="1180.06" y="383.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b18cc98, (3 samples, 0.27%)</title><rect x="247.3" y="133" width="3.2" height="15.0" fill="rgb(213,182,35)" rx="2" ry="2" />
<text  x="250.29" y="143.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="902.0" y="357" width="1.1" height="15.0" fill="rgb(219,202,23)" rx="2" ry="2" />
<text  x="905.01" y="367.5" ></text>
</g>
<g >
<title>std::(__val=1393) (1 samples, 0.09%)</title><rect x="863.2" y="469" width="1.1" height="15.0" fill="rgb(214,207,29)" rx="2" ry="2" />
<text  x="866.18" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (4 samples, 0.37%)</title><rect x="342.2" y="197" width="4.3" height="15.0" fill="rgb(208,53,53)" rx="2" ry="2" />
<text  x="345.21" y="207.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="473.8" y="117" width="1.1" height="15.0" fill="rgb(245,52,18)" rx="2" ry="2" />
<text  x="476.80" y="127.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (5 samples, 0.46%)</title><rect x="464.1" y="325" width="5.4" height="15.0" fill="rgb(209,60,33)" rx="2" ry="2" />
<text  x="467.10" y="335.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="396.1" y="117" width="1.1" height="15.0" fill="rgb(212,171,11)" rx="2" ry="2" />
<text  x="399.14" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="894.5" y="389" width="1.0" height="15.0" fill="rgb(235,7,40)" rx="2" ry="2" />
<text  x="897.46" y="399.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="71.5" y="309" width="1.1" height="15.0" fill="rgb(213,71,19)" rx="2" ry="2" />
<text  x="74.48" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="43.4" y="261" width="1.1" height="15.0" fill="rgb(209,120,47)" rx="2" ry="2" />
<text  x="46.44" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="468.4" y="165" width="1.1" height="15.0" fill="rgb(228,191,15)" rx="2" ry="2" />
<text  x="471.41" y="175.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164b28, (1 samples, 0.09%)</title><rect x="343.3" y="133" width="1.1" height="15.0" fill="rgb(248,58,33)" rx="2" ry="2" />
<text  x="346.29" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2687ec18, (1 samples, 0.09%)</title><rect x="944.1" y="309" width="1.1" height="15.0" fill="rgb(215,117,43)" rx="2" ry="2" />
<text  x="947.08" y="319.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (67 samples, 6.12%)</title><rect x="1043.3" y="389" width="72.3" height="15.0" fill="rgb(227,9,26)" rx="2" ry="2" />
<text  x="1046.31" y="399.5" >__gthrea..</text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b18cc98) (3 samples, 0.27%)</title><rect x="247.3" y="149" width="3.2" height="15.0" fill="rgb(232,117,43)" rx="2" ry="2" />
<text  x="250.29" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (13 samples, 1.19%)</title><rect x="1115.6" y="421" width="14.0" height="15.0" fill="rgb(228,130,6)" rx="2" ry="2" />
<text  x="1118.58" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5820) (2 samples, 0.18%)</title><rect x="476.0" y="133" width="2.1" height="15.0" fill="rgb(208,45,53)" rx="2" ry="2" />
<text  x="478.96" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.37%)</title><rect x="188.0" y="149" width="4.3" height="15.0" fill="rgb(246,70,1)" rx="2" ry="2" />
<text  x="190.97" y="159.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (7 samples, 0.64%)</title><rect x="852.4" y="357" width="7.5" height="15.0" fill="rgb(231,6,6)" rx="2" ry="2" />
<text  x="855.39" y="367.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (12 samples, 1.10%)</title><rect x="999.1" y="389" width="12.9" height="15.0" fill="rgb(244,4,44)" rx="2" ry="2" />
<text  x="1002.09" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (40 samples, 3.66%)</title><rect x="790.9" y="341" width="43.2" height="15.0" fill="rgb(224,190,24)" rx="2" ry="2" />
<text  x="793.91" y="351.5" >std:..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="380.0" y="149" width="1.0" height="15.0" fill="rgb(216,168,32)" rx="2" ry="2" />
<text  x="382.96" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.27%)</title><rect x="556.9" y="165" width="3.2" height="15.0" fill="rgb(235,81,12)" rx="2" ry="2" />
<text  x="559.86" y="175.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="22.9" y="293" width="1.1" height="15.0" fill="rgb(208,191,15)" rx="2" ry="2" />
<text  x="25.94" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="946.2" y="277" width="1.1" height="15.0" fill="rgb(227,221,35)" rx="2" ry="2" />
<text  x="949.23" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1178.1" y="357" width="1.1" height="15.0" fill="rgb(246,121,36)" rx="2" ry="2" />
<text  x="1181.14" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (23 samples, 2.10%)</title><rect x="43.4" y="293" width="24.8" height="15.0" fill="rgb(226,44,0)" rx="2" ry="2" />
<text  x="46.44" y="303.5" >s..</text>
</g>
<g >
<title>std::(__val=198) (1 samples, 0.09%)</title><rect x="867.5" y="469" width="1.1" height="15.0" fill="rgb(232,80,3)" rx="2" ry="2" />
<text  x="870.50" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::Pool::join(this=0x7ffea105ea00) (4 samples, 0.37%)</title><rect x="948.4" y="485" width="4.3" height="15.0" fill="rgb(244,171,50)" rx="2" ry="2" />
<text  x="951.39" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.27%)</title><rect x="1129.6" y="309" width="3.2" height="15.0" fill="rgb(219,172,51)" rx="2" ry="2" />
<text  x="1132.60" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="100.6" y="133" width="1.1" height="15.0" fill="rgb(234,104,12)" rx="2" ry="2" />
<text  x="103.60" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="117.9" y="133" width="1.0" height="15.0" fill="rgb(236,70,9)" rx="2" ry="2" />
<text  x="120.86" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="894.5" y="309" width="1.0" height="15.0" fill="rgb(205,155,4)" rx="2" ry="2" />
<text  x="897.46" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (180 samples, 16.45%)</title><rect x="469.5" y="293" width="194.1" height="15.0" fill="rgb(238,150,48)" rx="2" ry="2" />
<text  x="472.49" y="303.5" >std::__future_base::_Task..</text>
</g>
<g >
<title>std::call_once&lt;void (53 samples, 4.84%)</title><rect x="733.7" y="405" width="57.2" height="15.0" fill="rgb(205,146,10)" rx="2" ry="2" />
<text  x="736.75" y="415.5" >std::c..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="666.9" y="357" width="1.1" height="15.0" fill="rgb(252,153,6)" rx="2" ry="2" />
<text  x="669.87" y="367.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3fe5c8, (10 samples, 0.91%)</title><rect x="1023.9" y="373" width="10.8" height="15.0" fill="rgb(239,178,15)" rx="2" ry="2" />
<text  x="1026.89" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="904.2" y="437" width="2.1" height="15.0" fill="rgb(247,124,45)" rx="2" ry="2" />
<text  x="907.17" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (11 samples, 1.01%)</title><rect x="423.1" y="197" width="11.9" height="15.0" fill="rgb(242,85,21)" rx="2" ry="2" />
<text  x="426.11" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803b9eaeb0) (1 samples, 0.09%)</title><rect x="824.4" y="181" width="1.0" height="15.0" fill="rgb(208,9,20)" rx="2" ry="2" />
<text  x="827.35" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="859.9" y="293" width="1.1" height="15.0" fill="rgb(253,139,25)" rx="2" ry="2" />
<text  x="862.95" y="303.5" ></text>
</g>
<g >
<title>sysmalloc(nb=nb@entry=80, (1 samples, 0.09%)</title><rect x="666.9" y="341" width="1.1" height="15.0" fill="rgb(239,118,24)" rx="2" ry="2" />
<text  x="669.87" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1178.1" y="325" width="1.1" height="15.0" fill="rgb(205,122,25)" rx="2" ry="2" />
<text  x="1181.14" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b18cc98, (1 samples, 0.09%)</title><rect x="481.4" y="133" width="1.0" height="15.0" fill="rgb(225,38,41)" rx="2" ry="2" />
<text  x="484.35" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80383c9690, (1 samples, 0.09%)</title><rect x="817.9" y="197" width="1.1" height="15.0" fill="rgb(244,60,18)" rx="2" ry="2" />
<text  x="820.88" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="441.4" y="309" width="22.7" height="15.0" fill="rgb(213,142,8)" rx="2" ry="2" />
<text  x="444.44" y="319.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="908.5" y="421" width="1.1" height="15.0" fill="rgb(208,175,9)" rx="2" ry="2" />
<text  x="911.48" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="871.8" y="453" width="1.1" height="15.0" fill="rgb(237,17,48)" rx="2" ry="2" />
<text  x="874.81" y="463.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (20 samples, 1.83%)</title><rect x="1115.6" y="501" width="21.5" height="15.0" fill="rgb(220,20,15)" rx="2" ry="2" />
<text  x="1118.58" y="511.5" >s..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.18%)</title><rect x="176.1" y="149" width="2.2" height="15.0" fill="rgb(229,192,42)" rx="2" ry="2" />
<text  x="179.11" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="296.9" y="101" width="1.1" height="15.0" fill="rgb(208,93,27)" rx="2" ry="2" />
<text  x="299.91" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.27%)</title><rect x="894.5" y="485" width="3.2" height="15.0" fill="rgb(213,9,6)" rx="2" ry="2" />
<text  x="897.46" y="495.5" ></text>
</g>
<g >
<title>std::thread::join()() (25 samples, 2.29%)</title><rect x="677.7" y="469" width="26.9" height="15.0" fill="rgb(222,105,50)" rx="2" ry="2" />
<text  x="680.66" y="479.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="99.5" y="325" width="1.1" height="15.0" fill="rgb(212,187,13)" rx="2" ry="2" />
<text  x="102.52" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (6 samples, 0.55%)</title><rect x="669.0" y="389" width="6.5" height="15.0" fill="rgb(227,8,51)" rx="2" ry="2" />
<text  x="672.03" y="399.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (7 samples, 0.64%)</title><rect x="410.2" y="197" width="7.5" height="15.0" fill="rgb(236,60,51)" rx="2" ry="2" />
<text  x="413.16" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="22.9" y="325" width="1.1" height="15.0" fill="rgb(235,36,3)" rx="2" ry="2" />
<text  x="25.94" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="874.0" y="373" width="1.0" height="15.0" fill="rgb(226,57,20)" rx="2" ry="2" />
<text  x="876.97" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (4 samples, 0.37%)</title><rect x="939.8" y="309" width="4.3" height="15.0" fill="rgb(226,5,36)" rx="2" ry="2" />
<text  x="942.76" y="319.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="665.8" y="373" width="1.1" height="15.0" fill="rgb(234,117,53)" rx="2" ry="2" />
<text  x="668.80" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (50 samples, 4.57%)</title><rect x="342.2" y="341" width="53.9" height="15.0" fill="rgb(223,216,29)" rx="2" ry="2" />
<text  x="345.21" y="351.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105ea40, (1 samples, 0.09%)</title><rect x="303.4" y="133" width="1.1" height="15.0" fill="rgb(220,218,11)" rx="2" ry="2" />
<text  x="306.38" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="863.2" y="453" width="1.1" height="15.0" fill="rgb(225,139,39)" rx="2" ry="2" />
<text  x="866.18" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="952.7" y="421" width="3.2" height="15.0" fill="rgb(237,91,44)" rx="2" ry="2" />
<text  x="955.71" y="431.5" ></text>
</g>
<g >
<title>PageId::~PageId (40 samples, 3.66%)</title><rect x="790.9" y="277" width="43.2" height="15.0" fill="rgb(253,168,39)" rx="2" ry="2" />
<text  x="793.91" y="287.5" >Page..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (40 samples, 3.66%)</title><rect x="790.9" y="245" width="43.2" height="15.0" fill="rgb(214,192,6)" rx="2" ry="2" />
<text  x="793.91" y="255.5" >std:..</text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.09%)</title><rect x="979.7" y="357" width="1.0" height="15.0" fill="rgb(239,119,46)" rx="2" ry="2" />
<text  x="982.67" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.09%)</title><rect x="859.9" y="485" width="1.1" height="15.0" fill="rgb(233,176,4)" rx="2" ry="2" />
<text  x="862.95" y="495.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="871.8" y="437" width="1.1" height="15.0" fill="rgb(228,75,39)" rx="2" ry="2" />
<text  x="874.81" y="447.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (31 samples, 2.83%)</title><rect x="906.3" y="501" width="33.5" height="15.0" fill="rgb(231,47,46)" rx="2" ry="2" />
<text  x="909.33" y="511.5" >Si..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="405" width="1.0" height="15.0" fill="rgb(209,31,23)" rx="2" ry="2" />
<text  x="867.26" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.09%)</title><rect x="904.2" y="357" width="1.0" height="15.0" fill="rgb(229,149,9)" rx="2" ry="2" />
<text  x="907.17" y="367.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="836.2" y="277" width="1.1" height="15.0" fill="rgb(220,220,44)" rx="2" ry="2" />
<text  x="839.22" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1147.9" y="421" width="1.1" height="15.0" fill="rgb(237,207,4)" rx="2" ry="2" />
<text  x="1150.93" y="431.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="345.4" y="117" width="1.1" height="15.0" fill="rgb(244,40,31)" rx="2" ry="2" />
<text  x="348.45" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (40 samples, 3.66%)</title><rect x="790.9" y="229" width="43.2" height="15.0" fill="rgb(227,202,4)" rx="2" ry="2" />
<text  x="793.91" y="239.5" >std:..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.09%)</title><rect x="435.0" y="117" width="1.1" height="15.0" fill="rgb(208,178,4)" rx="2" ry="2" />
<text  x="437.97" y="127.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="898.8" y="501" width="1.1" height="15.0" fill="rgb(238,39,16)" rx="2" ry="2" />
<text  x="901.78" y="511.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="1147.9" y="469" width="1.1" height="15.0" fill="rgb(210,31,27)" rx="2" ry="2" />
<text  x="1150.93" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (175 samples, 16.00%)</title><rect x="948.4" y="517" width="188.7" height="15.0" fill="rgb(243,23,19)" rx="2" ry="2" />
<text  x="951.39" y="527.5" >MultiThreadedPageRankCom..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="862.1" y="453" width="1.1" height="15.0" fill="rgb(246,164,32)" rx="2" ry="2" />
<text  x="865.10" y="463.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.18%)</title><rect x="986.1" y="437" width="2.2" height="15.0" fill="rgb(239,111,9)" rx="2" ry="2" />
<text  x="989.14" y="447.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e650 (1 samples, 0.09%)</title><rect x="1141.5" y="453" width="1.0" height="15.0" fill="rgb(238,105,51)" rx="2" ry="2" />
<text  x="1144.46" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="666.9" y="421" width="1.1" height="15.0" fill="rgb(223,116,5)" rx="2" ry="2" />
<text  x="669.87" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="876.1" y="405" width="2.2" height="15.0" fill="rgb(222,166,11)" rx="2" ry="2" />
<text  x="879.12" y="415.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2 samples, 0.18%)</title><rect x="441.4" y="165" width="2.2" height="15.0" fill="rgb(225,109,36)" rx="2" ry="2" />
<text  x="444.44" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee1fdfe608, (1 samples, 0.09%)</title><rect x="836.2" y="293" width="1.1" height="15.0" fill="rgb(239,162,30)" rx="2" ry="2" />
<text  x="839.22" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="290.4" y="133" width="4.4" height="15.0" fill="rgb(231,120,50)" rx="2" ry="2" />
<text  x="293.44" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8039630c80, (1 samples, 0.09%)</title><rect x="821.1" y="197" width="1.1" height="15.0" fill="rgb(240,26,22)" rx="2" ry="2" />
<text  x="824.12" y="207.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::generatePageIds (1 samples, 0.09%)</title><rect x="1143.6" y="501" width="1.1" height="15.0" fill="rgb(220,166,34)" rx="2" ry="2" />
<text  x="1146.62" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.18%)</title><rect x="891.2" y="437" width="2.2" height="15.0" fill="rgb(216,23,50)" rx="2" ry="2" />
<text  x="894.22" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (59 samples, 5.39%)</title><rect x="595.7" y="117" width="63.6" height="15.0" fill="rgb(212,165,44)" rx="2" ry="2" />
<text  x="598.69" y="127.5" >std::_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="664.7" y="373" width="1.1" height="15.0" fill="rgb(243,21,1)" rx="2" ry="2" />
<text  x="667.72" y="383.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee1fada120, (1 samples, 0.09%)</title><rect x="35.9" y="341" width="1.1" height="15.0" fill="rgb(243,147,10)" rx="2" ry="2" />
<text  x="38.89" y="351.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId(this=0x7ffea105f000, (1 samples, 0.09%)</title><rect x="861.0" y="501" width="1.1" height="15.0" fill="rgb(252,182,24)" rx="2" ry="2" />
<text  x="864.02" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="98.4" y="293" width="1.1" height="15.0" fill="rgb(250,199,36)" rx="2" ry="2" />
<text  x="101.45" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (5 samples, 0.46%)</title><rect x="726.2" y="421" width="5.4" height="15.0" fill="rgb(241,155,1)" rx="2" ry="2" />
<text  x="729.20" y="431.5" ></text>
</g>
<g >
<title>tcache_put(tc_idx=3, (1 samples, 0.09%)</title><rect x="876.1" y="373" width="1.1" height="15.0" fill="rgb(205,204,31)" rx="2" ry="2" />
<text  x="879.12" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="967.8" y="389" width="3.2" height="15.0" fill="rgb(240,24,12)" rx="2" ry="2" />
<text  x="970.81" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.27%)</title><rect x="704.6" y="453" width="3.3" height="15.0" fill="rgb(211,93,21)" rx="2" ry="2" />
<text  x="707.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.82%)</title><rect x="878.3" y="405" width="9.7" height="15.0" fill="rgb(233,73,54)" rx="2" ry="2" />
<text  x="881.28" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f803c000020) (1 samples, 0.09%)</title><rect x="837.3" y="261" width="1.1" height="15.0" fill="rgb(254,148,8)" rx="2" ry="2" />
<text  x="840.29" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="98.4" y="373" width="2.2" height="15.0" fill="rgb(217,144,39)" rx="2" ry="2" />
<text  x="101.45" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="95.2" y="389" width="1.1" height="15.0" fill="rgb(251,180,22)" rx="2" ry="2" />
<text  x="98.21" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="396.1" y="261" width="22.7" height="15.0" fill="rgb(245,162,3)" rx="2" ry="2" />
<text  x="399.14" y="271.5" >s..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (5 samples, 0.46%)</title><rect x="464.1" y="213" width="5.4" height="15.0" fill="rgb(241,113,41)" rx="2" ry="2" />
<text  x="467.10" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="898.8" y="437" width="1.1" height="15.0" fill="rgb(240,53,54)" rx="2" ry="2" />
<text  x="901.78" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.27%)</title><rect x="184.7" y="181" width="3.3" height="15.0" fill="rgb(238,126,0)" rx="2" ry="2" />
<text  x="187.73" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (8 samples, 0.73%)</title><rect x="1034.7" y="437" width="8.6" height="15.0" fill="rgb(217,105,43)" rx="2" ry="2" />
<text  x="1037.68" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="888.0" y="405" width="1.1" height="15.0" fill="rgb(214,57,39)" rx="2" ry="2" />
<text  x="890.99" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (68 samples, 6.22%)</title><rect x="27.3" y="453" width="73.3" height="15.0" fill="rgb(228,225,15)" rx="2" ry="2" />
<text  x="30.26" y="463.5" >std::__i..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f802812ee30) (1 samples, 0.09%)</title><rect x="807.1" y="181" width="1.1" height="15.0" fill="rgb(220,23,46)" rx="2" ry="2" />
<text  x="810.09" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164ab8, (1 samples, 0.09%)</title><rect x="111.4" y="133" width="1.1" height="15.0" fill="rgb(234,106,20)" rx="2" ry="2" />
<text  x="114.39" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (9 samples, 0.82%)</title><rect x="1160.9" y="389" width="9.7" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="1163.88" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802f35b2a0, (1 samples, 0.09%)</title><rect x="813.6" y="197" width="1.0" height="15.0" fill="rgb(220,92,47)" rx="2" ry="2" />
<text  x="816.56" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="967.8" y="357" width="3.2" height="15.0" fill="rgb(219,112,44)" rx="2" ry="2" />
<text  x="970.81" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (36 samples, 3.29%)</title><rect x="195.5" y="101" width="38.9" height="15.0" fill="rgb(234,3,34)" rx="2" ry="2" />
<text  x="198.52" y="111.5" >std..</text>
</g>
<g >
<title>std::vector&lt;PageId, (7 samples, 0.64%)</title><rect x="1181.4" y="405" width="7.5" height="15.0" fill="rgb(247,12,3)" rx="2" ry="2" />
<text  x="1184.37" y="415.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.09%)</title><rect x="1137.1" y="373" width="1.1" height="15.0" fill="rgb(209,33,50)" rx="2" ry="2" />
<text  x="1140.15" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="1181.4" y="277" width="4.3" height="15.0" fill="rgb(209,134,35)" rx="2" ry="2" />
<text  x="1184.37" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="442.5" y="149" width="1.1" height="15.0" fill="rgb(231,168,52)" rx="2" ry="2" />
<text  x="445.52" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80389d59b0, (1 samples, 0.09%)</title><rect x="820.0" y="197" width="1.1" height="15.0" fill="rgb(250,51,4)" rx="2" ry="2" />
<text  x="823.04" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (1 samples, 0.09%)</title><rect x="859.9" y="437" width="1.1" height="15.0" fill="rgb(222,193,38)" rx="2" ry="2" />
<text  x="862.95" y="447.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2a6c1bd8, (6 samples, 0.55%)</title><rect x="719.7" y="373" width="6.5" height="15.0" fill="rgb(252,68,18)" rx="2" ry="2" />
<text  x="722.73" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee1c62d0f8, (1 samples, 0.09%)</title><rect x="676.6" y="309" width="1.1" height="15.0" fill="rgb(248,55,39)" rx="2" ry="2" />
<text  x="679.58" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8028043540, (1 samples, 0.09%)</title><rect x="803.9" y="197" width="1.0" height="15.0" fill="rgb(205,167,9)" rx="2" ry="2" />
<text  x="806.86" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (20 samples, 1.83%)</title><rect x="1115.6" y="485" width="21.5" height="15.0" fill="rgb(207,28,53)" rx="2" ry="2" />
<text  x="1118.58" y="495.5" >s..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="675.5" y="341" width="1.1" height="15.0" fill="rgb(239,76,4)" rx="2" ry="2" />
<text  x="678.50" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803b9c2880, (1 samples, 0.09%)</title><rect x="825.4" y="197" width="1.1" height="15.0" fill="rgb(247,178,49)" rx="2" ry="2" />
<text  x="828.43" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="874.0" y="421" width="2.1" height="15.0" fill="rgb(243,216,33)" rx="2" ry="2" />
<text  x="876.97" y="431.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (5 samples, 0.46%)</title><rect x="436.1" y="149" width="5.3" height="15.0" fill="rgb(245,49,26)" rx="2" ry="2" />
<text  x="439.05" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (5 samples, 0.46%)</title><rect x="464.1" y="341" width="5.4" height="15.0" fill="rgb(215,191,11)" rx="2" ry="2" />
<text  x="467.10" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803f2f3920) (1 samples, 0.09%)</title><rect x="804.9" y="181" width="1.1" height="15.0" fill="rgb(227,34,5)" rx="2" ry="2" />
<text  x="807.94" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (1 samples, 0.09%)</title><rect x="323.9" y="213" width="1.1" height="15.0" fill="rgb(245,150,1)" rx="2" ry="2" />
<text  x="326.88" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164b60, (1 samples, 0.09%)</title><rect x="246.2" y="133" width="1.1" height="15.0" fill="rgb(231,71,5)" rx="2" ry="2" />
<text  x="249.22" y="143.5" ></text>
</g>
<g >
<title>std::mutex::unlock (3 samples, 0.27%)</title><rect x="419.9" y="165" width="3.2" height="15.0" fill="rgb(242,229,33)" rx="2" ry="2" />
<text  x="422.87" y="175.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee201acd58, (12 samples, 1.10%)</title><rect x="999.1" y="373" width="12.9" height="15.0" fill="rgb(214,162,32)" rx="2" ry="2" />
<text  x="1002.09" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 0.46%)</title><rect x="458.7" y="181" width="5.4" height="15.0" fill="rgb(211,216,37)" rx="2" ry="2" />
<text  x="461.70" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x55ee28517ed0, (1 samples, 0.09%)</title><rect x="18.6" y="405" width="1.1" height="15.0" fill="rgb(205,49,39)" rx="2" ry="2" />
<text  x="21.63" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (9 samples, 0.82%)</title><rect x="175.0" y="181" width="9.7" height="15.0" fill="rgb(227,92,42)" rx="2" ry="2" />
<text  x="178.03" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (40 samples, 3.66%)</title><rect x="790.9" y="325" width="43.2" height="15.0" fill="rgb(241,191,32)" rx="2" ry="2" />
<text  x="793.91" y="335.5" >std:..</text>
</g>
<g >
<title>SimpleIdGenerator::generateId (4 samples, 0.37%)</title><rect x="874.0" y="469" width="4.3" height="15.0" fill="rgb(236,153,16)" rx="2" ry="2" />
<text  x="876.97" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (125 samples, 11.43%)</title><rect x="100.6" y="341" width="134.8" height="15.0" fill="rgb(241,97,30)" rx="2" ry="2" />
<text  x="103.60" y="351.5" >std::__future_bas..</text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (53 samples, 4.84%)</title><rect x="733.7" y="437" width="57.2" height="15.0" fill="rgb(252,98,25)" rx="2" ry="2" />
<text  x="736.75" y="447.5" >std::_..</text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cd08) (1 samples, 0.09%)</title><rect x="474.9" y="149" width="1.1" height="15.0" fill="rgb(247,204,23)" rx="2" ry="2" />
<text  x="477.88" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.09%)</title><rect x="468.4" y="181" width="1.1" height="15.0" fill="rgb(246,219,39)" rx="2" ry="2" />
<text  x="471.41" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b2fdc30) (1 samples, 0.09%)</title><rect x="34.8" y="341" width="1.1" height="15.0" fill="rgb(208,46,27)" rx="2" ry="2" />
<text  x="37.81" y="351.5" ></text>
</g>
<g >
<title>PageId::~PageId (5 samples, 0.46%)</title><rect x="1181.4" y="325" width="5.4" height="15.0" fill="rgb(230,185,36)" rx="2" ry="2" />
<text  x="1184.37" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (10 samples, 0.91%)</title><rect x="1023.9" y="437" width="10.8" height="15.0" fill="rgb(205,82,9)" rx="2" ry="2" />
<text  x="1026.89" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.09%)</title><rect x="44.5" y="245" width="1.1" height="15.0" fill="rgb(239,81,7)" rx="2" ry="2" />
<text  x="47.52" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="418.8" y="309" width="22.6" height="15.0" fill="rgb(240,195,45)" rx="2" ry="2" />
<text  x="421.79" y="319.5" >s..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f803c000020) (1 samples, 0.09%)</title><rect x="839.5" y="261" width="1.0" height="15.0" fill="rgb(241,161,48)" rx="2" ry="2" />
<text  x="842.45" y="271.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e4e0, (1 samples, 0.09%)</title><rect x="1138.2" y="437" width="1.1" height="15.0" fill="rgb(208,81,6)" rx="2" ry="2" />
<text  x="1141.23" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::initEdges(MultiThreadedPageRankComputer::Pool&amp;, (68 samples, 6.22%)</title><rect x="27.3" y="469" width="73.3" height="15.0" fill="rgb(227,118,11)" rx="2" ry="2" />
<text  x="30.26" y="479.5" >std::thr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="99.5" y="309" width="1.1" height="15.0" fill="rgb(232,52,31)" rx="2" ry="2" />
<text  x="102.52" y="319.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.09%)</title><rect x="663.6" y="533" width="1.1" height="15.0" fill="rgb(225,117,10)" rx="2" ry="2" />
<text  x="666.64" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803bad4bf0, (1 samples, 0.09%)</title><rect x="826.5" y="197" width="1.1" height="15.0" fill="rgb(212,0,0)" rx="2" ry="2" />
<text  x="829.51" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="675.5" y="421" width="2.2" height="15.0" fill="rgb(239,150,43)" rx="2" ry="2" />
<text  x="678.50" y="431.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f802c000020, (1 samples, 0.09%)</title><rect x="55.3" y="229" width="1.1" height="15.0" fill="rgb(248,160,20)" rx="2" ry="2" />
<text  x="58.30" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.09%)</title><rect x="1137.1" y="325" width="1.1" height="15.0" fill="rgb(229,66,14)" rx="2" ry="2" />
<text  x="1140.15" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.09%)</title><rect x="1174.9" y="469" width="1.1" height="15.0" fill="rgb(213,196,6)" rx="2" ry="2" />
<text  x="1177.90" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee30c021b0) (53 samples, 4.84%)</title><rect x="733.7" y="453" width="57.2" height="15.0" fill="rgb(245,44,25)" rx="2" ry="2" />
<text  x="736.75" y="463.5" >std::_..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (22 samples, 2.01%)</title><rect x="916.0" y="421" width="23.8" height="15.0" fill="rgb(235,173,13)" rx="2" ry="2" />
<text  x="919.03" y="431.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="876.1" y="421" width="2.2" height="15.0" fill="rgb(214,165,53)" rx="2" ry="2" />
<text  x="879.12" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105ea40, (2 samples, 0.18%)</title><rect x="984.0" y="421" width="2.1" height="15.0" fill="rgb(247,121,47)" rx="2" ry="2" />
<text  x="986.99" y="431.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.09%)</title><rect x="73.6" y="293" width="1.1" height="15.0" fill="rgb(231,78,12)" rx="2" ry="2" />
<text  x="76.64" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.55%)</title><rect x="88.7" y="373" width="6.5" height="15.0" fill="rgb(219,226,49)" rx="2" ry="2" />
<text  x="91.74" y="383.5" ></text>
</g>
<g >
<title>Page::generateId (1 samples, 0.09%)</title><rect x="1143.6" y="485" width="1.1" height="15.0" fill="rgb(224,211,35)" rx="2" ry="2" />
<text  x="1146.62" y="495.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (50 samples, 4.57%)</title><rect x="342.2" y="293" width="53.9" height="15.0" fill="rgb(243,178,44)" rx="2" ry="2" />
<text  x="345.21" y="303.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.27%)</title><rect x="24.0" y="357" width="3.3" height="15.0" fill="rgb(227,197,51)" rx="2" ry="2" />
<text  x="27.02" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="375.6" y="181" width="1.1" height="15.0" fill="rgb(251,164,4)" rx="2" ry="2" />
<text  x="378.65" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="1186.8" y="389" width="2.1" height="15.0" fill="rgb(230,179,17)" rx="2" ry="2" />
<text  x="1189.76" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="437" width="2.2" height="15.0" fill="rgb(249,194,37)" rx="2" ry="2" />
<text  x="964.33" y="447.5" ></text>
</g>
<g >
<title>std::(__val=86429) (1 samples, 0.09%)</title><rect x="1142.5" y="485" width="1.1" height="15.0" fill="rgb(250,19,40)" rx="2" ry="2" />
<text  x="1145.54" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="435.0" y="165" width="1.1" height="15.0" fill="rgb(225,42,23)" rx="2" ry="2" />
<text  x="437.97" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (9 samples, 0.82%)</title><rect x="878.3" y="485" width="9.7" height="15.0" fill="rgb(252,211,16)" rx="2" ry="2" />
<text  x="881.28" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.09%)</title><rect x="676.6" y="357" width="1.1" height="15.0" fill="rgb(250,210,33)" rx="2" ry="2" />
<text  x="679.58" y="367.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (5 samples, 0.46%)</title><rect x="582.7" y="101" width="5.4" height="15.0" fill="rgb(216,168,14)" rx="2" ry="2" />
<text  x="585.74" y="111.5" ></text>
</g>
<g >
<title>std::(__val=382682) (1 samples, 0.09%)</title><rect x="1141.5" y="485" width="1.0" height="15.0" fill="rgb(221,75,1)" rx="2" ry="2" />
<text  x="1144.46" y="495.5" ></text>
</g>
<g >
<title>std::(__val=581) (2 samples, 0.18%)</title><rect x="869.7" y="469" width="2.1" height="15.0" fill="rgb(206,144,39)" rx="2" ry="2" />
<text  x="872.65" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="441.4" y="261" width="22.7" height="15.0" fill="rgb(217,117,39)" rx="2" ry="2" />
<text  x="444.44" y="271.5" >s..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (4 samples, 0.37%)</title><rect x="188.0" y="53" width="4.3" height="15.0" fill="rgb(239,138,54)" rx="2" ry="2" />
<text  x="190.97" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffea105eb50, (1 samples, 0.09%)</title><rect x="898.8" y="421" width="1.1" height="15.0" fill="rgb(207,46,25)" rx="2" ry="2" />
<text  x="901.78" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="459.8" y="149" width="1.1" height="15.0" fill="rgb(236,24,49)" rx="2" ry="2" />
<text  x="462.78" y="159.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.09%)</title><rect x="342.2" y="165" width="1.1" height="15.0" fill="rgb(248,10,50)" rx="2" ry="2" />
<text  x="345.21" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164ab8) (1 samples, 0.09%)</title><rect x="418.8" y="133" width="1.1" height="15.0" fill="rgb(226,3,38)" rx="2" ry="2" />
<text  x="421.79" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="675.5" y="469" width="2.2" height="15.0" fill="rgb(254,216,14)" rx="2" ry="2" />
<text  x="678.50" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="289.4" y="165" width="1.0" height="15.0" fill="rgb(207,36,36)" rx="2" ry="2" />
<text  x="292.36" y="175.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5890) (1 samples, 0.09%)</title><rect x="244.1" y="149" width="1.0" height="15.0" fill="rgb(237,75,41)" rx="2" ry="2" />
<text  x="247.06" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="675.5" y="229" width="1.1" height="15.0" fill="rgb(213,115,34)" rx="2" ry="2" />
<text  x="678.50" y="239.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (9 samples, 0.82%)</title><rect x="235.4" y="181" width="9.7" height="15.0" fill="rgb(206,67,23)" rx="2" ry="2" />
<text  x="238.43" y="191.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (10 samples, 0.91%)</title><rect x="862.1" y="485" width="10.8" height="15.0" fill="rgb(240,209,49)" rx="2" ry="2" />
<text  x="865.10" y="495.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.37%)</title><rect x="464.1" y="149" width="4.3" height="15.0" fill="rgb(230,228,11)" rx="2" ry="2" />
<text  x="467.10" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.09%)</title><rect x="664.7" y="453" width="1.1" height="15.0" fill="rgb(223,94,48)" rx="2" ry="2" />
<text  x="667.72" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="235.4" y="133" width="1.1" height="15.0" fill="rgb(250,177,52)" rx="2" ry="2" />
<text  x="238.43" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.37%)</title><rect x="971.0" y="389" width="4.4" height="15.0" fill="rgb(234,44,44)" rx="2" ry="2" />
<text  x="974.04" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2b20a478, (1 samples, 0.09%)</title><rect x="844.8" y="293" width="1.1" height="15.0" fill="rgb(206,166,45)" rx="2" ry="2" />
<text  x="847.84" y="303.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (10 samples, 0.91%)</title><rect x="1023.9" y="389" width="10.8" height="15.0" fill="rgb(239,21,32)" rx="2" ry="2" />
<text  x="1026.89" y="399.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="20.8" y="293" width="1.1" height="15.0" fill="rgb(252,6,24)" rx="2" ry="2" />
<text  x="23.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="76.9" y="357" width="1.1" height="15.0" fill="rgb(251,28,19)" rx="2" ry="2" />
<text  x="79.87" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="421" width="1.1" height="15.0" fill="rgb(206,35,46)" rx="2" ry="2" />
<text  x="906.09" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (9 samples, 0.82%)</title><rect x="78.0" y="357" width="9.7" height="15.0" fill="rgb(242,206,8)" rx="2" ry="2" />
<text  x="80.95" y="367.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="867.5" y="421" width="1.1" height="15.0" fill="rgb(240,218,47)" rx="2" ry="2" />
<text  x="870.50" y="431.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="867.5" y="437" width="1.1" height="15.0" fill="rgb(213,29,24)" rx="2" ry="2" />
<text  x="870.50" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="74.7" y="261" width="2.2" height="15.0" fill="rgb(232,98,36)" rx="2" ry="2" />
<text  x="77.72" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="865.3" y="437" width="1.1" height="15.0" fill="rgb(210,124,22)" rx="2" ry="2" />
<text  x="868.34" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="664.7" y="421" width="1.1" height="15.0" fill="rgb(234,116,47)" rx="2" ry="2" />
<text  x="667.72" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8025cd5b90, (1 samples, 0.09%)</title><rect x="797.4" y="197" width="1.1" height="15.0" fill="rgb(217,185,38)" rx="2" ry="2" />
<text  x="800.39" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="900.9" y="421" width="2.2" height="15.0" fill="rgb(226,97,37)" rx="2" ry="2" />
<text  x="903.93" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164ab8) (1 samples, 0.09%)</title><rect x="111.4" y="149" width="1.1" height="15.0" fill="rgb(233,109,53)" rx="2" ry="2" />
<text  x="114.39" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (4 samples, 0.37%)</title><rect x="464.1" y="117" width="4.3" height="15.0" fill="rgb(237,99,3)" rx="2" ry="2" />
<text  x="467.10" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.46%)</title><rect x="582.7" y="37" width="5.4" height="15.0" fill="rgb(250,183,29)" rx="2" ry="2" />
<text  x="585.74" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.55%)</title><rect x="588.1" y="149" width="6.5" height="15.0" fill="rgb(247,160,34)" rx="2" ry="2" />
<text  x="591.14" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="819.0" y="181" width="1.0" height="15.0" fill="rgb(246,68,48)" rx="2" ry="2" />
<text  x="821.96" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.37%)</title><rect x="1176.0" y="485" width="4.3" height="15.0" fill="rgb(208,53,42)" rx="2" ry="2" />
<text  x="1178.98" y="495.5" ></text>
</g>
<g >
<title>std::(__val=1675) (1 samples, 0.09%)</title><rect x="865.3" y="469" width="1.1" height="15.0" fill="rgb(205,211,40)" rx="2" ry="2" />
<text  x="868.34" y="479.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="889.1" y="357" width="1.0" height="15.0" fill="rgb(205,152,26)" rx="2" ry="2" />
<text  x="892.07" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (83 samples, 7.59%)</title><rect x="235.4" y="229" width="89.6" height="15.0" fill="rgb(208,165,40)" rx="2" ry="2" />
<text  x="238.43" y="239.5" >std::__inv..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee268a0658, (1 samples, 0.09%)</title><rect x="946.2" y="309" width="1.1" height="15.0" fill="rgb(219,167,4)" rx="2" ry="2" />
<text  x="949.23" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageIdAndRank*, (1 samples, 0.09%)</title><rect x="1146.9" y="437" width="1.0" height="15.0" fill="rgb(227,180,25)" rx="2" ry="2" />
<text  x="1149.86" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f802c000020) (1 samples, 0.09%)</title><rect x="840.5" y="261" width="1.1" height="15.0" fill="rgb(214,60,23)" rx="2" ry="2" />
<text  x="843.53" y="271.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (3 samples, 0.27%)</title><rect x="181.5" y="149" width="3.2" height="15.0" fill="rgb(210,192,54)" rx="2" ry="2" />
<text  x="184.50" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="1176.0" y="453" width="2.1" height="15.0" fill="rgb(249,5,51)" rx="2" ry="2" />
<text  x="1178.98" y="463.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (3 samples, 0.27%)</title><rect x="419.9" y="181" width="3.2" height="15.0" fill="rgb(247,209,8)" rx="2" ry="2" />
<text  x="422.87" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.09%)</title><rect x="905.2" y="357" width="1.1" height="15.0" fill="rgb(246,94,6)" rx="2" ry="2" />
<text  x="908.25" y="367.5" ></text>
</g>
<g >
<title>Page::Page (8 samples, 0.73%)</title><rect x="851.3" y="437" width="8.6" height="15.0" fill="rgb(235,27,52)" rx="2" ry="2" />
<text  x="854.32" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (5 samples, 0.46%)</title><rect x="464.1" y="309" width="5.4" height="15.0" fill="rgb(224,33,11)" rx="2" ry="2" />
<text  x="467.10" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="1151.2" y="437" width="2.1" height="15.0" fill="rgb(232,79,9)" rx="2" ry="2" />
<text  x="1154.17" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="952.7" y="437" width="3.2" height="15.0" fill="rgb(253,41,36)" rx="2" ry="2" />
<text  x="955.71" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.09%)</title><rect x="1179.2" y="405" width="1.1" height="15.0" fill="rgb(249,30,7)" rx="2" ry="2" />
<text  x="1182.21" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1de1e0) (2 samples, 0.18%)</title><rect x="121.1" y="149" width="2.2" height="15.0" fill="rgb(223,14,16)" rx="2" ry="2" />
<text  x="124.10" y="159.5" ></text>
</g>
<g >
<title>PageId::operator== (4 samples, 0.37%)</title><rect x="976.4" y="373" width="4.3" height="15.0" fill="rgb(245,212,48)" rx="2" ry="2" />
<text  x="979.44" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="482.4" y="133" width="1.1" height="15.0" fill="rgb(230,133,42)" rx="2" ry="2" />
<text  x="485.43" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="342.2" y="133" width="1.1" height="15.0" fill="rgb(253,89,46)" rx="2" ry="2" />
<text  x="345.21" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.18%)</title><rect x="889.1" y="453" width="2.1" height="15.0" fill="rgb(214,79,3)" rx="2" ry="2" />
<text  x="892.07" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (13 samples, 1.19%)</title><rect x="381.0" y="165" width="14.1" height="15.0" fill="rgb(235,64,26)" rx="2" ry="2" />
<text  x="384.04" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.55%)</title><rect x="1129.6" y="341" width="6.5" height="15.0" fill="rgb(228,191,3)" rx="2" ry="2" />
<text  x="1132.60" y="351.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff628, (21 samples, 1.92%)</title><rect x="418.8" y="357" width="22.6" height="15.0" fill="rgb(227,105,13)" rx="2" ry="2" />
<text  x="421.79" y="367.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="874.0" y="437" width="2.1" height="15.0" fill="rgb(216,199,21)" rx="2" ry="2" />
<text  x="876.97" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (4 samples, 0.37%)</title><rect x="188.0" y="69" width="4.3" height="15.0" fill="rgb(228,92,30)" rx="2" ry="2" />
<text  x="190.97" y="79.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="971.0" y="373" width="2.2" height="15.0" fill="rgb(226,181,37)" rx="2" ry="2" />
<text  x="974.04" y="383.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (83 samples, 7.59%)</title><rect x="235.4" y="293" width="89.6" height="15.0" fill="rgb(234,198,23)" rx="2" ry="2" />
<text  x="238.43" y="303.5" >std::__fut..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="20.8" y="309" width="1.1" height="15.0" fill="rgb(237,98,38)" rx="2" ry="2" />
<text  x="23.79" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="939.8" y="245" width="4.3" height="15.0" fill="rgb(236,96,54)" rx="2" ry="2" />
<text  x="942.76" y="255.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks (19 samples, 1.74%)</title><rect x="1155.5" y="501" width="20.5" height="15.0" fill="rgb(239,110,29)" rx="2" ry="2" />
<text  x="1158.48" y="511.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1144.7" y="357" width="1.1" height="15.0" fill="rgb(235,85,0)" rx="2" ry="2" />
<text  x="1147.70" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188722386688, (2 samples, 0.18%)</title><rect x="677.7" y="453" width="2.1" height="15.0" fill="rgb(224,110,32)" rx="2" ry="2" />
<text  x="680.66" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (6 samples, 0.55%)</title><rect x="719.7" y="421" width="6.5" height="15.0" fill="rgb(214,162,12)" rx="2" ry="2" />
<text  x="722.73" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (50 samples, 4.57%)</title><rect x="342.2" y="245" width="53.9" height="15.0" fill="rgb(227,59,5)" rx="2" ry="2" />
<text  x="345.21" y="255.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="899.9" y="453" width="3.2" height="15.0" fill="rgb(243,90,41)" rx="2" ry="2" />
<text  x="902.85" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8014000020, (1 samples, 0.09%)</title><rect x="794.1" y="181" width="1.1" height="15.0" fill="rgb(210,132,8)" rx="2" ry="2" />
<text  x="797.15" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105e950, (2 samples, 0.18%)</title><rect x="1149.0" y="421" width="2.2" height="15.0" fill="rgb(253,218,36)" rx="2" ry="2" />
<text  x="1152.01" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.55%)</title><rect x="1129.6" y="325" width="6.5" height="15.0" fill="rgb(237,42,48)" rx="2" ry="2" />
<text  x="1132.60" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="975.4" y="389" width="1.0" height="15.0" fill="rgb(245,172,6)" rx="2" ry="2" />
<text  x="978.36" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (54 samples, 4.94%)</title><rect x="790.9" y="357" width="58.3" height="15.0" fill="rgb(229,104,28)" rx="2" ry="2" />
<text  x="793.91" y="367.5" >std::v..</text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="947.3" y="293" width="1.1" height="15.0" fill="rgb(224,219,45)" rx="2" ry="2" />
<text  x="950.31" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.09%)</title><rect x="1137.1" y="469" width="1.1" height="15.0" fill="rgb(235,16,15)" rx="2" ry="2" />
<text  x="1140.15" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1141.5" y="469" width="1.0" height="15.0" fill="rgb(238,206,47)" rx="2" ry="2" />
<text  x="1144.46" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (5 samples, 0.46%)</title><rect x="436.1" y="133" width="5.3" height="15.0" fill="rgb(212,96,31)" rx="2" ry="2" />
<text  x="439.05" y="143.5" ></text>
</g>
<g >
<title>PageId::PageId (7 samples, 0.64%)</title><rect x="967.8" y="469" width="7.6" height="15.0" fill="rgb(209,172,8)" rx="2" ry="2" />
<text  x="970.81" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (4 samples, 0.37%)</title><rect x="944.1" y="341" width="4.3" height="15.0" fill="rgb(243,0,5)" rx="2" ry="2" />
<text  x="947.08" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.37%)</title><rect x="464.1" y="133" width="4.3" height="15.0" fill="rgb(227,35,2)" rx="2" ry="2" />
<text  x="467.10" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="900.9" y="437" width="2.2" height="15.0" fill="rgb(218,92,3)" rx="2" ry="2" />
<text  x="903.93" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (8 samples, 0.73%)</title><rect x="851.3" y="485" width="8.6" height="15.0" fill="rgb(218,134,32)" rx="2" ry="2" />
<text  x="854.32" y="495.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.09%)</title><rect x="666.9" y="485" width="1.1" height="15.0" fill="rgb(244,86,10)" rx="2" ry="2" />
<text  x="669.87" y="495.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal(sf=sf@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="862.1" y="421" width="1.1" height="15.0" fill="rgb(238,223,44)" rx="2" ry="2" />
<text  x="865.10" y="431.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (2 samples, 0.18%)</title><rect x="731.6" y="389" width="2.1" height="15.0" fill="rgb(235,152,12)" rx="2" ry="2" />
<text  x="734.59" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="894.5" y="357" width="1.0" height="15.0" fill="rgb(209,150,52)" rx="2" ry="2" />
<text  x="897.46" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.09%)</title><rect x="973.2" y="373" width="1.1" height="15.0" fill="rgb(239,40,26)" rx="2" ry="2" />
<text  x="976.20" y="383.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="1144.7" y="389" width="1.1" height="15.0" fill="rgb(244,139,42)" rx="2" ry="2" />
<text  x="1147.70" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.64%)</title><rect x="1129.6" y="421" width="7.5" height="15.0" fill="rgb(251,210,49)" rx="2" ry="2" />
<text  x="1132.60" y="431.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (1 samples, 0.09%)</title><rect x="863.2" y="405" width="1.1" height="15.0" fill="rgb(235,24,31)" rx="2" ry="2" />
<text  x="866.18" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (5 samples, 0.46%)</title><rect x="726.2" y="437" width="5.4" height="15.0" fill="rgb(243,209,28)" rx="2" ry="2" />
<text  x="729.20" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="473.8" y="133" width="1.1" height="15.0" fill="rgb(220,185,21)" rx="2" ry="2" />
<text  x="476.80" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.37%)</title><rect x="976.4" y="405" width="4.3" height="15.0" fill="rgb(229,108,54)" rx="2" ry="2" />
<text  x="979.44" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (16 samples, 1.46%)</title><rect x="325.0" y="325" width="17.2" height="15.0" fill="rgb(210,37,30)" rx="2" ry="2" />
<text  x="327.95" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee200e1b68, (1 samples, 0.09%)</title><rect x="838.4" y="293" width="1.1" height="15.0" fill="rgb(242,61,36)" rx="2" ry="2" />
<text  x="841.37" y="303.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="485.7" y="117" width="1.0" height="15.0" fill="rgb(253,38,3)" rx="2" ry="2" />
<text  x="488.67" y="127.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8024000020, (1 samples, 0.09%)</title><rect x="797.4" y="181" width="1.1" height="15.0" fill="rgb(225,106,49)" rx="2" ry="2" />
<text  x="800.39" y="191.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2a6c1bb0) (11 samples, 1.01%)</title><rect x="1012.0" y="453" width="11.9" height="15.0" fill="rgb(221,53,4)" rx="2" ry="2" />
<text  x="1015.03" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f803bdf7fb0) (1 samples, 0.09%)</title><rect x="806.0" y="181" width="1.1" height="15.0" fill="rgb(205,62,10)" rx="2" ry="2" />
<text  x="809.01" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (5 samples, 0.46%)</title><rect x="888.0" y="485" width="5.4" height="15.0" fill="rgb(240,126,1)" rx="2" ry="2" />
<text  x="890.99" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (522 samples, 47.71%)</title><rect x="100.6" y="453" width="563.0" height="15.0" fill="rgb(235,38,27)" rx="2" ry="2" />
<text  x="103.60" y="463.5" >std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.09%)</title><rect x="894.5" y="469" width="1.0" height="15.0" fill="rgb(249,42,32)" rx="2" ry="2" />
<text  x="897.46" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="675.5" y="405" width="2.2" height="15.0" fill="rgb(233,21,45)" rx="2" ry="2" />
<text  x="678.50" y="415.5" ></text>
</g>
<g >
<title>Page::generateId(idGenerator=..., (1 samples, 0.09%)</title><rect x="872.9" y="485" width="1.1" height="15.0" fill="rgb(240,138,29)" rx="2" ry="2" />
<text  x="875.89" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.18%)</title><rect x="909.6" y="405" width="2.1" height="15.0" fill="rgb(231,156,26)" rx="2" ry="2" />
<text  x="912.56" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (14 samples, 1.28%)</title><rect x="834.1" y="341" width="15.1" height="15.0" fill="rgb(209,29,0)" rx="2" ry="2" />
<text  x="837.06" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee30c021b0) (67 samples, 6.12%)</title><rect x="1043.3" y="453" width="72.3" height="15.0" fill="rgb(235,101,26)" rx="2" ry="2" />
<text  x="1046.31" y="463.5" >std::__f..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8028000020) (1 samples, 0.09%)</title><rect x="844.8" y="261" width="1.1" height="15.0" fill="rgb(230,75,41)" rx="2" ry="2" />
<text  x="847.84" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="418.8" y="229" width="22.6" height="15.0" fill="rgb(229,75,19)" rx="2" ry="2" />
<text  x="421.79" y="239.5" >s..</text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3fe5b8, (50 samples, 4.57%)</title><rect x="342.2" y="357" width="53.9" height="15.0" fill="rgb(239,102,4)" rx="2" ry="2" />
<text  x="345.21" y="367.5" >__pth..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="898.8" y="485" width="1.1" height="15.0" fill="rgb(250,192,17)" rx="2" ry="2" />
<text  x="901.78" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.09%)</title><rect x="903.1" y="469" width="1.1" height="15.0" fill="rgb(212,128,8)" rx="2" ry="2" />
<text  x="906.09" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee2b3ff7e0) (2 samples, 0.18%)</title><rect x="731.6" y="453" width="2.1" height="15.0" fill="rgb(214,200,53)" rx="2" ry="2" />
<text  x="734.59" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (4 samples, 0.37%)</title><rect x="939.8" y="357" width="4.3" height="15.0" fill="rgb(205,111,45)" rx="2" ry="2" />
<text  x="942.76" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (14 samples, 1.28%)</title><rect x="1155.5" y="421" width="15.1" height="15.0" fill="rgb(252,37,32)" rx="2" ry="2" />
<text  x="1158.48" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.09%)</title><rect x="704.6" y="389" width="1.1" height="15.0" fill="rgb(207,180,16)" rx="2" ry="2" />
<text  x="707.63" y="399.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="675.5" y="293" width="1.1" height="15.0" fill="rgb(212,36,23)" rx="2" ry="2" />
<text  x="678.50" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.09%)</title><rect x="864.3" y="325" width="1.0" height="15.0" fill="rgb(250,177,1)" rx="2" ry="2" />
<text  x="867.26" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="967.8" y="421" width="7.6" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" />
<text  x="970.81" y="431.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_complete_async (12 samples, 1.10%)</title><rect x="999.1" y="437" width="12.9" height="15.0" fill="rgb(210,113,7)" rx="2" ry="2" />
<text  x="1002.09" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (31 samples, 2.83%)</title><rect x="38.0" y="357" width="33.5" height="15.0" fill="rgb(242,18,18)" rx="2" ry="2" />
<text  x="41.04" y="367.5" >__..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee198168a0) (1 samples, 0.09%)</title><rect x="1178.1" y="277" width="1.1" height="15.0" fill="rgb(242,44,40)" rx="2" ry="2" />
<text  x="1181.14" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee1fb10ee0) (1 samples, 0.09%)</title><rect x="32.7" y="357" width="1.0" height="15.0" fill="rgb(227,26,5)" rx="2" ry="2" />
<text  x="35.65" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b18cd08, (1 samples, 0.09%)</title><rect x="345.4" y="133" width="1.1" height="15.0" fill="rgb(226,9,46)" rx="2" ry="2" />
<text  x="348.45" y="143.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.09%)</title><rect x="666.9" y="309" width="1.1" height="15.0" fill="rgb(227,87,48)" rx="2" ry="2" />
<text  x="669.87" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="559.0" y="133" width="1.1" height="15.0" fill="rgb(238,189,25)" rx="2" ry="2" />
<text  x="562.01" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (14 samples, 1.28%)</title><rect x="1155.5" y="453" width="15.1" height="15.0" fill="rgb(215,212,0)" rx="2" ry="2" />
<text  x="1158.48" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105e950, (1 samples, 0.09%)</title><rect x="915.0" y="421" width="1.0" height="15.0" fill="rgb(247,176,1)" rx="2" ry="2" />
<text  x="917.95" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188835174144, (12 samples, 1.10%)</title><rect x="999.1" y="341" width="12.9" height="15.0" fill="rgb(222,52,34)" rx="2" ry="2" />
<text  x="1002.09" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (20 samples, 1.83%)</title><rect x="1115.6" y="469" width="21.5" height="15.0" fill="rgb(246,203,36)" rx="2" ry="2" />
<text  x="1118.58" y="479.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffea105eb50, (2 samples, 0.18%)</title><rect x="963.5" y="389" width="2.1" height="15.0" fill="rgb(232,21,45)" rx="2" ry="2" />
<text  x="966.49" y="399.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.18%)</title><rect x="74.7" y="277" width="2.2" height="15.0" fill="rgb(228,156,32)" rx="2" ry="2" />
<text  x="77.72" y="287.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.09%)</title><rect x="868.6" y="421" width="1.1" height="15.0" fill="rgb(219,25,48)" rx="2" ry="2" />
<text  x="871.57" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2a3d0bb8, (1 samples, 0.09%)</title><rect x="1186.8" y="341" width="1.0" height="15.0" fill="rgb(230,229,4)" rx="2" ry="2" />
<text  x="1189.76" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f80245446f0) (1 samples, 0.09%)</title><rect x="799.5" y="181" width="1.1" height="15.0" fill="rgb(242,80,53)" rx="2" ry="2" />
<text  x="802.54" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="441.4" y="277" width="22.7" height="15.0" fill="rgb(240,224,47)" rx="2" ry="2" />
<text  x="444.44" y="287.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (15 samples, 1.37%)</title><rect x="1155.5" y="469" width="16.2" height="15.0" fill="rgb(210,214,3)" rx="2" ry="2" />
<text  x="1158.48" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageIdAndRank*&gt;, (1 samples, 0.09%)</title><rect x="1146.9" y="421" width="1.0" height="15.0" fill="rgb(209,217,39)" rx="2" ry="2" />
<text  x="1149.86" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (50 samples, 4.57%)</title><rect x="342.2" y="277" width="53.9" height="15.0" fill="rgb(212,222,12)" rx="2" ry="2" />
<text  x="345.21" y="287.5" >std::..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.64%)</title><rect x="296.9" y="165" width="7.6" height="15.0" fill="rgb(250,28,21)" rx="2" ry="2" />
<text  x="299.91" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.37%)</title><rect x="1181.4" y="261" width="4.3" height="15.0" fill="rgb(231,101,44)" rx="2" ry="2" />
<text  x="1184.37" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="825.4" y="181" width="1.1" height="15.0" fill="rgb(235,216,44)" rx="2" ry="2" />
<text  x="828.43" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.09%)</title><rect x="1188.9" y="469" width="1.1" height="15.0" fill="rgb(238,142,9)" rx="2" ry="2" />
<text  x="1191.92" y="479.5" ></text>
</g>
<g >
<title>std::thread::join()() (12 samples, 1.10%)</title><rect x="999.1" y="357" width="12.9" height="15.0" fill="rgb(241,167,15)" rx="2" ry="2" />
<text  x="1002.09" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (47 samples, 4.30%)</title><rect x="124.3" y="197" width="50.7" height="15.0" fill="rgb(228,115,51)" rx="2" ry="2" />
<text  x="127.33" y="207.5" >Multi..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee2b18cd50) (1 samples, 0.09%)</title><rect x="963.5" y="373" width="1.1" height="15.0" fill="rgb(230,155,4)" rx="2" ry="2" />
<text  x="966.49" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="1137.1" y="357" width="1.1" height="15.0" fill="rgb(247,134,46)" rx="2" ry="2" />
<text  x="1140.15" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (4 samples, 0.37%)</title><rect x="413.4" y="117" width="4.3" height="15.0" fill="rgb(215,141,6)" rx="2" ry="2" />
<text  x="416.40" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (18 samples, 1.65%)</title><rect x="304.5" y="133" width="19.4" height="15.0" fill="rgb(234,65,34)" rx="2" ry="2" />
<text  x="307.46" y="143.5" ></text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.09%)</title><rect x="965.6" y="469" width="1.1" height="15.0" fill="rgb(224,156,51)" rx="2" ry="2" />
<text  x="968.65" y="479.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (22 samples, 2.01%)</title><rect x="916.0" y="437" width="23.8" height="15.0" fill="rgb(253,198,6)" rx="2" ry="2" />
<text  x="919.03" y="447.5" >P..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (13 samples, 1.19%)</title><rect x="1115.6" y="405" width="14.0" height="15.0" fill="rgb(232,174,10)" rx="2" ry="2" />
<text  x="1118.58" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="947.3" y="277" width="1.1" height="15.0" fill="rgb(207,109,31)" rx="2" ry="2" />
<text  x="950.31" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="98.4" y="357" width="2.2" height="15.0" fill="rgb(229,214,29)" rx="2" ry="2" />
<text  x="101.45" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.18%)</title><rect x="961.3" y="357" width="2.2" height="15.0" fill="rgb(210,122,36)" rx="2" ry="2" />
<text  x="964.33" y="367.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cd08) (2 samples, 0.18%)</title><rect x="238.7" y="149" width="2.1" height="15.0" fill="rgb(239,143,33)" rx="2" ry="2" />
<text  x="241.67" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1138.2" y="469" width="1.1" height="15.0" fill="rgb(250,214,29)" rx="2" ry="2" />
<text  x="1141.23" y="479.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="973.2" y="357" width="1.1" height="15.0" fill="rgb(234,139,28)" rx="2" ry="2" />
<text  x="976.20" y="367.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.09%)</title><rect x="71.5" y="245" width="1.1" height="15.0" fill="rgb(238,6,19)" rx="2" ry="2" />
<text  x="74.48" y="255.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2 samples, 0.18%)</title><rect x="35.9" y="373" width="2.1" height="15.0" fill="rgb(218,37,26)" rx="2" ry="2" />
<text  x="38.89" y="383.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (31 samples, 2.83%)</title><rect x="677.7" y="501" width="33.4" height="15.0" fill="rgb(227,116,45)" rx="2" ry="2" />
<text  x="680.66" y="511.5" >Mu..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f802c000020, (1 samples, 0.09%)</title><rect x="71.5" y="277" width="1.1" height="15.0" fill="rgb(229,59,53)" rx="2" ry="2" />
<text  x="74.48" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164ab8) (3 samples, 0.27%)</title><rect x="419.9" y="149" width="3.2" height="15.0" fill="rgb(252,84,7)" rx="2" ry="2" />
<text  x="422.87" y="159.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="863.2" y="437" width="1.1" height="15.0" fill="rgb(234,58,5)" rx="2" ry="2" />
<text  x="866.18" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.18%)</title><rect x="378.9" y="165" width="2.1" height="15.0" fill="rgb(252,109,34)" rx="2" ry="2" />
<text  x="381.88" y="175.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (11 samples, 1.01%)</title><rect x="1012.0" y="389" width="11.9" height="15.0" fill="rgb(233,124,26)" rx="2" ry="2" />
<text  x="1015.03" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=..., (3 samples, 0.27%)</title><rect x="976.4" y="357" width="3.3" height="15.0" fill="rgb(210,111,41)" rx="2" ry="2" />
<text  x="979.44" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (8 samples, 0.73%)</title><rect x="851.3" y="469" width="8.6" height="15.0" fill="rgb(243,76,52)" rx="2" ry="2" />
<text  x="854.32" y="479.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize(this=0x7ffea105f000, (2 samples, 0.18%)</title><rect x="849.2" y="517" width="2.1" height="15.0" fill="rgb(229,15,49)" rx="2" ry="2" />
<text  x="852.16" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId,std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="570.9" y="149" width="1.1" height="15.0" fill="rgb(220,94,7)" rx="2" ry="2" />
<text  x="573.88" y="159.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (59 samples, 5.39%)</title><rect x="595.7" y="149" width="63.6" height="15.0" fill="rgb(222,166,45)" rx="2" ry="2" />
<text  x="598.69" y="159.5" >PageId..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.09%)</title><rect x="910.6" y="341" width="1.1" height="15.0" fill="rgb(210,195,4)" rx="2" ry="2" />
<text  x="913.64" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="838.4" y="277" width="1.1" height="15.0" fill="rgb(216,121,15)" rx="2" ry="2" />
<text  x="841.37" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (21 samples, 1.92%)</title><rect x="441.4" y="325" width="22.7" height="15.0" fill="rgb(230,151,11)" rx="2" ry="2" />
<text  x="444.44" y="335.5" >s..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164b60) (1 samples, 0.09%)</title><rect x="236.5" y="133" width="1.1" height="15.0" fill="rgb(231,163,35)" rx="2" ry="2" />
<text  x="239.51" y="143.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="418.8" y="341" width="22.6" height="15.0" fill="rgb(223,215,9)" rx="2" ry="2" />
<text  x="421.79" y="351.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.37%)</title><rect x="939.8" y="229" width="4.3" height="15.0" fill="rgb(231,121,23)" rx="2" ry="2" />
<text  x="942.76" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffea105ea40, (1 samples, 0.09%)</title><rect x="194.4" y="133" width="1.1" height="15.0" fill="rgb(238,86,5)" rx="2" ry="2" />
<text  x="197.44" y="143.5" ></text>
</g>
<g >
<title>advise_stack_range(guardsize=&lt;optimized (1 samples, 0.09%)</title><rect x="663.6" y="517" width="1.1" height="15.0" fill="rgb(212,145,29)" rx="2" ry="2" />
<text  x="666.64" y="527.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e6e0, (1 samples, 0.09%)</title><rect x="863.2" y="421" width="1.1" height="15.0" fill="rgb(249,146,33)" rx="2" ry="2" />
<text  x="866.18" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.09%)</title><rect x="1144.7" y="373" width="1.1" height="15.0" fill="rgb(240,91,52)" rx="2" ry="2" />
<text  x="1147.70" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.27%)</title><rect x="178.3" y="165" width="3.2" height="15.0" fill="rgb(242,162,0)" rx="2" ry="2" />
<text  x="181.26" y="175.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (16 samples, 1.46%)</title><rect x="325.0" y="245" width="17.2" height="15.0" fill="rgb(229,137,9)" rx="2" ry="2" />
<text  x="327.95" y="255.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b3ff9c8, (5 samples, 0.46%)</title><rect x="464.1" y="357" width="5.4" height="15.0" fill="rgb(218,224,37)" rx="2" ry="2" />
<text  x="467.10" y="367.5" ></text>
</g>
<g >
<title>Page::~Page (8 samples, 0.73%)</title><rect x="1180.3" y="421" width="8.6" height="15.0" fill="rgb(234,106,8)" rx="2" ry="2" />
<text  x="1183.29" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="665.8" y="469" width="1.1" height="15.0" fill="rgb(216,109,28)" rx="2" ry="2" />
<text  x="668.80" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.46%)</title><rect x="296.9" y="149" width="5.4" height="15.0" fill="rgb(235,100,33)" rx="2" ry="2" />
<text  x="299.91" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1139.3" y="469" width="1.1" height="15.0" fill="rgb(243,184,51)" rx="2" ry="2" />
<text  x="1142.31" y="479.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="396.1" y="293" width="22.7" height="15.0" fill="rgb(239,138,13)" rx="2" ry="2" />
<text  x="399.14" y="303.5" >s..</text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.09%)</title><rect x="859.9" y="229" width="1.1" height="15.0" fill="rgb(239,153,40)" rx="2" ry="2" />
<text  x="862.95" y="239.5" ></text>
</g>
<g >
<title>clone() (607 samples, 55.48%)</title><rect x="10.0" y="549" width="654.7" height="15.0" fill="rgb(252,60,8)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >clone()</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee282c1070, (1 samples, 0.09%)</title><rect x="1180.3" y="325" width="1.1" height="15.0" fill="rgb(214,164,20)" rx="2" ry="2" />
<text  x="1183.29" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="876.1" y="437" width="2.2" height="15.0" fill="rgb(209,225,9)" rx="2" ry="2" />
<text  x="879.12" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (36 samples, 3.29%)</title><rect x="195.5" y="165" width="38.9" height="15.0" fill="rgb(224,103,10)" rx="2" ry="2" />
<text  x="198.52" y="175.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="376.7" y="181" width="2.2" height="15.0" fill="rgb(218,159,20)" rx="2" ry="2" />
<text  x="379.73" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.09%)</title><rect x="668.0" y="453" width="1.0" height="15.0" fill="rgb(229,1,0)" rx="2" ry="2" />
<text  x="670.95" y="463.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.09%)</title><rect x="410.2" y="149" width="1.0" height="15.0" fill="rgb(253,19,5)" rx="2" ry="2" />
<text  x="413.16" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (4 samples, 0.37%)</title><rect x="464.1" y="197" width="4.3" height="15.0" fill="rgb(236,81,8)" rx="2" ry="2" />
<text  x="467.10" y="207.5" ></text>
</g>
<g >
<title>std::(__val=465) (1 samples, 0.09%)</title><rect x="868.6" y="469" width="1.1" height="15.0" fill="rgb(233,98,1)" rx="2" ry="2" />
<text  x="871.57" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8038480240, (1 samples, 0.09%)</title><rect x="819.0" y="197" width="1.0" height="15.0" fill="rgb(208,204,11)" rx="2" ry="2" />
<text  x="821.96" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="101.7" y="149" width="1.1" height="15.0" fill="rgb(229,145,46)" rx="2" ry="2" />
<text  x="104.68" y="159.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (180 samples, 16.45%)</title><rect x="469.5" y="245" width="194.1" height="15.0" fill="rgb(240,142,49)" rx="2" ry="2" />
<text  x="472.49" y="255.5" >std::__invoke&lt;MultiThread..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="967.8" y="405" width="3.2" height="15.0" fill="rgb(215,176,49)" rx="2" ry="2" />
<text  x="970.81" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f803c000020) (1 samples, 0.09%)</title><rect x="845.9" y="261" width="1.1" height="15.0" fill="rgb(234,188,18)" rx="2" ry="2" />
<text  x="848.92" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.09%)</title><rect x="676.6" y="341" width="1.1" height="15.0" fill="rgb(207,5,50)" rx="2" ry="2" />
<text  x="679.58" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1180.3" y="357" width="1.1" height="15.0" fill="rgb(243,97,24)" rx="2" ry="2" />
<text  x="1183.29" y="367.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164b28) (1 samples, 0.09%)</title><rect x="343.3" y="149" width="1.1" height="15.0" fill="rgb(236,207,0)" rx="2" ry="2" />
<text  x="346.29" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="411.2" y="181" width="2.2" height="15.0" fill="rgb(243,70,8)" rx="2" ry="2" />
<text  x="414.24" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1151.2" y="421" width="2.1" height="15.0" fill="rgb(230,57,43)" rx="2" ry="2" />
<text  x="1154.17" y="431.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (1 samples, 0.09%)</title><rect x="870.7" y="405" width="1.1" height="15.0" fill="rgb(254,210,16)" rx="2" ry="2" />
<text  x="873.73" y="415.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b1b5858) (3 samples, 0.27%)</title><rect x="117.9" y="149" width="3.2" height="15.0" fill="rgb(253,7,23)" rx="2" ry="2" />
<text  x="120.86" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="245.1" y="149" width="1.1" height="15.0" fill="rgb(218,23,26)" rx="2" ry="2" />
<text  x="248.14" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1de218) (1 samples, 0.09%)</title><rect x="480.3" y="149" width="1.1" height="15.0" fill="rgb(251,11,10)" rx="2" ry="2" />
<text  x="483.27" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.18%)</title><rect x="707.9" y="453" width="2.1" height="15.0" fill="rgb(242,19,48)" rx="2" ry="2" />
<text  x="710.86" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1132.8" y="277" width="1.1" height="15.0" fill="rgb(214,227,0)" rx="2" ry="2" />
<text  x="1135.83" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="665.8" y="357" width="1.1" height="15.0" fill="rgb(206,107,32)" rx="2" ry="2" />
<text  x="668.80" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (522 samples, 47.71%)</title><rect x="100.6" y="421" width="563.0" height="15.0" fill="rgb(242,108,9)" rx="2" ry="2" />
<text  x="103.60" y="431.5" >std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiT..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (40 samples, 3.66%)</title><rect x="790.9" y="293" width="43.2" height="15.0" fill="rgb(218,12,36)" rx="2" ry="2" />
<text  x="793.91" y="303.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802d0b68c0, (1 samples, 0.09%)</title><rect x="809.3" y="197" width="1.0" height="15.0" fill="rgb(245,224,30)" rx="2" ry="2" />
<text  x="812.25" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (1 samples, 0.09%)</title><rect x="859.9" y="453" width="1.1" height="15.0" fill="rgb(250,180,35)" rx="2" ry="2" />
<text  x="862.95" y="463.5" ></text>
</g>
<g >
<title>std::(__val=1852) (1 samples, 0.09%)</title><rect x="866.4" y="469" width="1.1" height="15.0" fill="rgb(239,38,36)" rx="2" ry="2" />
<text  x="869.42" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7f8024a161b0) (1 samples, 0.09%)</title><rect x="798.5" y="181" width="1.0" height="15.0" fill="rgb(218,82,27)" rx="2" ry="2" />
<text  x="801.46" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (13 samples, 1.19%)</title><rect x="1115.6" y="453" width="14.0" height="15.0" fill="rgb(242,95,1)" rx="2" ry="2" />
<text  x="1118.58" y="463.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.09%)</title><rect x="67.2" y="197" width="1.0" height="15.0" fill="rgb(243,116,9)" rx="2" ry="2" />
<text  x="70.17" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, (522 samples, 47.71%)</title><rect x="100.6" y="437" width="563.0" height="15.0" fill="rgb(247,24,53)" rx="2" ry="2" />
<text  x="103.60" y="447.5" >std::__invoke_impl&lt;void,</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (5 samples, 0.46%)</title><rect x="464.1" y="261" width="5.4" height="15.0" fill="rgb(226,110,27)" rx="2" ry="2" />
<text  x="467.10" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1de218, (1 samples, 0.09%)</title><rect x="123.3" y="133" width="1.0" height="15.0" fill="rgb(233,16,43)" rx="2" ry="2" />
<text  x="126.25" y="143.5" ></text>
</g>
<g >
<title>std::swap&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="1137.1" y="309" width="1.1" height="15.0" fill="rgb(251,223,41)" rx="2" ry="2" />
<text  x="1140.15" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee26b59fb0) (1 samples, 0.09%)</title><rect x="1133.9" y="277" width="1.1" height="15.0" fill="rgb(229,30,11)" rx="2" ry="2" />
<text  x="1136.91" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="410.2" y="133" width="1.0" height="15.0" fill="rgb(243,174,37)" rx="2" ry="2" />
<text  x="413.16" y="143.5" ></text>
</g>
<g >
<title>__lll_unlock_wake_private (1 samples, 0.09%)</title><rect x="54.2" y="229" width="1.1" height="15.0" fill="rgb(224,190,54)" rx="2" ry="2" />
<text  x="57.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="1178.1" y="437" width="2.2" height="15.0" fill="rgb(235,42,19)" rx="2" ry="2" />
<text  x="1181.14" y="447.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="837.3" y="277" width="1.1" height="15.0" fill="rgb(210,184,50)" rx="2" ry="2" />
<text  x="840.29" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.09%)</title><rect x="888.0" y="437" width="1.1" height="15.0" fill="rgb(254,105,45)" rx="2" ry="2" />
<text  x="890.99" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b164a80, (1 samples, 0.09%)</title><rect x="441.4" y="133" width="1.1" height="15.0" fill="rgb(233,157,45)" rx="2" ry="2" />
<text  x="444.44" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;,std::unordered_map&lt;PageId, (1 samples, 0.09%)</title><rect x="395.1" y="213" width="1.0" height="15.0" fill="rgb(238,144,45)" rx="2" ry="2" />
<text  x="398.06" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.27%)</title><rect x="952.7" y="405" width="3.2" height="15.0" fill="rgb(212,39,9)" rx="2" ry="2" />
<text  x="955.71" y="415.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffea105e4e0, (1 samples, 0.09%)</title><rect x="1142.5" y="437" width="1.1" height="15.0" fill="rgb(213,88,22)" rx="2" ry="2" />
<text  x="1145.54" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.18%)</title><rect x="909.6" y="357" width="2.1" height="15.0" fill="rgb(215,187,32)" rx="2" ry="2" />
<text  x="912.56" y="367.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="676.6" y="277" width="1.1" height="15.0" fill="rgb(227,80,24)" rx="2" ry="2" />
<text  x="679.58" y="287.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee1fb0c5c0) (1 samples, 0.09%)</title><rect x="29.4" y="357" width="1.1" height="15.0" fill="rgb(207,62,28)" rx="2" ry="2" />
<text  x="32.41" y="367.5" ></text>
</g>
<g >
<title>std::(__val=792) (1 samples, 0.09%)</title><rect x="871.8" y="469" width="1.1" height="15.0" fill="rgb(210,129,15)" rx="2" ry="2" />
<text  x="874.81" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.55%)</title><rect x="988.3" y="421" width="6.5" height="15.0" fill="rgb(224,41,40)" rx="2" ry="2" />
<text  x="991.30" y="431.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (5 samples, 0.46%)</title><rect x="245.1" y="181" width="5.4" height="15.0" fill="rgb(219,137,25)" rx="2" ry="2" />
<text  x="248.14" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1147.9" y="405" width="1.1" height="15.0" fill="rgb(227,59,11)" rx="2" ry="2" />
<text  x="1150.93" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (18 samples, 1.65%)</title><rect x="304.5" y="165" width="19.4" height="15.0" fill="rgb(223,220,12)" rx="2" ry="2" />
<text  x="307.46" y="175.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (8 samples, 0.73%)</title><rect x="851.3" y="389" width="8.6" height="15.0" fill="rgb(245,19,10)" rx="2" ry="2" />
<text  x="854.32" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.27%)</title><rect x="1132.8" y="309" width="3.3" height="15.0" fill="rgb(231,118,15)" rx="2" ry="2" />
<text  x="1135.83" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f803c000020, (1 samples, 0.09%)</title><rect x="847.0" y="277" width="1.1" height="15.0" fill="rgb(240,121,5)" rx="2" ry="2" />
<text  x="850.00" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.09%)</title><rect x="966.7" y="469" width="1.1" height="15.0" fill="rgb(244,0,53)" rx="2" ry="2" />
<text  x="969.73" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.09%)</title><rect x="852.4" y="245" width="1.1" height="15.0" fill="rgb(215,205,47)" rx="2" ry="2" />
<text  x="855.39" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.09%)</title><rect x="474.9" y="117" width="1.1" height="15.0" fill="rgb(211,212,10)" rx="2" ry="2" />
<text  x="477.88" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802cef5f60, (1 samples, 0.09%)</title><rect x="808.2" y="197" width="1.1" height="15.0" fill="rgb(237,179,36)" rx="2" ry="2" />
<text  x="811.17" y="207.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.09%)</title><rect x="1141.5" y="437" width="1.0" height="15.0" fill="rgb(223,172,38)" rx="2" ry="2" />
<text  x="1144.46" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="967.8" y="453" width="7.6" height="15.0" fill="rgb(207,124,13)" rx="2" ry="2" />
<text  x="970.81" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (3 samples, 0.27%)</title><rect x="880.4" y="341" width="3.3" height="15.0" fill="rgb(231,223,29)" rx="2" ry="2" />
<text  x="883.44" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.09%)</title><rect x="378.9" y="53" width="1.1" height="15.0" fill="rgb(243,24,24)" rx="2" ry="2" />
<text  x="381.88" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="22.9" y="309" width="1.1" height="15.0" fill="rgb(235,101,23)" rx="2" ry="2" />
<text  x="25.94" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="891.2" y="373" width="1.1" height="15.0" fill="rgb(211,164,4)" rx="2" ry="2" />
<text  x="894.22" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5820) (2 samples, 0.18%)</title><rect x="476.0" y="149" width="2.1" height="15.0" fill="rgb(211,186,8)" rx="2" ry="2" />
<text  x="478.96" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (55 samples, 5.03%)</title><rect x="175.0" y="197" width="59.4" height="15.0" fill="rgb(209,122,24)" rx="2" ry="2" />
<text  x="178.03" y="207.5" >std::u..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (9 samples, 0.82%)</title><rect x="878.3" y="469" width="9.7" height="15.0" fill="rgb(215,72,25)" rx="2" ry="2" />
<text  x="881.28" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee33a2cea0, (1 samples, 0.09%)</title><rect x="943.0" y="213" width="1.1" height="15.0" fill="rgb(217,186,11)" rx="2" ry="2" />
<text  x="946.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (2 samples, 0.18%)</title><rect x="909.6" y="421" width="2.1" height="15.0" fill="rgb(228,201,24)" rx="2" ry="2" />
<text  x="912.56" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=256) (1 samples, 0.09%)</title><rect x="904.2" y="373" width="1.0" height="15.0" fill="rgb(238,200,36)" rx="2" ry="2" />
<text  x="907.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1188.9" y="517" width="1.1" height="15.0" fill="rgb(248,179,43)" rx="2" ry="2" />
<text  x="1191.92" y="527.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::updateRanks(iteration=4, (1 samples, 0.09%)</title><rect x="1154.4" y="501" width="1.1" height="15.0" fill="rgb(247,188,18)" rx="2" ry="2" />
<text  x="1157.41" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee268ef408, (1 samples, 0.09%)</title><rect x="947.3" y="309" width="1.1" height="15.0" fill="rgb(212,193,2)" rx="2" ry="2" />
<text  x="950.31" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="98.4" y="277" width="1.1" height="15.0" fill="rgb(215,82,49)" rx="2" ry="2" />
<text  x="101.45" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.09%)</title><rect x="891.2" y="405" width="1.1" height="15.0" fill="rgb(216,223,49)" rx="2" ry="2" />
<text  x="894.22" y="415.5" ></text>
</g>
<g >
<title>PageId::operator== (5 samples, 0.46%)</title><rect x="582.7" y="85" width="5.4" height="15.0" fill="rgb(214,33,51)" rx="2" ry="2" />
<text  x="585.74" y="95.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164b60) (1 samples, 0.09%)</title><rect x="236.5" y="149" width="1.1" height="15.0" fill="rgb(237,139,14)" rx="2" ry="2" />
<text  x="239.51" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (3 samples, 0.27%)</title><rect x="460.9" y="101" width="3.2" height="15.0" fill="rgb(223,120,41)" rx="2" ry="2" />
<text  x="463.86" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.09%)</title><rect x="704.6" y="405" width="1.1" height="15.0" fill="rgb(252,186,33)" rx="2" ry="2" />
<text  x="707.63" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.27%)</title><rect x="908.5" y="437" width="3.2" height="15.0" fill="rgb(232,39,36)" rx="2" ry="2" />
<text  x="911.48" y="447.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (6 samples, 0.55%)</title><rect x="899.9" y="501" width="6.4" height="15.0" fill="rgb(208,73,5)" rx="2" ry="2" />
<text  x="902.85" y="511.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn(n=&lt;optimized (1 samples, 0.09%)</title><rect x="863.2" y="389" width="1.1" height="15.0" fill="rgb(247,84,30)" rx="2" ry="2" />
<text  x="866.18" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate(this=0x7ffea105ed40, (1 samples, 0.09%)</title><rect x="1188.9" y="453" width="1.1" height="15.0" fill="rgb(221,54,31)" rx="2" ry="2" />
<text  x="1191.92" y="463.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait(this=0x55ee201acd30) (12 samples, 1.10%)</title><rect x="999.1" y="453" width="12.9" height="15.0" fill="rgb(231,132,36)" rx="2" ry="2" />
<text  x="1002.09" y="463.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b18cc98) (3 samples, 0.27%)</title><rect x="114.6" y="149" width="3.3" height="15.0" fill="rgb(225,132,2)" rx="2" ry="2" />
<text  x="117.63" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f8018f6d450, (1 samples, 0.09%)</title><rect x="793.1" y="197" width="1.0" height="15.0" fill="rgb(205,6,35)" rx="2" ry="2" />
<text  x="796.07" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_commonV2::_M_join (12 samples, 1.10%)</title><rect x="999.1" y="421" width="12.9" height="15.0" fill="rgb(235,6,46)" rx="2" ry="2" />
<text  x="1002.09" y="431.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.09%)</title><rect x="666.9" y="277" width="1.1" height="15.0" fill="rgb(254,149,26)" rx="2" ry="2" />
<text  x="669.87" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (31 samples, 2.83%)</title><rect x="38.0" y="325" width="33.5" height="15.0" fill="rgb(221,176,19)" rx="2" ry="2" />
<text  x="41.04" y="335.5" >st..</text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b18cc60) (1 samples, 0.09%)</title><rect x="344.4" y="149" width="1.0" height="15.0" fill="rgb(238,206,20)" rx="2" ry="2" />
<text  x="347.37" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802de1b670, (1 samples, 0.09%)</title><rect x="811.4" y="197" width="1.1" height="15.0" fill="rgb(214,200,21)" rx="2" ry="2" />
<text  x="814.41" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.09%)</title><rect x="1178.1" y="389" width="1.1" height="15.0" fill="rgb(227,160,47)" rx="2" ry="2" />
<text  x="1181.14" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b18cd08) (1 samples, 0.09%)</title><rect x="345.4" y="149" width="1.1" height="15.0" fill="rgb(240,86,18)" rx="2" ry="2" />
<text  x="348.45" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803d462fd0, (1 samples, 0.09%)</title><rect x="829.7" y="197" width="1.1" height="15.0" fill="rgb(224,108,24)" rx="2" ry="2" />
<text  x="832.74" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b164af0) (1 samples, 0.09%)</title><rect x="470.6" y="149" width="1.0" height="15.0" fill="rgb(251,181,31)" rx="2" ry="2" />
<text  x="473.57" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (14 samples, 1.28%)</title><rect x="834.1" y="325" width="15.1" height="15.0" fill="rgb(215,152,48)" rx="2" ry="2" />
<text  x="837.06" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="664.7" y="389" width="1.1" height="15.0" fill="rgb(224,201,41)" rx="2" ry="2" />
<text  x="667.72" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (522 samples, 47.71%)</title><rect x="100.6" y="485" width="563.0" height="15.0" fill="rgb(231,142,11)" rx="2" ry="2" />
<text  x="103.60" y="495.5" >std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::t..</text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188722386688, (8 samples, 0.73%)</title><rect x="1034.7" y="341" width="8.6" height="15.0" fill="rgb(225,218,13)" rx="2" ry="2" />
<text  x="1037.68" y="351.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.27%)</title><rect x="899.9" y="469" width="3.2" height="15.0" fill="rgb(251,177,0)" rx="2" ry="2" />
<text  x="902.85" y="479.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (10 samples, 0.91%)</title><rect x="560.1" y="149" width="10.8" height="15.0" fill="rgb(214,44,12)" rx="2" ry="2" />
<text  x="563.09" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee1f8ac948, (1 samples, 0.09%)</title><rect x="834.1" y="293" width="1.0" height="15.0" fill="rgb(209,155,35)" rx="2" ry="2" />
<text  x="837.06" y="303.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::initEdges (1 samples, 0.09%)</title><rect x="666.9" y="501" width="1.1" height="15.0" fill="rgb(253,161,2)" rx="2" ry="2" />
<text  x="669.87" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (2 samples, 0.18%)</title><rect x="953.8" y="373" width="2.1" height="15.0" fill="rgb(238,158,14)" rx="2" ry="2" />
<text  x="956.78" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (5 samples, 0.46%)</title><rect x="1181.4" y="389" width="5.4" height="15.0" fill="rgb(235,69,12)" rx="2" ry="2" />
<text  x="1184.37" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.37%)</title><rect x="298.0" y="117" width="4.3" height="15.0" fill="rgb(238,15,17)" rx="2" ry="2" />
<text  x="300.99" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.27%)</title><rect x="181.5" y="165" width="3.2" height="15.0" fill="rgb(205,71,1)" rx="2" ry="2" />
<text  x="184.50" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1143.6" y="389" width="1.1" height="15.0" fill="rgb(235,80,34)" rx="2" ry="2" />
<text  x="1146.62" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (1 samples, 0.09%)</title><rect x="967.8" y="341" width="1.1" height="15.0" fill="rgb(212,197,25)" rx="2" ry="2" />
<text  x="970.81" y="351.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (2 samples, 0.18%)</title><rect x="74.7" y="293" width="2.2" height="15.0" fill="rgb(237,162,44)" rx="2" ry="2" />
<text  x="77.72" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (13 samples, 1.19%)</title><rect x="381.0" y="101" width="14.1" height="15.0" fill="rgb(213,132,26)" rx="2" ry="2" />
<text  x="384.04" y="111.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::initEdges (2 samples, 0.18%)</title><rect x="965.6" y="501" width="2.2" height="15.0" fill="rgb(231,86,32)" rx="2" ry="2" />
<text  x="968.65" y="511.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (6 samples, 0.55%)</title><rect x="20.8" y="389" width="6.5" height="15.0" fill="rgb(249,189,54)" rx="2" ry="2" />
<text  x="23.79" y="399.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (45 samples, 4.11%)</title><rect x="899.9" y="517" width="48.5" height="15.0" fill="rgb(213,208,7)" rx="2" ry="2" />
<text  x="902.85" y="527.5" >Sing..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.09%)</title><rect x="1136.1" y="405" width="1.0" height="15.0" fill="rgb(229,182,40)" rx="2" ry="2" />
<text  x="1139.07" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=32768) (1 samples, 0.09%)</title><rect x="905.2" y="373" width="1.1" height="15.0" fill="rgb(250,40,38)" rx="2" ry="2" />
<text  x="908.25" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="437" width="1.0" height="15.0" fill="rgb(212,211,20)" rx="2" ry="2" />
<text  x="867.26" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="478.1" y="133" width="1.1" height="15.0" fill="rgb(206,43,35)" rx="2" ry="2" />
<text  x="481.12" y="143.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f802c000020, (1 samples, 0.09%)</title><rect x="809.3" y="181" width="1.0" height="15.0" fill="rgb(247,81,46)" rx="2" ry="2" />
<text  x="812.25" y="191.5" ></text>
</g>
<g >
<title>std::mutex::unlock (12 samples, 1.10%)</title><rect x="111.4" y="165" width="12.9" height="15.0" fill="rgb(245,118,12)" rx="2" ry="2" />
<text  x="114.39" y="175.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (1 samples, 0.09%)</title><rect x="1143.6" y="453" width="1.1" height="15.0" fill="rgb(242,118,43)" rx="2" ry="2" />
<text  x="1146.62" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8020000020) (1 samples, 0.09%)</title><rect x="848.1" y="261" width="1.1" height="15.0" fill="rgb(227,152,3)" rx="2" ry="2" />
<text  x="851.08" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b1b5890) (1 samples, 0.09%)</title><rect x="244.1" y="133" width="1.0" height="15.0" fill="rgb(245,40,15)" rx="2" ry="2" />
<text  x="247.06" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::EdgeInfo::~EdgeInfo (54 samples, 4.94%)</title><rect x="790.9" y="373" width="58.3" height="15.0" fill="rgb(253,203,47)" rx="2" ry="2" />
<text  x="793.91" y="383.5" >MultiT..</text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (50 samples, 4.57%)</title><rect x="342.2" y="309" width="53.9" height="15.0" fill="rgb(243,150,10)" rx="2" ry="2" />
<text  x="345.21" y="319.5" >std::..</text>
</g>
<g >
<title>operatornew(unsigned (9 samples, 0.82%)</title><rect x="878.3" y="357" width="9.7" height="15.0" fill="rgb(250,147,39)" rx="2" ry="2" />
<text  x="881.28" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55ee31d92970, (1 samples, 0.09%)</title><rect x="940.8" y="213" width="1.1" height="15.0" fill="rgb(218,72,36)" rx="2" ry="2" />
<text  x="943.84" y="223.5" ></text>
</g>
<g >
<title>Page::getId (3 samples, 0.27%)</title><rect x="899.9" y="485" width="3.2" height="15.0" fill="rgb(209,158,32)" rx="2" ry="2" />
<text  x="902.85" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 0.46%)</title><rect x="704.6" y="469" width="5.4" height="15.0" fill="rgb(213,134,35)" rx="2" ry="2" />
<text  x="707.63" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.09%)</title><rect x="888.0" y="453" width="1.1" height="15.0" fill="rgb(236,130,22)" rx="2" ry="2" />
<text  x="890.99" y="463.5" ></text>
</g>
<g >
<title>_itoa_word(value=86, (1 samples, 0.09%)</title><rect x="1142.5" y="421" width="1.1" height="15.0" fill="rgb(251,36,46)" rx="2" ry="2" />
<text  x="1145.54" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.09%)</title><rect x="666.9" y="373" width="1.1" height="15.0" fill="rgb(240,155,43)" rx="2" ry="2" />
<text  x="669.87" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (31 samples, 2.83%)</title><rect x="38.0" y="373" width="33.5" height="15.0" fill="rgb(212,157,45)" rx="2" ry="2" />
<text  x="41.04" y="383.5" >st..</text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (21 samples, 1.92%)</title><rect x="396.1" y="229" width="22.7" height="15.0" fill="rgb(252,109,21)" rx="2" ry="2" />
<text  x="399.14" y="239.5" >s..</text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b164b60) (1 samples, 0.09%)</title><rect x="246.2" y="149" width="1.1" height="15.0" fill="rgb(220,91,33)" rx="2" ry="2" />
<text  x="249.22" y="159.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (522 samples, 47.71%)</title><rect x="100.6" y="389" width="563.0" height="15.0" fill="rgb(219,25,21)" rx="2" ry="2" />
<text  x="103.60" y="399.5" >std::call_once&lt;void</text>
</g>
<g >
<title>std::call_once&lt;void (11 samples, 1.01%)</title><rect x="1012.0" y="405" width="11.9" height="15.0" fill="rgb(208,140,1)" rx="2" ry="2" />
<text  x="1015.03" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.09%)</title><rect x="378.9" y="69" width="1.1" height="15.0" fill="rgb(242,3,27)" rx="2" ry="2" />
<text  x="381.88" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (43 samples, 3.93%)</title><rect x="188.0" y="181" width="46.4" height="15.0" fill="rgb(224,147,20)" rx="2" ry="2" />
<text  x="190.97" y="191.5" >std:..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageIdAndRank*&gt;, (1 samples, 0.09%)</title><rect x="1146.9" y="405" width="1.0" height="15.0" fill="rgb(224,30,37)" rx="2" ry="2" />
<text  x="1149.86" y="415.5" ></text>
</g>
<g >
<title>__gthread_once(__func=&lt;optimized (522 samples, 47.71%)</title><rect x="100.6" y="373" width="563.0" height="15.0" fill="rgb(206,96,4)" rx="2" ry="2" />
<text  x="103.60" y="383.5" >__gthread_once(__func=&lt;optimized</text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (8 samples, 0.73%)</title><rect x="939.8" y="501" width="8.6" height="15.0" fill="rgb(228,119,5)" rx="2" ry="2" />
<text  x="942.76" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.09%)</title><rect x="974.3" y="373" width="1.1" height="15.0" fill="rgb(214,189,50)" rx="2" ry="2" />
<text  x="977.28" y="383.5" ></text>
</g>
<g >
<title>Page::~Page (5 samples, 0.46%)</title><rect x="893.4" y="501" width="5.4" height="15.0" fill="rgb(205,17,31)" rx="2" ry="2" />
<text  x="896.38" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f80279e5ba0, (1 samples, 0.09%)</title><rect x="802.8" y="197" width="1.1" height="15.0" fill="rgb(210,197,17)" rx="2" ry="2" />
<text  x="805.78" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188722386688, (2 samples, 0.18%)</title><rect x="731.6" y="341" width="2.1" height="15.0" fill="rgb(217,224,0)" rx="2" ry="2" />
<text  x="734.59" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.18%)</title><rect x="961.3" y="325" width="2.2" height="15.0" fill="rgb(211,132,24)" rx="2" ry="2" />
<text  x="964.33" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (21 samples, 1.92%)</title><rect x="396.1" y="309" width="22.7" height="15.0" fill="rgb(221,47,28)" rx="2" ry="2" />
<text  x="399.14" y="319.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1147.9" y="437" width="1.1" height="15.0" fill="rgb(227,61,36)" rx="2" ry="2" />
<text  x="1150.93" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (1 samples, 0.09%)</title><rect x="71.5" y="325" width="1.1" height="15.0" fill="rgb(245,178,1)" rx="2" ry="2" />
<text  x="74.48" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (8 samples, 0.73%)</title><rect x="939.8" y="389" width="8.6" height="15.0" fill="rgb(219,23,5)" rx="2" ry="2" />
<text  x="942.76" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (2 samples, 0.18%)</title><rect x="891.2" y="453" width="2.2" height="15.0" fill="rgb(212,22,11)" rx="2" ry="2" />
<text  x="894.22" y="463.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.18%)</title><rect x="707.9" y="437" width="2.1" height="15.0" fill="rgb(225,89,12)" rx="2" ry="2" />
<text  x="710.86" y="447.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageId (14 samples, 1.28%)</title><rect x="235.4" y="197" width="15.1" height="15.0" fill="rgb(228,37,4)" rx="2" ry="2" />
<text  x="238.43" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (31 samples, 2.83%)</title><rect x="38.0" y="389" width="33.5" height="15.0" fill="rgb(223,183,45)" rx="2" ry="2" />
<text  x="41.04" y="399.5" >st..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.09%)</title><rect x="468.4" y="101" width="1.1" height="15.0" fill="rgb(211,124,41)" rx="2" ry="2" />
<text  x="471.41" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="852.4" y="325" width="7.5" height="15.0" fill="rgb(250,9,23)" rx="2" ry="2" />
<text  x="855.39" y="335.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.09%)</title><rect x="55.3" y="213" width="1.1" height="15.0" fill="rgb(222,48,12)" rx="2" ry="2" />
<text  x="58.30" y="223.5" ></text>
</g>
<g >
<title>std::mutex::unlock (5 samples, 0.46%)</title><rect x="245.1" y="165" width="5.4" height="15.0" fill="rgb(230,69,7)" rx="2" ry="2" />
<text  x="248.14" y="175.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="834.1" y="261" width="1.0" height="15.0" fill="rgb(249,12,18)" rx="2" ry="2" />
<text  x="837.06" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b18cc98, (3 samples, 0.27%)</title><rect x="114.6" y="133" width="3.3" height="15.0" fill="rgb(252,122,54)" rx="2" ry="2" />
<text  x="117.63" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.09%)</title><rect x="966.7" y="485" width="1.1" height="15.0" fill="rgb(226,30,26)" rx="2" ry="2" />
<text  x="969.73" y="495.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (61 samples, 5.58%)</title><rect x="490.0" y="197" width="65.8" height="15.0" fill="rgb(244,189,47)" rx="2" ry="2" />
<text  x="492.98" y="207.5" >MultiTh..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.18%)</title><rect x="176.1" y="133" width="2.2" height="15.0" fill="rgb(225,76,41)" rx="2" ry="2" />
<text  x="179.11" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1de1e0, (2 samples, 0.18%)</title><rect x="121.1" y="133" width="2.2" height="15.0" fill="rgb(249,132,37)" rx="2" ry="2" />
<text  x="124.10" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (18 samples, 1.65%)</title><rect x="304.5" y="101" width="19.4" height="15.0" fill="rgb(226,200,22)" rx="2" ry="2" />
<text  x="307.46" y="111.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="868.6" y="437" width="1.1" height="15.0" fill="rgb(222,227,14)" rx="2" ry="2" />
<text  x="871.57" y="447.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="102.8" y="149" width="1.0" height="15.0" fill="rgb(208,117,18)" rx="2" ry="2" />
<text  x="105.76" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="859.9" y="261" width="1.1" height="15.0" fill="rgb(208,52,29)" rx="2" ry="2" />
<text  x="862.95" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffea105e850 (1 samples, 0.09%)</title><rect x="862.1" y="437" width="1.1" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="865.10" y="447.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.09%)</title><rect x="865.3" y="389" width="1.1" height="15.0" fill="rgb(249,49,15)" rx="2" ry="2" />
<text  x="868.34" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f801544e130, (1 samples, 0.09%)</title><rect x="792.0" y="197" width="1.1" height="15.0" fill="rgb(243,85,20)" rx="2" ry="2" />
<text  x="794.99" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1142.5" y="469" width="1.1" height="15.0" fill="rgb(217,2,13)" rx="2" ry="2" />
<text  x="1145.54" y="479.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::generateResult (3 samples, 0.27%)</title><rect x="1144.7" y="501" width="3.2" height="15.0" fill="rgb(249,66,47)" rx="2" ry="2" />
<text  x="1147.70" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (4 samples, 0.37%)</title><rect x="944.1" y="357" width="4.3" height="15.0" fill="rgb(229,29,46)" rx="2" ry="2" />
<text  x="947.08" y="367.5" ></text>
</g>
<g >
<title>PageId::~PageId (2 samples, 0.18%)</title><rect x="963.5" y="469" width="2.1" height="15.0" fill="rgb(231,161,29)" rx="2" ry="2" />
<text  x="966.49" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.09%)</title><rect x="665.8" y="453" width="1.1" height="15.0" fill="rgb(245,150,2)" rx="2" ry="2" />
<text  x="668.80" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.09%)</title><rect x="1143.6" y="357" width="1.1" height="15.0" fill="rgb(246,168,4)" rx="2" ry="2" />
<text  x="1146.62" y="367.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.09%)</title><rect x="859.9" y="421" width="1.1" height="15.0" fill="rgb(215,7,21)" rx="2" ry="2" />
<text  x="862.95" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.37%)</title><rect x="290.4" y="165" width="4.4" height="15.0" fill="rgb(242,223,1)" rx="2" ry="2" />
<text  x="293.44" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (4 samples, 0.37%)</title><rect x="413.4" y="101" width="4.3" height="15.0" fill="rgb(238,192,35)" rx="2" ry="2" />
<text  x="416.40" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.09%)</title><rect x="1147.9" y="373" width="1.1" height="15.0" fill="rgb(237,119,34)" rx="2" ry="2" />
<text  x="1150.93" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.09%)</title><rect x="1144.7" y="405" width="1.1" height="15.0" fill="rgb(242,112,1)" rx="2" ry="2" />
<text  x="1147.70" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (6 samples, 0.55%)</title><rect x="1129.6" y="405" width="6.5" height="15.0" fill="rgb(213,183,52)" rx="2" ry="2" />
<text  x="1132.60" y="415.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="1143.6" y="373" width="1.1" height="15.0" fill="rgb(207,83,29)" rx="2" ry="2" />
<text  x="1146.62" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="21.9" y="357" width="1.0" height="15.0" fill="rgb(254,27,30)" rx="2" ry="2" />
<text  x="24.86" y="367.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::AtomicIterator&lt;std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (16 samples, 1.46%)</title><rect x="325.0" y="197" width="17.2" height="15.0" fill="rgb(210,222,16)" rx="2" ry="2" />
<text  x="327.95" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1180.3" y="389" width="1.1" height="15.0" fill="rgb(214,50,23)" rx="2" ry="2" />
<text  x="1183.29" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.27%)</title><rect x="181.5" y="133" width="3.2" height="15.0" fill="rgb(244,14,22)" rx="2" ry="2" />
<text  x="184.50" y="143.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.09%)</title><rect x="396.1" y="181" width="1.1" height="15.0" fill="rgb(244,71,13)" rx="2" ry="2" />
<text  x="399.14" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::construct&lt;PageIdAndRank, (1 samples, 0.09%)</title><rect x="1145.8" y="437" width="1.1" height="15.0" fill="rgb(247,83,3)" rx="2" ry="2" />
<text  x="1148.78" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803ea3e080, (1 samples, 0.09%)</title><rect x="833.0" y="197" width="1.1" height="15.0" fill="rgb(232,133,19)" rx="2" ry="2" />
<text  x="835.98" y="207.5" ></text>
</g>
<g >
<title>std::(__val=1594) (1 samples, 0.09%)</title><rect x="864.3" y="469" width="1.0" height="15.0" fill="rgb(219,203,1)" rx="2" ry="2" />
<text  x="867.26" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="375.6" y="133" width="1.1" height="15.0" fill="rgb(233,43,35)" rx="2" ry="2" />
<text  x="378.65" y="143.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (8 samples, 0.73%)</title><rect x="1034.7" y="405" width="8.6" height="15.0" fill="rgb(235,38,36)" rx="2" ry="2" />
<text  x="1037.68" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="664.7" y="469" width="1.1" height="15.0" fill="rgb(207,50,34)" rx="2" ry="2" />
<text  x="667.72" y="479.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2a6c1bc8, (83 samples, 7.59%)</title><rect x="235.4" y="357" width="89.6" height="15.0" fill="rgb(227,92,48)" rx="2" ry="2" />
<text  x="238.43" y="367.5" >__pthread_..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.18%)</title><rect x="675.5" y="437" width="2.2" height="15.0" fill="rgb(207,24,31)" rx="2" ry="2" />
<text  x="678.50" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f803ad2ebc0, (1 samples, 0.09%)</title><rect x="823.3" y="197" width="1.1" height="15.0" fill="rgb(235,216,21)" rx="2" ry="2" />
<text  x="826.27" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee200e2e18, (1 samples, 0.09%)</title><rect x="839.5" y="293" width="1.0" height="15.0" fill="rgb(225,209,39)" rx="2" ry="2" />
<text  x="842.45" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (59 samples, 5.39%)</title><rect x="595.7" y="165" width="63.6" height="15.0" fill="rgb(213,170,47)" rx="2" ry="2" />
<text  x="598.69" y="175.5" >std::_..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x55ee2821e5c0) (1 samples, 0.09%)</title><rect x="939.8" y="197" width="1.0" height="15.0" fill="rgb(234,119,43)" rx="2" ry="2" />
<text  x="942.76" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="76.9" y="373" width="1.1" height="15.0" fill="rgb(211,43,54)" rx="2" ry="2" />
<text  x="79.87" y="383.5" ></text>
</g>
<g >
<title>__pthread_once_slow(once_control=0x55ee2b165058, (16 samples, 1.46%)</title><rect x="325.0" y="357" width="17.2" height="15.0" fill="rgb(209,205,41)" rx="2" ry="2" />
<text  x="327.95" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,std::__future_base::_Result_base::_Deleter&gt; (180 samples, 16.45%)</title><rect x="469.5" y="325" width="194.1" height="15.0" fill="rgb(206,165,11)" rx="2" ry="2" />
<text  x="472.49" y="335.5" >std::function&lt;std::unique..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.09%)</title><rect x="1170.6" y="453" width="1.1" height="15.0" fill="rgb(217,91,22)" rx="2" ry="2" />
<text  x="1173.59" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="468.4" y="133" width="1.1" height="15.0" fill="rgb(241,145,23)" rx="2" ry="2" />
<text  x="471.41" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1143.6" y="405" width="1.1" height="15.0" fill="rgb(234,19,42)" rx="2" ry="2" />
<text  x="1146.62" y="415.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8020000020, (1 samples, 0.09%)</title><rect x="1180.3" y="309" width="1.1" height="15.0" fill="rgb(222,68,53)" rx="2" ry="2" />
<text  x="1183.29" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.09%)</title><rect x="908.5" y="389" width="1.1" height="15.0" fill="rgb(240,70,7)" rx="2" ry="2" />
<text  x="911.48" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.09%)</title><rect x="1187.8" y="309" width="1.1" height="15.0" fill="rgb(225,97,29)" rx="2" ry="2" />
<text  x="1190.84" y="319.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::PageInfo::getLinkValue(iteration=&lt;optimized (1 samples, 0.09%)</title><rect x="906.3" y="485" width="1.1" height="15.0" fill="rgb(205,79,12)" rx="2" ry="2" />
<text  x="909.33" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (6 samples, 0.55%)</title><rect x="1129.6" y="389" width="6.5" height="15.0" fill="rgb(241,86,6)" rx="2" ry="2" />
<text  x="1132.60" y="399.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,MultiThreadedPageRankComputer::EdgeInfo, (17 samples, 1.55%)</title><rect x="78.0" y="405" width="18.3" height="15.0" fill="rgb(222,173,15)" rx="2" ry="2" />
<text  x="80.95" y="415.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (4 samples, 0.37%)</title><rect x="188.0" y="101" width="4.3" height="15.0" fill="rgb(209,83,2)" rx="2" ry="2" />
<text  x="190.97" y="111.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.09%)</title><rect x="891.2" y="389" width="1.1" height="15.0" fill="rgb(219,164,33)" rx="2" ry="2" />
<text  x="894.22" y="399.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.09%)</title><rect x="435.0" y="149" width="1.1" height="15.0" fill="rgb(243,183,20)" rx="2" ry="2" />
<text  x="437.97" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.64%)</title><rect x="955.9" y="453" width="7.6" height="15.0" fill="rgb(236,108,19)" rx="2" ry="2" />
<text  x="958.94" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.09%)</title><rect x="594.6" y="149" width="1.1" height="15.0" fill="rgb(212,55,12)" rx="2" ry="2" />
<text  x="597.61" y="159.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5858) (3 samples, 0.27%)</title><rect x="106.0" y="149" width="3.2" height="15.0" fill="rgb(245,196,18)" rx="2" ry="2" />
<text  x="109.00" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (3 samples, 0.27%)</title><rect x="181.5" y="117" width="3.2" height="15.0" fill="rgb(226,74,28)" rx="2" ry="2" />
<text  x="184.50" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="237.6" y="133" width="1.1" height="15.0" fill="rgb(220,117,29)" rx="2" ry="2" />
<text  x="240.59" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="20.8" y="325" width="1.1" height="15.0" fill="rgb(228,96,25)" rx="2" ry="2" />
<text  x="23.79" y="335.5" ></text>
</g>
<g >
<title>std::(__val=135830) (1 samples, 0.09%)</title><rect x="1139.3" y="485" width="1.1" height="15.0" fill="rgb(233,115,21)" rx="2" ry="2" />
<text  x="1142.31" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (4 samples, 0.37%)</title><rect x="464.1" y="101" width="4.3" height="15.0" fill="rgb(248,123,0)" rx="2" ry="2" />
<text  x="467.10" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.18%)</title><rect x="1149.0" y="469" width="2.2" height="15.0" fill="rgb(238,117,31)" rx="2" ry="2" />
<text  x="1152.01" y="479.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt(mutex=0x55ee2b1b5858, (2 samples, 0.18%)</title><rect x="118.9" y="133" width="2.2" height="15.0" fill="rgb(220,70,10)" rx="2" ry="2" />
<text  x="121.94" y="143.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;std::pair&lt;double, (74 samples, 6.76%)</title><rect x="711.1" y="469" width="79.8" height="15.0" fill="rgb(215,59,36)" rx="2" ry="2" />
<text  x="714.10" y="479.5" >std::__ba..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f802cedb170, (1 samples, 0.09%)</title><rect x="807.1" y="197" width="1.1" height="15.0" fill="rgb(239,72,41)" rx="2" ry="2" />
<text  x="810.09" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="666.9" y="437" width="1.1" height="15.0" fill="rgb(234,99,44)" rx="2" ry="2" />
<text  x="669.87" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.09%)</title><rect x="665.8" y="485" width="1.1" height="15.0" fill="rgb(247,127,33)" rx="2" ry="2" />
<text  x="668.80" y="495.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::updateRanks(MultiThreadedPageRankComputer::Pool&amp;, (21 samples, 1.92%)</title><rect x="418.8" y="261" width="22.6" height="15.0" fill="rgb(252,26,12)" rx="2" ry="2" />
<text  x="421.79" y="271.5" >s..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x55ee2b164b98) (1 samples, 0.09%)</title><rect x="101.7" y="133" width="1.1" height="15.0" fill="rgb(250,175,10)" rx="2" ry="2" />
<text  x="104.68" y="143.5" ></text>
</g>
<g >
<title>std::call_once&lt;void (10 samples, 0.91%)</title><rect x="1023.9" y="405" width="10.8" height="15.0" fill="rgb(229,17,44)" rx="2" ry="2" />
<text  x="1026.89" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (8 samples, 0.73%)</title><rect x="1180.3" y="501" width="8.6" height="15.0" fill="rgb(234,0,50)" rx="2" ry="2" />
<text  x="1183.29" y="511.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f8042d50c40 (9 samples, 0.82%)</title><rect x="1119.9" y="373" width="9.7" height="15.0" fill="rgb(225,149,29)" rx="2" ry="2" />
<text  x="1122.89" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x55ee2b1b5858) (1 samples, 0.09%)</title><rect x="243.0" y="149" width="1.1" height="15.0" fill="rgb(213,127,35)" rx="2" ry="2" />
<text  x="245.98" y="159.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="37.0" y="325" width="1.0" height="15.0" fill="rgb(244,20,5)" rx="2" ry="2" />
<text  x="39.97" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.09%)</title><rect x="375.6" y="101" width="1.1" height="15.0" fill="rgb(248,224,31)" rx="2" ry="2" />
<text  x="378.65" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (2 samples, 0.18%)</title><rect x="900.9" y="373" width="2.2" height="15.0" fill="rgb(223,76,3)" rx="2" ry="2" />
<text  x="903.93" y="383.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f800c000020, (1 samples, 0.09%)</title><rect x="790.9" y="181" width="1.1" height="15.0" fill="rgb(229,128,46)" rx="2" ry="2" />
<text  x="793.91" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::pair&lt;double, (125 samples, 11.43%)</title><rect x="100.6" y="229" width="134.8" height="15.0" fill="rgb(239,200,44)" rx="2" ry="2" />
<text  x="103.60" y="239.5" >std::__invoke_imp..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.09%)</title><rect x="1178.1" y="309" width="1.1" height="15.0" fill="rgb(215,117,50)" rx="2" ry="2" />
<text  x="1181.14" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.18%)</title><rect x="675.5" y="373" width="2.2" height="15.0" fill="rgb(220,38,50)" rx="2" ry="2" />
<text  x="678.50" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.18%)</title><rect x="74.7" y="245" width="2.2" height="15.0" fill="rgb(249,149,33)" rx="2" ry="2" />
<text  x="77.72" y="255.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock(__mutex=0x55ee2b18cc98) (1 samples, 0.09%)</title><rect x="481.4" y="149" width="1.0" height="15.0" fill="rgb(253,184,34)" rx="2" ry="2" />
<text  x="484.35" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (7 samples, 0.64%)</title><rect x="908.5" y="453" width="7.5" height="15.0" fill="rgb(219,110,9)" rx="2" ry="2" />
<text  x="911.48" y="463.5" ></text>
</g>
<g >
<title>Page::generateId (6 samples, 0.55%)</title><rect x="20.8" y="405" width="6.5" height="15.0" fill="rgb(220,117,33)" rx="2" ry="2" />
<text  x="23.79" y="415.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (10 samples, 0.91%)</title><rect x="100.6" y="181" width="10.8" height="15.0" fill="rgb(225,116,48)" rx="2" ry="2" />
<text  x="103.60" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (54 samples, 4.94%)</title><rect x="790.9" y="389" width="58.3" height="15.0" fill="rgb(213,91,36)" rx="2" ry="2" />
<text  x="793.91" y="399.5" >std::p..</text>
</g>
<g >
<title>std::call_once&lt;void (6 samples, 0.55%)</title><rect x="719.7" y="405" width="6.5" height="15.0" fill="rgb(210,209,46)" rx="2" ry="2" />
<text  x="722.73" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (13 samples, 1.19%)</title><rect x="381.0" y="117" width="14.1" height="15.0" fill="rgb(205,45,50)" rx="2" ry="2" />
<text  x="384.04" y="127.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1183.5" y="229" width="1.1" height="15.0" fill="rgb(249,159,12)" rx="2" ry="2" />
<text  x="1186.53" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="967.8" y="325" width="1.1" height="15.0" fill="rgb(225,201,9)" rx="2" ry="2" />
<text  x="970.81" y="335.5" ></text>
</g>
<g >
<title>all (1,094 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(214,92,7)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f8042d50c40 (1 samples, 0.09%)</title><rect x="1188.9" y="437" width="1.1" height="15.0" fill="rgb(250,155,29)" rx="2" ry="2" />
<text  x="1191.92" y="447.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.09%)</title><rect x="1144.7" y="469" width="1.1" height="15.0" fill="rgb(237,127,19)" rx="2" ry="2" />
<text  x="1147.70" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140188826781440, (4 samples, 0.37%)</title><rect x="679.8" y="453" width="4.3" height="15.0" fill="rgb(213,86,21)" rx="2" ry="2" />
<text  x="682.82" y="463.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.09%)</title><rect x="665.8" y="405" width="1.1" height="15.0" fill="rgb(232,204,14)" rx="2" ry="2" />
<text  x="668.80" y="415.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (5 samples, 0.46%)</title><rect x="1138.2" y="501" width="5.4" height="15.0" fill="rgb(212,33,40)" rx="2" ry="2" />
<text  x="1141.23" y="511.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f8042d50c40 (3 samples, 0.27%)</title><rect x="856.7" y="229" width="3.2" height="15.0" fill="rgb(232,143,48)" rx="2" ry="2" />
<text  x="859.71" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (16 samples, 1.46%)</title><rect x="325.0" y="309" width="17.2" height="15.0" fill="rgb(224,197,53)" rx="2" ry="2" />
<text  x="327.95" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="1144.7" y="437" width="1.1" height="15.0" fill="rgb(206,222,12)" rx="2" ry="2" />
<text  x="1147.70" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="864.3" y="373" width="1.0" height="15.0" fill="rgb(219,141,0)" rx="2" ry="2" />
<text  x="867.26" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55ee2a3fabb8, (1 samples, 0.09%)</title><rect x="1187.8" y="341" width="1.1" height="15.0" fill="rgb(212,223,21)" rx="2" ry="2" />
<text  x="1190.84" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.37%)</title><rect x="188.0" y="37" width="4.3" height="15.0" fill="rgb(208,53,32)" rx="2" ry="2" />
<text  x="190.97" y="47.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.09%)</title><rect x="893.4" y="485" width="1.1" height="15.0" fill="rgb(210,169,34)" rx="2" ry="2" />
<text  x="896.38" y="495.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes (9 samples, 0.82%)</title><rect x="1180.3" y="533" width="9.7" height="15.0" fill="rgb(219,170,44)" rx="2" ry="2" />
<text  x="1183.29" y="543.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2 samples, 0.18%)</title><rect x="107.1" y="117" width="2.1" height="15.0" fill="rgb(218,9,53)" rx="2" ry="2" />
<text  x="110.07" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.37%)</title><rect x="188.0" y="133" width="4.3" height="15.0" fill="rgb(206,28,49)" rx="2" ry="2" />
<text  x="190.97" y="143.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.09%)</title><rect x="816.8" y="181" width="1.1" height="15.0" fill="rgb(210,138,34)" rx="2" ry="2" />
<text  x="819.80" y="191.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.18%)</title><rect x="98.4" y="389" width="2.2" height="15.0" fill="rgb(218,165,6)" rx="2" ry="2" />
<text  x="101.45" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.09%)</title><rect x="22.9" y="341" width="1.1" height="15.0" fill="rgb(239,181,7)" rx="2" ry="2" />
<text  x="25.94" y="351.5" ></text>
</g>
</g>
</svg>
